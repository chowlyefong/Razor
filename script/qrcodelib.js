





<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://assets-cdn.github.com">
  <link rel="dns-prefetch" href="https://avatars0.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars1.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars2.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars3.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">



  <link crossorigin="anonymous" media="all" integrity="sha512-xDUBo/erIsvp+BfhdzOufUdXzU28h21fW2/HU+uLqSKuu06jMMM4JnCtZ3TiRolRoTS3w9q6FQKKPi8Ai5wt+A==" rel="stylesheet" href="https://assets-cdn.github.com/assets/frameworks-482d575624bca06cd70dd916252519ab.css" />
  <link crossorigin="anonymous" media="all" integrity="sha512-Zv3x09u0Axvb3XVv1qb/xBokBjv++6VinZTd9QnYSYDsshwUhTOvqzoFp8Kw8fghtuWEr5Dfe+/TaeUJy5sEJw==" rel="stylesheet" href="https://assets-cdn.github.com/assets/github-98f0e9b94fdbb019dde1c304f706c1a4.css" />
  
  
  <link crossorigin="anonymous" media="all" integrity="sha512-bleOe1gZSXugCYcdlimkFFS/72Q0+9y2DhyL7HLW1IYf+A24GZRkckSLj41cEsMWZO75qBw7ba7RNCEQTnt8vA==" rel="stylesheet" href="https://assets-cdn.github.com/assets/site-f6ae432608e23ad57af9343d2ea3d19d.css" />
  

  <meta name="viewport" content="width=device-width">
  
  <title>webcodecamjs/qrcodelib.js at master · andrastoth/webcodecamjs · GitHub</title>
    <meta name="description" content="GitHub is where people build software. More than 27 million people use GitHub to discover, fork, and contribute to over 80 million projects.">
  <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    
    <meta property="og:image" content="https://avatars3.githubusercontent.com/u/2009969?s=400&amp;v=4" /><meta property="og:site_name" content="GitHub" /><meta property="og:type" content="object" /><meta property="og:title" content="andrastoth/webcodecamjs" /><meta property="og:url" content="https://github.com/andrastoth/webcodecamjs" /><meta property="og:description" content="webcodecamjs - Demo page" />

  <link rel="assets" href="https://assets-cdn.github.com/">
  
  <meta name="pjax-timeout" content="1000">
  
  <meta name="request-id" content="E92D:30AC:163D122:203ECB7:5AE72F8F" data-pjax-transient>


  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

    <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
  <meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
  <meta name="google-site-verification" content="GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc">
    <meta name="google-analytics" content="UA-3769691-2">

<meta name="octolytics-host" content="collector.githubapp.com" /><meta name="octolytics-app-id" content="github" /><meta name="octolytics-event-url" content="https://collector.githubapp.com/github-external/browser_event" /><meta name="octolytics-dimension-request_id" content="E92D:30AC:163D122:203ECB7:5AE72F8F" /><meta name="octolytics-dimension-region_edge" content="ap-southeast-1" /><meta name="octolytics-dimension-region_render" content="iad" />
<meta name="analytics-location" content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" />




  <meta class="js-ga-set" name="dimension1" content="Logged Out">


  

      <meta name="hostname" content="github.com">
    <meta name="user-login" content="">

      <meta name="expected-hostname" content="github.com">
    <meta name="js-proxy-site-detection-payload" content="Y2U1ZWQwOGQ1MjdjNGEyN2Y1ZDRkYmUzZTIxNjNiMzZiMDQ5Y2JhZjZhYjlmZmM1NjNiZGFmYzI2NDZmNDJhOHx7InJlbW90ZV9hZGRyZXNzIjoiMTIxLjEyMS4xMDIuMTYiLCJyZXF1ZXN0X2lkIjoiRTkyRDozMEFDOjE2M0QxMjI6MjAzRUNCNzo1QUU3MkY4RiIsInRpbWVzdGFtcCI6MTUyNTEwMDQ3NywiaG9zdCI6ImdpdGh1Yi5jb20ifQ==">

    <meta name="enabled-features" content="UNIVERSE_BANNER,FREE_TRIALS,MARKETPLACE_INSIGHTS,MARKETPLACE_SELF_SERVE,MARKETPLACE_FREE_APPS,MARKETPLACE_INSIGHTS_CONVERSION_PERCENTAGES">

  <meta name="html-safe-nonce" content="593c9da7007b39f4325da71bb5859fac1b3e1145">

  <meta http-equiv="x-pjax-version" content="d51c597727e16d5ba3bc9367e3098ab5">
  

      <link href="https://github.com/andrastoth/webcodecamjs/commits/master.atom" rel="alternate" title="Recent Commits to webcodecamjs:master" type="application/atom+xml">

  <meta name="description" content="webcodecamjs - Demo page">
  <meta name="go-import" content="github.com/andrastoth/webcodecamjs git https://github.com/andrastoth/webcodecamjs.git">

  <meta name="octolytics-dimension-user_id" content="2009969" /><meta name="octolytics-dimension-user_login" content="andrastoth" /><meta name="octolytics-dimension-repository_id" content="37208359" /><meta name="octolytics-dimension-repository_nwo" content="andrastoth/webcodecamjs" /><meta name="octolytics-dimension-repository_public" content="true" /><meta name="octolytics-dimension-repository_is_fork" content="false" /><meta name="octolytics-dimension-repository_network_root_id" content="37208359" /><meta name="octolytics-dimension-repository_network_root_nwo" content="andrastoth/webcodecamjs" /><meta name="octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown" content="false" />


    <link rel="canonical" href="https://github.com/andrastoth/webcodecamjs/blob/master/js/qrcodelib.js" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" class="js-site-favicon" href="https://assets-cdn.github.com/favicon.ico">

<meta name="theme-color" content="#1e2327">


  <meta name="u2f-support" content="true">

<link rel="manifest" href="/manifest.json" crossOrigin="use-credentials">

  </head>

  <body class="logged-out env-production page-blob">
    

  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="px-2 py-4 bg-blue text-white show-on-focus js-skip-to-content">Skip to content</a>
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>

    
    
    



        <header class="Header header-logged-out  position-relative f4 py-3" role="banner">
  <div class="container-lg d-flex px-3">
    <div class="d-flex flex-justify-between flex-items-center">
      <a class="header-logo-invertocat my-0" href="https://github.com/" aria-label="Homepage" data-ga-click="(Logged out) Header, go to homepage, icon:logo-wordmark">
        <svg height="32" class="octicon octicon-mark-github" viewBox="0 0 16 16" version="1.1" width="32" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
      </a>

    </div>

    <div class="HeaderMenu HeaderMenu--bright d-flex flex-justify-between flex-auto">
        <nav class="mt-0">
          <ul class="d-flex list-style-none">
              <li class="ml-2">
                <a class="js-selected-navigation-item HeaderNavlink px-0 py-2 m-0" data-ga-click="Header, click, Nav menu - item:features" data-selected-links="/features /features/project-management /features/code-review /features/project-management /features/integrations /features" href="/features">
                  Features
</a>              </li>
              <li class="ml-4">
                <a class="js-selected-navigation-item HeaderNavlink px-0 py-2 m-0" data-ga-click="Header, click, Nav menu - item:business" data-selected-links="/business /business/security /business/customers /business" href="/business">
                  Business
</a>              </li>

              <li class="ml-4">
                <a class="js-selected-navigation-item HeaderNavlink px-0 py-2 m-0" data-ga-click="Header, click, Nav menu - item:explore" data-selected-links="/explore /trending /trending/developers /integrations /integrations/feature/code /integrations/feature/collaborate /integrations/feature/ship showcases showcases_search showcases_landing /explore" href="/explore">
                  Explore
</a>              </li>

              <li class="ml-4">
                    <a class="js-selected-navigation-item HeaderNavlink px-0 py-2 m-0" data-ga-click="Header, click, Nav menu - item:marketplace" data-selected-links=" /marketplace" href="/marketplace">
                      Marketplace
</a>              </li>
              <li class="ml-4">
                <a class="js-selected-navigation-item HeaderNavlink px-0 py-2 m-0" data-ga-click="Header, click, Nav menu - item:pricing" data-selected-links="/pricing /pricing/developer /pricing/team /pricing/business-hosted /pricing/business-enterprise /pricing" href="/pricing">
                  Pricing
</a>              </li>
          </ul>
        </nav>

      <div class="d-flex">
          <div class="d-lg-flex flex-items-center mr-3">
            <div class="header-search scoped-search site-scoped-search js-site-search" role="search">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-site-search-form" data-scope-type="Repository" data-scope-id="37208359" data-scoped-search-url="/andrastoth/webcodecamjs/search" data-unscoped-search-url="/search" action="/andrastoth/webcodecamjs/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
    <label class="form-control header-search-wrapper  js-chromeless-input-container">
          <a class="header-search-scope no-underline" href="/andrastoth/webcodecamjs/blob/master/js/qrcodelib.js">This repository</a>
      <input type="text"
        class="form-control header-search-input  js-site-search-focus js-site-search-field is-clearable"
        data-hotkey="s,/"
        name="q"
        value=""
        placeholder="Search"
        aria-label="Search this repository"
        data-unscoped-placeholder="Search GitHub"
        data-scoped-placeholder="Search"
        autocapitalize="off"
        >
        <input type="hidden" class="js-site-search-type-field" name="type" >
    </label>
</form></div>

          </div>

        <span class="d-inline-block">
            <div class="HeaderNavlink px-0 py-2 m-0">
              <a class="text-bold text-white no-underline" href="/login?return_to=%2Fandrastoth%2Fwebcodecamjs%2Fblob%2Fmaster%2Fjs%2Fqrcodelib.js" data-ga-click="(Logged out) Header, clicked Sign in, text:sign-in">Sign in</a>
                <span class="text-gray">or</span>
                <a class="text-bold text-white no-underline" href="/join?source=header-repo" data-ga-click="(Logged out) Header, clicked Sign up, text:sign-up">Sign up</a>
            </div>
        </span>
      </div>
    </div>
  </div>
</header>

  </div>

  <div id="start-of-content" class="show-on-focus"></div>

    <div id="js-flash-container">
</div>



  <div role="main" class="application-main ">
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode" class="">
    <div id="js-repo-pjax-container" data-pjax-container >
      







  <div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav  ">
    <div class="repohead-details-container clearfix container">

      <ul class="pagehead-actions">
  <li>
      <a href="/login?return_to=%2Fandrastoth%2Fwebcodecamjs"
    class="btn btn-sm btn-with-count tooltipped tooltipped-n"
    aria-label="You must be signed in to watch a repository" rel="nofollow">
    <svg class="octicon octicon-eye" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
    Watch
  </a>
  <a class="social-count" href="/andrastoth/webcodecamjs/watchers"
     aria-label="14 users are watching this repository">
    14
  </a>

  </li>

  <li>
      <a href="/login?return_to=%2Fandrastoth%2Fwebcodecamjs"
    class="btn btn-sm btn-with-count tooltipped tooltipped-n"
    aria-label="You must be signed in to star a repository" rel="nofollow">
    <svg class="octicon octicon-star" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
    Star
  </a>

    <a class="social-count js-social-count" href="/andrastoth/webcodecamjs/stargazers"
      aria-label="121 users starred this repository">
      121
    </a>

  </li>

  <li>
      <a href="/login?return_to=%2Fandrastoth%2Fwebcodecamjs"
        class="btn btn-sm btn-with-count tooltipped tooltipped-n"
        aria-label="You must be signed in to fork a repository" rel="nofollow">
        <svg class="octicon octicon-repo-forked" viewBox="0 0 10 16" version="1.1" width="10" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
        Fork
      </a>

    <a href="/andrastoth/webcodecamjs/network" class="social-count"
       aria-label="64 users forked this repository">
      64
    </a>
  </li>
</ul>

      <h1 class="public ">
  <svg class="octicon octicon-repo" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a class="url fn" rel="author" href="/andrastoth">andrastoth</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a data-pjax="#js-repo-pjax-container" href="/andrastoth/webcodecamjs">webcodecamjs</a></strong>

</h1>

    </div>
    
<nav class="reponav js-repo-nav js-sidenav-container-pjax container"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
     role="navigation"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a class="js-selected-navigation-item selected reponav-item" itemprop="url" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages /andrastoth/webcodecamjs" href="/andrastoth/webcodecamjs">
      <svg class="octicon octicon-code" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a itemprop="url" data-hotkey="g i" class="js-selected-navigation-item reponav-item" data-selected-links="repo_issues repo_labels repo_milestones /andrastoth/webcodecamjs/issues" href="/andrastoth/webcodecamjs/issues">
        <svg class="octicon octicon-issue-opened" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="Counter">16</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a data-hotkey="g p" itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_pulls checks /andrastoth/webcodecamjs/pulls" href="/andrastoth/webcodecamjs/pulls">
      <svg class="octicon octicon-git-pull-request" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="Counter">1</span>
      <meta itemprop="position" content="3">
</a>  </span>

    <a data-hotkey="g b" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /andrastoth/webcodecamjs/projects" href="/andrastoth/webcodecamjs/projects">
      <svg class="octicon octicon-project" viewBox="0 0 15 16" version="1.1" width="15" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      Projects
      <span class="Counter" >0</span>
</a>


  <a class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors dependency_graph pulse /andrastoth/webcodecamjs/pulse" href="/andrastoth/webcodecamjs/pulse">
    <svg class="octicon octicon-graph" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
    Insights
</a>

</nav>


  </div>

<div class="container new-discussion-timeline experiment-repo-nav  ">
  <div class="repository-content ">

    
  <a class="d-none js-permalink-shortcut" data-hotkey="y" href="/andrastoth/webcodecamjs/blob/96fd16922fbe92ce566dfff2e1be57cac55d7b5c/js/qrcodelib.js">Permalink</a>

  <!-- blob contrib key: blob_contributors:v21:c3de8d1c12ef7f833aba4fcf62724a33 -->

  <div class="file-navigation">
    
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left">
  <button class=" btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    
    type="button" aria-label="Switch branches or tags" aria-expanded="false" aria-haspopup="true">
      <i>Branch:</i>
      <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg class="octicon octicon-x js-menu-close" role="img" aria-label="Close" viewBox="0 0 12 16" version="1.1" width="12" height="16"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tag…" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/andrastoth/webcodecamjs/blob/gh-pages/js/qrcodelib.js"
               data-name="gh-pages"
               data-skip-pjax="true"
               rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                gh-pages
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/andrastoth/webcodecamjs/blob/master/js/qrcodelib.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                master
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

    <div class="BtnGroup float-right">
      <a href="/andrastoth/webcodecamjs/find/master"
            class="js-pjax-capture-input btn btn-sm BtnGroup-item"
            data-pjax
            data-hotkey="t">
        Find file
      </a>
      <clipboard-copy for="blob-path" class="btn btn-sm BtnGroup-item">
        Copy path
      </clipboard-copy>
    </div>
    <div id="blob-path" class="breadcrumb">
      <span class="repo-root js-repo-root"><span class="js-path-segment"><a data-pjax="true" href="/andrastoth/webcodecamjs"><span>webcodecamjs</span></a></span></span><span class="separator">/</span><span class="js-path-segment"><a data-pjax="true" href="/andrastoth/webcodecamjs/tree/master/js"><span>js</span></a></span><span class="separator">/</span><strong class="final-path">qrcodelib.js</strong>
    </div>
  </div>


  <include-fragment src="/andrastoth/webcodecamjs/contributors/master/js/qrcodelib.js" class="commit-tease">
    <div>
      Fetching contributors&hellip;
    </div>

    <div class="commit-tease-contributors">
      <img alt="" class="loader-loading float-left" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" height="16" />
      <span class="loader-error">Cannot retrieve contributors at this time</span>
    </div>
</include-fragment>


  <div class="file">
    <div class="file-header">
  <div class="file-actions">

    <div class="BtnGroup">
      <a id="raw-url" class="btn btn-sm BtnGroup-item" href="/andrastoth/webcodecamjs/raw/master/js/qrcodelib.js">Raw</a>
        <a class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b" href="/andrastoth/webcodecamjs/blame/master/js/qrcodelib.js">Blame</a>
      <a rel="nofollow" class="btn btn-sm BtnGroup-item" href="/andrastoth/webcodecamjs/commits/master/js/qrcodelib.js">History</a>
    </div>

        <a class="btn-octicon tooltipped tooltipped-nw"
           href="https://desktop.github.com"
           aria-label="Open this file in GitHub Desktop"
           data-ga-click="Repository, open with desktop, type:windows">
            <svg class="octicon octicon-device-desktop" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
        </a>

        <button type="button" class="btn-octicon disabled tooltipped tooltipped-nw"
          aria-label="You must be signed in to make or propose changes">
          <svg class="octicon octicon-pencil" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
        </button>
        <button type="button" class="btn-octicon btn-octicon-danger disabled tooltipped tooltipped-nw"
          aria-label="You must be signed in to make or propose changes">
          <svg class="octicon octicon-trashcan" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
        </button>
  </div>

  <div class="file-info">
      153 lines (152 sloc)
      <span class="file-info-divider"></span>
    66.6 KB
  </div>
</div>

    

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line">GridSampler<span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">GridSampler</span>.<span class="pl-en">checkAndNudgePoints</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">image</span>,<span class="pl-smi">points</span>){<span class="pl-k">var</span> width<span class="pl-k">=</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>;<span class="pl-k">var</span> height<span class="pl-k">=</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span>;<span class="pl-k">var</span> nudged<span class="pl-k">=</span><span class="pl-c1">true</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> offset<span class="pl-k">=</span><span class="pl-c1">0</span>;offset<span class="pl-k">&lt;</span><span class="pl-smi">points</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>nudged;offset<span class="pl-k">+=</span><span class="pl-c1">2</span>){<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(points[offset]);<span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(points[offset<span class="pl-k">+</span><span class="pl-c1">1</span>]);<span class="pl-k">if</span>(x<span class="pl-k">&lt;</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">||</span>x<span class="pl-k">&gt;</span>width<span class="pl-k">||</span>y<span class="pl-k">&lt;</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">||</span>y<span class="pl-k">&gt;</span>height)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Error.checkAndNudgePoints <span class="pl-pds">&quot;</span></span>;nudged<span class="pl-k">=</span><span class="pl-c1">false</span>;<span class="pl-k">if</span>(x<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span>){points[offset]<span class="pl-k">=</span><span class="pl-c1">0</span>;nudged<span class="pl-k">=</span><span class="pl-c1">true</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(x<span class="pl-k">==</span>width){points[offset]<span class="pl-k">=</span>width<span class="pl-k">-</span><span class="pl-c1">1</span>;nudged<span class="pl-k">=</span><span class="pl-c1">true</span>}<span class="pl-k">if</span>(y<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span>){points[offset<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;nudged<span class="pl-k">=</span><span class="pl-c1">true</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(y<span class="pl-k">==</span>height){points[offset<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>height<span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line">nudged<span class="pl-k">=</span><span class="pl-c1">true</span>}}nudged<span class="pl-k">=</span><span class="pl-c1">true</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> offset<span class="pl-k">=</span><span class="pl-smi">points</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">2</span>;offset<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>nudged;offset<span class="pl-k">-=</span><span class="pl-c1">2</span>){<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(points[offset]);<span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(points[offset<span class="pl-k">+</span><span class="pl-c1">1</span>]);<span class="pl-k">if</span>(x<span class="pl-k">&lt;</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">||</span>x<span class="pl-k">&gt;</span>width<span class="pl-k">||</span>y<span class="pl-k">&lt;</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">||</span>y<span class="pl-k">&gt;</span>height)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Error.checkAndNudgePoints <span class="pl-pds">&quot;</span></span>;nudged<span class="pl-k">=</span><span class="pl-c1">false</span>;<span class="pl-k">if</span>(x<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span>){points[offset]<span class="pl-k">=</span><span class="pl-c1">0</span>;nudged<span class="pl-k">=</span><span class="pl-c1">true</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(x<span class="pl-k">==</span>width){points[offset]<span class="pl-k">=</span>width<span class="pl-k">-</span><span class="pl-c1">1</span>;nudged<span class="pl-k">=</span><span class="pl-c1">true</span>}<span class="pl-k">if</span>(y<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span>){points[offset<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;nudged<span class="pl-k">=</span><span class="pl-c1">true</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(y<span class="pl-k">==</span>height){points[offset<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>height<span class="pl-k">-</span><span class="pl-c1">1</span>;nudged<span class="pl-k">=</span><span class="pl-c1">true</span>}}};</td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">GridSampler</span>.<span class="pl-en">sampleGrid3</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">image</span>,<span class="pl-smi">dimension</span>,<span class="pl-smi">transform</span>){<span class="pl-k">var</span> bits<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">BitMatrix</span>(dimension);<span class="pl-k">var</span> points<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(dimension<span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-c1">0</span>;y<span class="pl-k">&lt;</span>dimension;y<span class="pl-k">++</span>){<span class="pl-k">var</span> max<span class="pl-k">=</span><span class="pl-smi">points</span>.<span class="pl-c1">length</span>;<span class="pl-k">var</span> iValue<span class="pl-k">=</span>y<span class="pl-k">+</span><span class="pl-c1">.5</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-c1">0</span>;x<span class="pl-k">&lt;</span>max;x<span class="pl-k">+=</span><span class="pl-c1">2</span>){points[x]<span class="pl-k">=</span>(x<span class="pl-k">&gt;&gt;</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-c1">.5</span>;points[x<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>iValue}<span class="pl-smi">transform</span>.<span class="pl-en">transformPoints1</span>(points);<span class="pl-smi">GridSampler</span>.<span class="pl-en">checkAndNudgePoints</span>(image,points);<span class="pl-k">try</span>{<span class="pl-k">for</span>(<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-c1">0</span>;x<span class="pl-k">&lt;</span>max;x<span class="pl-k">+=</span><span class="pl-c1">2</span>){<span class="pl-k">var</span> xpoint<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(points[x])<span class="pl-k">*</span><span class="pl-c1">4</span><span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(points[x<span class="pl-k">+</span><span class="pl-c1">1</span>])<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span><span class="pl-k">*</span><span class="pl-c1">4</span>;<span class="pl-k">var</span> bit<span class="pl-k">=</span>image[<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(points[x])<span class="pl-k">+</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(points[x<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>])];<span class="pl-smi">qrcode</span>.<span class="pl-smi">imagedata</span>.<span class="pl-c1">data</span>[xpoint]<span class="pl-k">=</span>bit<span class="pl-k">?</span><span class="pl-c1">255</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-smi">qrcode</span>.<span class="pl-smi">imagedata</span>.<span class="pl-c1">data</span>[xpoint<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>bit<span class="pl-k">?</span><span class="pl-c1">255</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-smi">qrcode</span>.<span class="pl-smi">imagedata</span>.<span class="pl-c1">data</span>[xpoint<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">qrcode</span>.<span class="pl-smi">imagedata</span>.<span class="pl-c1">data</span>[xpoint<span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">255</span>;<span class="pl-k">if</span>(bit)<span class="pl-smi">bits</span>.<span class="pl-en">set_Renamed</span>(x<span class="pl-k">&gt;&gt;</span><span class="pl-c1">1</span>,y)}}<span class="pl-k">catch</span>(aioobe){<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Error.checkAndNudgePoints<span class="pl-pds">&quot;</span></span>;}}<span class="pl-k">return</span> bits};</td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">GridSampler</span>.<span class="pl-en">sampleGridx</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">image</span>,<span class="pl-smi">dimension</span>,<span class="pl-smi">p1ToX</span>,<span class="pl-smi">p1ToY</span>,<span class="pl-smi">p2ToX</span>,<span class="pl-smi">p2ToY</span>,<span class="pl-smi">p3ToX</span>,<span class="pl-smi">p3ToY</span>,<span class="pl-smi">p4ToX</span>,<span class="pl-smi">p4ToY</span>,<span class="pl-smi">p1FromX</span>,<span class="pl-smi">p1FromY</span>,<span class="pl-smi">p2FromX</span>,<span class="pl-smi">p2FromY</span>,<span class="pl-smi">p3FromX</span>,<span class="pl-smi">p3FromY</span>,<span class="pl-smi">p4FromX</span>,<span class="pl-smi">p4FromY</span>){<span class="pl-k">var</span> transform<span class="pl-k">=</span><span class="pl-smi">PerspectiveTransform</span>.<span class="pl-en">quadrilateralToQuadrilateral</span>(p1ToX,p1ToY,p2ToX,p2ToY,p3ToX,p3ToY,p4ToX,p4ToY,p1FromX,p1FromY,p2FromX,p2FromY,p3FromX,p3FromY,p4FromX,p4FromY);<span class="pl-k">return</span> <span class="pl-smi">GridSampler</span>.<span class="pl-en">sampleGrid3</span>(image,dimension,transform)};</td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">ECB</span>(<span class="pl-smi">count</span>,<span class="pl-smi">dataCodewords</span>){<span class="pl-c1">this</span>.<span class="pl-smi">count</span><span class="pl-k">=</span>count;<span class="pl-c1">this</span>.<span class="pl-smi">dataCodewords</span><span class="pl-k">=</span>dataCodewords;<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Count<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">count</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>DataCodewords<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">dataCodewords</span>})}</td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">ECBlocks</span>(<span class="pl-smi">ecCodewordsPerBlock</span>,<span class="pl-smi">ecBlocks1</span>,<span class="pl-smi">ecBlocks2</span>){<span class="pl-c1">this</span>.<span class="pl-smi">ecCodewordsPerBlock</span><span class="pl-k">=</span>ecCodewordsPerBlock;<span class="pl-k">if</span>(ecBlocks2)<span class="pl-c1">this</span>.<span class="pl-smi">ecBlocks</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(ecBlocks1,ecBlocks2);<span class="pl-k">else</span> <span class="pl-c1">this</span>.<span class="pl-smi">ecBlocks</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(ecBlocks1);<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ECCodewordsPerBlock<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">ecCodewordsPerBlock</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>TotalECCodewords<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">ecCodewordsPerBlock</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">NumBlocks</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NumBlocks<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">var</span> total<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">ecBlocks</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>)total<span class="pl-k">+=</span><span class="pl-c1">this</span>.<span class="pl-smi">ecBlocks</span>[i].<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> total});<span class="pl-c1">this</span>.<span class="pl-en">getECBlocks</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">ecBlocks</span>}}</td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Version</span>(<span class="pl-smi">versionNumber</span>,<span class="pl-smi">alignmentPatternCenters</span>,<span class="pl-smi">ecBlocks1</span>,<span class="pl-smi">ecBlocks2</span>,<span class="pl-smi">ecBlocks3</span>,<span class="pl-smi">ecBlocks4</span>){<span class="pl-c1">this</span>.<span class="pl-smi">versionNumber</span><span class="pl-k">=</span>versionNumber;<span class="pl-c1">this</span>.<span class="pl-smi">alignmentPatternCenters</span><span class="pl-k">=</span>alignmentPatternCenters;<span class="pl-c1">this</span>.<span class="pl-smi">ecBlocks</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(ecBlocks1,ecBlocks2,ecBlocks3,ecBlocks4);<span class="pl-k">var</span> total<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> ecCodewords<span class="pl-k">=</span><span class="pl-smi">ecBlocks1</span>.<span class="pl-smi">ECCodewordsPerBlock</span>;<span class="pl-k">var</span> ecbArray<span class="pl-k">=</span><span class="pl-smi">ecBlocks1</span>.<span class="pl-en">getECBlocks</span>();<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">ecbArray</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">var</span> ecBlock<span class="pl-k">=</span>ecbArray[i];total<span class="pl-k">+=</span><span class="pl-smi">ecBlock</span>.<span class="pl-smi">Count</span><span class="pl-k">*</span>(<span class="pl-smi">ecBlock</span>.<span class="pl-smi">DataCodewords</span><span class="pl-k">+</span>ecCodewords)}<span class="pl-c1">this</span>.<span class="pl-smi">totalCodewords</span><span class="pl-k">=</span>total;<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VersionNumber<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">versionNumber</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>AlignmentPatternCenters<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">alignmentPatternCenters</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>TotalCodewords<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">totalCodewords</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>DimensionForVersion<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">17</span><span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">versionNumber</span>});<span class="pl-c1">this</span>.<span class="pl-en">buildFunctionPattern</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> dimension<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">DimensionForVersion</span>;<span class="pl-k">var</span> bitMatrix<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">BitMatrix</span>(dimension);<span class="pl-smi">bitMatrix</span>.<span class="pl-en">setRegion</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>);<span class="pl-smi">bitMatrix</span>.<span class="pl-en">setRegion</span>(dimension<span class="pl-k">-</span><span class="pl-c1">8</span>,<span class="pl-c1">0</span>,<span class="pl-c1">8</span>,<span class="pl-c1">9</span>);<span class="pl-smi">bitMatrix</span>.<span class="pl-en">setRegion</span>(<span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line">dimension<span class="pl-k">-</span><span class="pl-c1">8</span>,<span class="pl-c1">9</span>,<span class="pl-c1">8</span>);<span class="pl-k">var</span> max<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">alignmentPatternCenters</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-c1">0</span>;x<span class="pl-k">&lt;</span>max;x<span class="pl-k">++</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">alignmentPatternCenters</span>[x]<span class="pl-k">-</span><span class="pl-c1">2</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-c1">0</span>;y<span class="pl-k">&lt;</span>max;y<span class="pl-k">++</span>){<span class="pl-k">if</span>(x<span class="pl-k">==</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(y<span class="pl-k">==</span><span class="pl-c1">0</span><span class="pl-k">||</span>y<span class="pl-k">==</span>max<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">||</span>x<span class="pl-k">==</span>max<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>y<span class="pl-k">==</span><span class="pl-c1">0</span>)<span class="pl-k">continue</span>;<span class="pl-smi">bitMatrix</span>.<span class="pl-en">setRegion</span>(<span class="pl-c1">this</span>.<span class="pl-smi">alignmentPatternCenters</span>[y]<span class="pl-k">-</span><span class="pl-c1">2</span>,i,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>)}}<span class="pl-smi">bitMatrix</span>.<span class="pl-en">setRegion</span>(<span class="pl-c1">6</span>,<span class="pl-c1">9</span>,<span class="pl-c1">1</span>,dimension<span class="pl-k">-</span><span class="pl-c1">17</span>);<span class="pl-smi">bitMatrix</span>.<span class="pl-en">setRegion</span>(<span class="pl-c1">9</span>,<span class="pl-c1">6</span>,dimension<span class="pl-k">-</span><span class="pl-c1">17</span>,<span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">versionNumber</span><span class="pl-k">&gt;</span><span class="pl-c1">6</span>){<span class="pl-smi">bitMatrix</span>.<span class="pl-en">setRegion</span>(dimension<span class="pl-k">-</span><span class="pl-c1">11</span>,<span class="pl-c1">0</span>,<span class="pl-c1">3</span>,<span class="pl-c1">6</span>);<span class="pl-smi">bitMatrix</span>.<span class="pl-en">setRegion</span>(<span class="pl-c1">0</span>,dimension<span class="pl-k">-</span><span class="pl-c1">11</span>,<span class="pl-c1">6</span>,<span class="pl-c1">3</span>)}<span class="pl-k">return</span> bitMatrix};<span class="pl-c1">this</span>.<span class="pl-en">getECBlocksForLevel</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">ecLevel</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">ecBlocks</span>[<span class="pl-smi">ecLevel</span>.<span class="pl-en">ordinal</span>()]}}</td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Version</span>.<span class="pl-c1">VERSION_DECODE_INFO</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">31892</span>,<span class="pl-c1">34236</span>,<span class="pl-c1">39577</span>,<span class="pl-c1">42195</span>,<span class="pl-c1">48118</span>,<span class="pl-c1">51042</span>,<span class="pl-c1">55367</span>,<span class="pl-c1">58893</span>,<span class="pl-c1">63784</span>,<span class="pl-c1">68472</span>,<span class="pl-c1">70749</span>,<span class="pl-c1">76311</span>,<span class="pl-c1">79154</span>,<span class="pl-c1">84390</span>,<span class="pl-c1">87683</span>,<span class="pl-c1">92361</span>,<span class="pl-c1">96236</span>,<span class="pl-c1">102084</span>,<span class="pl-c1">102881</span>,<span class="pl-c1">110507</span>,<span class="pl-c1">110734</span>,<span class="pl-c1">117786</span>,<span class="pl-c1">119615</span>,<span class="pl-c1">126325</span>,<span class="pl-c1">127568</span>,<span class="pl-c1">133589</span>,<span class="pl-c1">136944</span>,<span class="pl-c1">141498</span>,<span class="pl-c1">145311</span>,<span class="pl-c1">150283</span>,<span class="pl-c1">152622</span>,<span class="pl-c1">158308</span>,<span class="pl-c1">161089</span>,<span class="pl-c1">167017</span>);<span class="pl-smi">Version</span>.<span class="pl-c1">VERSIONS</span><span class="pl-k">=</span><span class="pl-en">buildVersions</span>();<span class="pl-smi">Version</span>.<span class="pl-en">getVersionForNumber</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">versionNumber</span>){<span class="pl-k">if</span>(versionNumber<span class="pl-k">&lt;</span><span class="pl-c1">1</span><span class="pl-k">||</span>versionNumber<span class="pl-k">&gt;</span><span class="pl-c1">40</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>ArgumentException<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> <span class="pl-smi">Version</span>.<span class="pl-c1">VERSIONS</span>[versionNumber<span class="pl-k">-</span><span class="pl-c1">1</span>]};</td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Version</span>.<span class="pl-en">getProvisionalVersionForDimension</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">dimension</span>){<span class="pl-k">if</span>(dimension<span class="pl-k">%</span><span class="pl-c1">4</span><span class="pl-k">!=</span><span class="pl-c1">1</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Error getProvisionalVersionForDimension<span class="pl-pds">&quot;</span></span>;<span class="pl-k">try</span>{<span class="pl-k">return</span> <span class="pl-smi">Version</span>.<span class="pl-en">getVersionForNumber</span>(dimension<span class="pl-k">-</span><span class="pl-c1">17</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>)}<span class="pl-k">catch</span>(iae){<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Error getVersionForNumber<span class="pl-pds">&quot;</span></span>;}};</td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Version</span>.<span class="pl-en">decodeVersionInformation</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">versionBits</span>){<span class="pl-k">var</span> bestDifference<span class="pl-k">=</span><span class="pl-c1">4294967295</span>;<span class="pl-k">var</span> bestVersion<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">Version</span>.<span class="pl-c1">VERSION_DECODE_INFO</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">var</span> targetVersion<span class="pl-k">=</span><span class="pl-smi">Version</span>.<span class="pl-c1">VERSION_DECODE_INFO</span>[i];<span class="pl-k">if</span>(targetVersion<span class="pl-k">==</span>versionBits)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getVersionForNumber</span>(i<span class="pl-k">+</span><span class="pl-c1">7</span>);<span class="pl-k">var</span> bitsDifference<span class="pl-k">=</span><span class="pl-smi">FormatInformation</span>.<span class="pl-en">numBitsDiffering</span>(versionBits,targetVersion);<span class="pl-k">if</span>(bitsDifference<span class="pl-k">&lt;</span>bestDifference){bestVersion<span class="pl-k">=</span>i<span class="pl-k">+</span><span class="pl-c1">7</span>;bestDifference<span class="pl-k">=</span>bitsDifference}}<span class="pl-k">if</span>(bestDifference<span class="pl-k">&lt;=</span><span class="pl-c1">3</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getVersionForNumber</span>(bestVersion);</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">null</span>};</td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">buildVersions</span>(){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">1</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>,<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">7</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">19</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">10</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">16</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">13</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">13</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">17</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">9</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">2</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">18</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">10</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">34</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">16</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">28</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">22</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">3</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">22</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">15</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">55</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">44</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">18</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">17</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">13</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">4</span>,</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">26</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">20</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">80</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">18</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">32</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">24</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">16</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">9</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">5</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">30</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">108</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">43</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">18</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">16</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">11</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">12</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">6</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">34</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">18</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">68</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">16</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">27</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">19</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">15</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">7</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,</td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">22</span>,<span class="pl-c1">38</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">20</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">78</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">18</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">31</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">18</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">14</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">15</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">13</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">14</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">8</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">24</span>,<span class="pl-c1">42</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">97</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">38</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">39</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">18</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">19</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">14</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">15</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">9</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">26</span>,<span class="pl-c1">46</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">116</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">36</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">37</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">20</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">16</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,</td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">17</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">12</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">13</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">10</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">28</span>,<span class="pl-c1">50</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">18</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">68</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">69</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">43</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">44</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">19</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">20</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">11</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">54</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">20</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">81</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">50</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">51</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">22</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">23</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">12</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">8</span>,<span class="pl-c1">13</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">12</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">32</span>,<span class="pl-c1">58</span>),</td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">92</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">93</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">36</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">37</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">20</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">21</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">14</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">15</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">13</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">34</span>,<span class="pl-c1">62</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">107</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">8</span>,<span class="pl-c1">37</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">38</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">8</span>,<span class="pl-c1">20</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">21</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">12</span>,<span class="pl-c1">11</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">12</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">14</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">26</span>,<span class="pl-c1">46</span>,<span class="pl-c1">66</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">115</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">116</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">40</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">41</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">20</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">11</span>,<span class="pl-c1">16</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">17</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">11</span>,<span class="pl-c1">12</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">13</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">15</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">26</span>,<span class="pl-c1">48</span>,<span class="pl-c1">70</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">87</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">88</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">41</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">42</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">11</span>,<span class="pl-c1">12</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">13</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">16</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">26</span>,<span class="pl-c1">50</span>,<span class="pl-c1">74</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">98</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">99</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">45</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">46</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">15</span>,<span class="pl-c1">19</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">20</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">13</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">17</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">54</span>,<span class="pl-c1">78</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">107</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">108</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">46</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">47</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">22</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">15</span>,<span class="pl-c1">23</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">14</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">17</span>,<span class="pl-c1">15</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">18</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">56</span>,<span class="pl-c1">82</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">120</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">121</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">9</span>,<span class="pl-c1">43</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">44</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">17</span>,<span class="pl-c1">22</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">23</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">14</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">19</span>,<span class="pl-c1">15</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">19</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">30</span>,<span class="pl-c1">58</span>,<span class="pl-c1">86</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">113</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">114</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">44</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">11</span>,<span class="pl-c1">45</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">17</span>,<span class="pl-c1">21</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">22</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">9</span>,<span class="pl-c1">13</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">16</span>,<span class="pl-c1">14</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">20</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">34</span>,<span class="pl-c1">62</span>,<span class="pl-c1">90</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">107</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">108</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">41</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">13</span>,<span class="pl-c1">42</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">15</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">15</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">21</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">28</span>,<span class="pl-c1">50</span>,<span class="pl-c1">72</span>,<span class="pl-c1">94</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">116</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,</td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">117</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">17</span>,<span class="pl-c1">42</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">17</span>,<span class="pl-c1">22</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">23</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">19</span>,<span class="pl-c1">16</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">17</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">26</span>,<span class="pl-c1">50</span>,<span class="pl-c1">74</span>,<span class="pl-c1">98</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">111</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">112</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">17</span>,<span class="pl-c1">46</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">16</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">34</span>,<span class="pl-c1">13</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">23</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">54</span>,<span class="pl-c1">74</span>,<span class="pl-c1">102</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">121</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">122</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">47</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">48</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">11</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,</td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">16</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">28</span>,<span class="pl-c1">54</span>,<span class="pl-c1">80</span>,<span class="pl-c1">106</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">117</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">118</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">45</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">46</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">11</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">16</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">30</span>,<span class="pl-c1">16</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">17</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">25</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">32</span>,<span class="pl-c1">58</span>,<span class="pl-c1">84</span>,<span class="pl-c1">110</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">8</span>,<span class="pl-c1">106</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">107</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">8</span>,<span class="pl-c1">47</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">13</span>,<span class="pl-c1">48</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">22</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">22</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">13</span>,</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">58</span>,<span class="pl-c1">86</span>,<span class="pl-c1">114</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">114</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">115</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">19</span>,<span class="pl-c1">46</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">47</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">28</span>,<span class="pl-c1">22</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">23</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">33</span>,<span class="pl-c1">16</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">17</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">27</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">34</span>,<span class="pl-c1">62</span>,<span class="pl-c1">90</span>,<span class="pl-c1">118</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">8</span>,<span class="pl-c1">122</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">123</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">22</span>,<span class="pl-c1">45</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">46</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">8</span>,<span class="pl-c1">23</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">26</span>,<span class="pl-c1">24</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">12</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">28</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">26</span>,<span class="pl-c1">50</span>,<span class="pl-c1">74</span>,<span class="pl-c1">98</span>,</td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">122</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">117</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">118</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">45</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">23</span>,<span class="pl-c1">46</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">31</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">11</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">31</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">29</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">54</span>,<span class="pl-c1">78</span>,<span class="pl-c1">102</span>,<span class="pl-c1">126</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">116</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">117</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">21</span>,<span class="pl-c1">45</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">46</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">23</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">37</span>,<span class="pl-c1">24</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">19</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">26</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">26</span>,<span class="pl-c1">52</span>,<span class="pl-c1">78</span>,<span class="pl-c1">104</span>,<span class="pl-c1">130</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">115</span>),</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">116</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">19</span>,<span class="pl-c1">47</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">48</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">15</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">25</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">23</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">25</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">31</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">56</span>,<span class="pl-c1">82</span>,<span class="pl-c1">108</span>,<span class="pl-c1">134</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">13</span>,<span class="pl-c1">115</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">116</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">46</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">29</span>,<span class="pl-c1">47</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">42</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">23</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">28</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">32</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">34</span>,<span class="pl-c1">60</span>,<span class="pl-c1">86</span>,<span class="pl-c1">112</span>,<span class="pl-c1">138</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">17</span>,<span class="pl-c1">115</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">46</span>),</td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">23</span>,<span class="pl-c1">47</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">35</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">19</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">35</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">33</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">58</span>,<span class="pl-c1">86</span>,<span class="pl-c1">114</span>,<span class="pl-c1">142</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">17</span>,<span class="pl-c1">115</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">116</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">46</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">21</span>,<span class="pl-c1">47</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">29</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">19</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">11</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">46</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">34</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">34</span>,<span class="pl-c1">62</span>,<span class="pl-c1">90</span>,<span class="pl-c1">118</span>,<span class="pl-c1">146</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">13</span>,<span class="pl-c1">115</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">116</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">46</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">23</span>,<span class="pl-c1">47</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">44</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">59</span>,<span class="pl-c1">16</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">17</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">35</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">54</span>,<span class="pl-c1">78</span>,<span class="pl-c1">102</span>,<span class="pl-c1">126</span>,<span class="pl-c1">150</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">12</span>,<span class="pl-c1">121</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">122</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">12</span>,<span class="pl-c1">47</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">26</span>,<span class="pl-c1">48</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">39</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">22</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">41</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">36</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">24</span>,<span class="pl-c1">50</span>,<span class="pl-c1">76</span>,<span class="pl-c1">102</span>,<span class="pl-c1">128</span>,<span class="pl-c1">154</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">121</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">122</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">47</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">34</span>,<span class="pl-c1">48</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">46</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">64</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">37</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">28</span>,<span class="pl-c1">54</span>,<span class="pl-c1">80</span>,<span class="pl-c1">106</span>,<span class="pl-c1">132</span>,<span class="pl-c1">158</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">17</span>,<span class="pl-c1">122</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">123</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">29</span>,<span class="pl-c1">46</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">47</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">49</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">24</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">46</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">38</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">32</span>,<span class="pl-c1">58</span>,<span class="pl-c1">84</span>,<span class="pl-c1">110</span>,<span class="pl-c1">136</span>,<span class="pl-c1">162</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">122</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">18</span>,<span class="pl-c1">123</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">13</span>,<span class="pl-c1">46</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">32</span>,<span class="pl-c1">47</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">48</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">42</span>,</td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">32</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">39</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">26</span>,<span class="pl-c1">54</span>,<span class="pl-c1">82</span>,<span class="pl-c1">110</span>,<span class="pl-c1">138</span>,<span class="pl-c1">166</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">20</span>,<span class="pl-c1">117</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">118</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">40</span>,<span class="pl-c1">47</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">48</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">43</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">22</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">67</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">40</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">58</span>,<span class="pl-c1">86</span>,<span class="pl-c1">114</span>,<span class="pl-c1">142</span>,<span class="pl-c1">170</span>),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">19</span>,<span class="pl-c1">118</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">119</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">18</span>,<span class="pl-c1">47</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">31</span>,<span class="pl-c1">48</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">34</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">34</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">20</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">61</span>,<span class="pl-c1">16</span>))))}</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">PerspectiveTransform</span>(<span class="pl-smi">a11</span>,<span class="pl-smi">a21</span>,<span class="pl-smi">a31</span>,<span class="pl-smi">a12</span>,<span class="pl-smi">a22</span>,<span class="pl-smi">a32</span>,<span class="pl-smi">a13</span>,<span class="pl-smi">a23</span>,<span class="pl-smi">a33</span>){<span class="pl-c1">this</span>.<span class="pl-smi">a11</span><span class="pl-k">=</span>a11;<span class="pl-c1">this</span>.<span class="pl-smi">a12</span><span class="pl-k">=</span>a12;<span class="pl-c1">this</span>.<span class="pl-smi">a13</span><span class="pl-k">=</span>a13;<span class="pl-c1">this</span>.<span class="pl-smi">a21</span><span class="pl-k">=</span>a21;<span class="pl-c1">this</span>.<span class="pl-smi">a22</span><span class="pl-k">=</span>a22;<span class="pl-c1">this</span>.<span class="pl-smi">a23</span><span class="pl-k">=</span>a23;<span class="pl-c1">this</span>.<span class="pl-smi">a31</span><span class="pl-k">=</span>a31;<span class="pl-c1">this</span>.<span class="pl-smi">a32</span><span class="pl-k">=</span>a32;<span class="pl-c1">this</span>.<span class="pl-smi">a33</span><span class="pl-k">=</span>a33;<span class="pl-c1">this</span>.<span class="pl-en">transformPoints1</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">points</span>){<span class="pl-k">var</span> max<span class="pl-k">=</span><span class="pl-smi">points</span>.<span class="pl-c1">length</span>;<span class="pl-k">var</span> a11<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">a11</span>;<span class="pl-k">var</span> a12<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">a12</span>;<span class="pl-k">var</span> a13<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">a13</span>;<span class="pl-k">var</span> a21<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">a21</span>;<span class="pl-k">var</span> a22<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">a22</span>;<span class="pl-k">var</span> a23<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">a23</span>;<span class="pl-k">var</span> a31<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">a31</span>;<span class="pl-k">var</span> a32<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">a32</span>;<span class="pl-k">var</span> a33<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">a33</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>max;i<span class="pl-k">+=</span><span class="pl-c1">2</span>){<span class="pl-k">var</span> x<span class="pl-k">=</span>points[i];<span class="pl-k">var</span> y<span class="pl-k">=</span>points[i<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-k">var</span> denominator<span class="pl-k">=</span>a13<span class="pl-k">*</span>x<span class="pl-k">+</span>a23<span class="pl-k">*</span>y<span class="pl-k">+</span>a33;points[i]<span class="pl-k">=</span>(a11<span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line">x<span class="pl-k">+</span>a21<span class="pl-k">*</span>y<span class="pl-k">+</span>a31)<span class="pl-k">/</span>denominator;points[i<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>(a12<span class="pl-k">*</span>x<span class="pl-k">+</span>a22<span class="pl-k">*</span>y<span class="pl-k">+</span>a32)<span class="pl-k">/</span>denominator}};<span class="pl-c1">this</span>.<span class="pl-en">transformPoints2</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">xValues</span>,<span class="pl-smi">yValues</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">xValues</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>n;i<span class="pl-k">++</span>){<span class="pl-k">var</span> x<span class="pl-k">=</span>xValues[i];<span class="pl-k">var</span> y<span class="pl-k">=</span>yValues[i];<span class="pl-k">var</span> denominator<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">a13</span><span class="pl-k">*</span>x<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a23</span><span class="pl-k">*</span>y<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a33</span>;xValues[i]<span class="pl-k">=</span>(<span class="pl-c1">this</span>.<span class="pl-smi">a11</span><span class="pl-k">*</span>x<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a21</span><span class="pl-k">*</span>y<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a31</span>)<span class="pl-k">/</span>denominator;yValues[i]<span class="pl-k">=</span>(<span class="pl-c1">this</span>.<span class="pl-smi">a12</span><span class="pl-k">*</span>x<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a22</span><span class="pl-k">*</span>y<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a32</span>)<span class="pl-k">/</span>denominator}};<span class="pl-c1">this</span>.<span class="pl-en">buildAdjoint</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PerspectiveTransform</span>(<span class="pl-c1">this</span>.<span class="pl-smi">a22</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">a33</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">a23</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">a32</span>,<span class="pl-c1">this</span>.<span class="pl-smi">a23</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">a31</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">a21</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">a33</span>,<span class="pl-c1">this</span>.<span class="pl-smi">a21</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">a32</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">a22</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">a31</span>,<span class="pl-c1">this</span>.<span class="pl-smi">a13</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">a32</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">a12</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">a33</span>,<span class="pl-c1">this</span>.<span class="pl-smi">a11</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">a33</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">a13</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">a31</span>,<span class="pl-c1">this</span>.<span class="pl-smi">a12</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">a31</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">a11</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">a32</span>,<span class="pl-c1">this</span>.<span class="pl-smi">a12</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">a23</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">a13</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">a22</span>,<span class="pl-c1">this</span>.<span class="pl-smi">a13</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">a21</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">a11</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">a23</span>,<span class="pl-c1">this</span>.<span class="pl-smi">a11</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">a22</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">a12</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">a21</span>)};<span class="pl-c1">this</span>.<span class="pl-en">times</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">other</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PerspectiveTransform</span>(<span class="pl-c1">this</span>.<span class="pl-smi">a11</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a11</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a21</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a12</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a31</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a13</span>,<span class="pl-c1">this</span>.<span class="pl-smi">a11</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a21</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a21</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a22</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a31</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a23</span>,<span class="pl-c1">this</span>.<span class="pl-smi">a11</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a31</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a21</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a32</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a31</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a33</span>,<span class="pl-c1">this</span>.<span class="pl-smi">a12</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a11</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a22</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a12</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">a32</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a13</span>,<span class="pl-c1">this</span>.<span class="pl-smi">a12</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a21</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a22</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a22</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a32</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a23</span>,<span class="pl-c1">this</span>.<span class="pl-smi">a12</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a31</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a22</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a32</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a32</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a33</span>,<span class="pl-c1">this</span>.<span class="pl-smi">a13</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a11</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a23</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a12</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a33</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a13</span>,<span class="pl-c1">this</span>.<span class="pl-smi">a13</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a21</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a23</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a22</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a33</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a23</span>,<span class="pl-c1">this</span>.<span class="pl-smi">a13</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a31</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a23</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a32</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">a33</span><span class="pl-k">*</span><span class="pl-smi">other</span>.<span class="pl-smi">a33</span>)}}</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">PerspectiveTransform</span>.<span class="pl-en">quadrilateralToQuadrilateral</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">x0</span>,<span class="pl-smi">y0</span>,<span class="pl-smi">x1</span>,<span class="pl-smi">y1</span>,<span class="pl-smi">x2</span>,<span class="pl-smi">y2</span>,<span class="pl-smi">x3</span>,<span class="pl-smi">y3</span>,<span class="pl-smi">x0p</span>,<span class="pl-smi">y0p</span>,<span class="pl-smi">x1p</span>,<span class="pl-smi">y1p</span>,<span class="pl-smi">x2p</span>,<span class="pl-smi">y2p</span>,<span class="pl-smi">x3p</span>,<span class="pl-smi">y3p</span>){<span class="pl-k">var</span> qToS<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">quadrilateralToSquare</span>(x0,y0,x1,y1,x2,y2,x3,y3);<span class="pl-k">var</span> sToQ<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">squareToQuadrilateral</span>(x0p,y0p,x1p,y1p,x2p,y2p,x3p,y3p);<span class="pl-k">return</span> <span class="pl-smi">sToQ</span>.<span class="pl-en">times</span>(qToS)};</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">PerspectiveTransform</span>.<span class="pl-en">squareToQuadrilateral</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">x0</span>,<span class="pl-smi">y0</span>,<span class="pl-smi">x1</span>,<span class="pl-smi">y1</span>,<span class="pl-smi">x2</span>,<span class="pl-smi">y2</span>,<span class="pl-smi">x3</span>,<span class="pl-smi">y3</span>){dy2<span class="pl-k">=</span>y3<span class="pl-k">-</span>y2;dy3<span class="pl-k">=</span>y0<span class="pl-k">-</span>y1<span class="pl-k">+</span>y2<span class="pl-k">-</span>y3;<span class="pl-k">if</span>(dy2<span class="pl-k">==</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>dy3<span class="pl-k">==</span><span class="pl-c1">0</span>)<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PerspectiveTransform</span>(x1<span class="pl-k">-</span>x0,x2<span class="pl-k">-</span>x1,x0,y1<span class="pl-k">-</span>y0,y2<span class="pl-k">-</span>y1,y0,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">else</span>{dx1<span class="pl-k">=</span>x1<span class="pl-k">-</span>x2;dx2<span class="pl-k">=</span>x3<span class="pl-k">-</span>x2;dx3<span class="pl-k">=</span>x0<span class="pl-k">-</span>x1<span class="pl-k">+</span>x2<span class="pl-k">-</span>x3;dy1<span class="pl-k">=</span>y1<span class="pl-k">-</span>y2;denominator<span class="pl-k">=</span>dx1<span class="pl-k">*</span>dy2<span class="pl-k">-</span>dx2<span class="pl-k">*</span>dy1;a13<span class="pl-k">=</span>(dx3<span class="pl-k">*</span>dy2<span class="pl-k">-</span>dx2<span class="pl-k">*</span>dy3)<span class="pl-k">/</span>denominator;a23<span class="pl-k">=</span>(dx1<span class="pl-k">*</span>dy3<span class="pl-k">-</span>dx3<span class="pl-k">*</span>dy1)<span class="pl-k">/</span>denominator;<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PerspectiveTransform</span>(x1<span class="pl-k">-</span>x0<span class="pl-k">+</span>a13<span class="pl-k">*</span>x1,x3<span class="pl-k">-</span>x0<span class="pl-k">+</span>a23<span class="pl-k">*</span>x3,x0,y1<span class="pl-k">-</span>y0<span class="pl-k">+</span>a13<span class="pl-k">*</span>y1,y3<span class="pl-k">-</span>y0<span class="pl-k">+</span>a23<span class="pl-k">*</span>y3,y0,a13,a23,<span class="pl-c1">1</span>)}};</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">PerspectiveTransform</span>.<span class="pl-en">quadrilateralToSquare</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">x0</span>,<span class="pl-smi">y0</span>,<span class="pl-smi">x1</span>,<span class="pl-smi">y1</span>,<span class="pl-smi">x2</span>,<span class="pl-smi">y2</span>,<span class="pl-smi">x3</span>,<span class="pl-smi">y3</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">squareToQuadrilateral</span>(x0,y0,x1,y1,x2,y2,x3,y3).<span class="pl-en">buildAdjoint</span>()};<span class="pl-k">function</span> <span class="pl-en">DetectorResult</span>(<span class="pl-smi">bits</span>,<span class="pl-smi">points</span>){<span class="pl-c1">this</span>.<span class="pl-smi">bits</span><span class="pl-k">=</span>bits;<span class="pl-c1">this</span>.<span class="pl-smi">points</span><span class="pl-k">=</span>points}</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Detector</span>(<span class="pl-smi">image</span>){<span class="pl-c1">this</span>.<span class="pl-smi">image</span><span class="pl-k">=</span>image;<span class="pl-c1">this</span>.<span class="pl-smi">resultPointCallback</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-en">sizeOfBlackWhiteBlackRun</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">fromX</span>,<span class="pl-smi">fromY</span>,<span class="pl-smi">toX</span>,<span class="pl-smi">toY</span>){<span class="pl-k">var</span> steep<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(toY<span class="pl-k">-</span>fromY)<span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(toX<span class="pl-k">-</span>fromX);<span class="pl-k">if</span>(steep){<span class="pl-k">var</span> temp<span class="pl-k">=</span>fromX;fromX<span class="pl-k">=</span>fromY;fromY<span class="pl-k">=</span>temp;temp<span class="pl-k">=</span>toX;toX<span class="pl-k">=</span>toY;toY<span class="pl-k">=</span>temp}<span class="pl-k">var</span> dx<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(toX<span class="pl-k">-</span>fromX);<span class="pl-k">var</span> dy<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(toY<span class="pl-k">-</span>fromY);<span class="pl-k">var</span> error<span class="pl-k">=</span><span class="pl-k">-</span>dx<span class="pl-k">&gt;&gt;</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> ystep<span class="pl-k">=</span>fromY<span class="pl-k">&lt;</span>toY<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> xstep<span class="pl-k">=</span>fromX<span class="pl-k">&lt;</span>toX<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> state<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> x<span class="pl-k">=</span>fromX,y<span class="pl-k">=</span>fromY;x<span class="pl-k">!=</span>toX;x<span class="pl-k">+=</span>xstep){<span class="pl-k">var</span> realX<span class="pl-k">=</span>steep<span class="pl-k">?</span>y<span class="pl-k">:</span>x;<span class="pl-k">var</span> realY<span class="pl-k">=</span>steep<span class="pl-k">?</span>x<span class="pl-k">:</span>y;<span class="pl-k">if</span>(state<span class="pl-k">==</span><span class="pl-c1">1</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">image</span>[realX<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line">realY<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>])state<span class="pl-k">++</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">image</span>[realX<span class="pl-k">+</span>realY<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>])state<span class="pl-k">++</span>;<span class="pl-k">if</span>(state<span class="pl-k">==</span><span class="pl-c1">3</span>){<span class="pl-k">var</span> diffX<span class="pl-k">=</span>x<span class="pl-k">-</span>fromX;<span class="pl-k">var</span> diffY<span class="pl-k">=</span>y<span class="pl-k">-</span>fromY;<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(diffX<span class="pl-k">*</span>diffX<span class="pl-k">+</span>diffY<span class="pl-k">*</span>diffY)}error<span class="pl-k">+=</span>dy;<span class="pl-k">if</span>(error<span class="pl-k">&gt;</span><span class="pl-c1">0</span>){<span class="pl-k">if</span>(y<span class="pl-k">==</span>toY)<span class="pl-k">break</span>;y<span class="pl-k">+=</span>ystep;error<span class="pl-k">-=</span>dx}}<span class="pl-k">var</span> diffX2<span class="pl-k">=</span>toX<span class="pl-k">-</span>fromX;<span class="pl-k">var</span> diffY2<span class="pl-k">=</span>toY<span class="pl-k">-</span>fromY;<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(diffX2<span class="pl-k">*</span>diffX2<span class="pl-k">+</span>diffY2<span class="pl-k">*</span>diffY2)};<span class="pl-c1">this</span>.<span class="pl-en">sizeOfBlackWhiteBlackRunBothWays</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">fromX</span>,<span class="pl-smi">fromY</span>,<span class="pl-smi">toX</span>,<span class="pl-smi">toY</span>){<span class="pl-k">var</span> result<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">sizeOfBlackWhiteBlackRun</span>(fromX,fromY,toX,toY);<span class="pl-k">var</span> scale<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> otherToX<span class="pl-k">=</span>fromX<span class="pl-k">-</span>(toX<span class="pl-k">-</span>fromX);<span class="pl-k">if</span>(otherToX<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>){scale<span class="pl-k">=</span>fromX<span class="pl-k">/</span>(fromX<span class="pl-k">-</span>otherToX);otherToX<span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(otherToX<span class="pl-k">&gt;=</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>){scale<span class="pl-k">=</span>(<span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">-</span>fromX)<span class="pl-k">/</span>(otherToX<span class="pl-k">-</span>fromX);otherToX<span class="pl-k">=</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span><span class="pl-k">-</span><span class="pl-c1">1</span>}<span class="pl-k">var</span> otherToY<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(fromY<span class="pl-k">-</span>(toY<span class="pl-k">-</span>fromY)<span class="pl-k">*</span>scale);scale<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(otherToY<span class="pl-k">&lt;</span><span class="pl-c1">0</span>){scale<span class="pl-k">=</span>fromY<span class="pl-k">/</span>(fromY<span class="pl-k">-</span>otherToY);otherToY<span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(otherToY<span class="pl-k">&gt;=</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span>){scale<span class="pl-k">=</span>(<span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">-</span>fromY)<span class="pl-k">/</span>(otherToY<span class="pl-k">-</span>fromY);otherToY<span class="pl-k">=</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-c1">1</span>}otherToX<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(fromX<span class="pl-k">+</span>(otherToX<span class="pl-k">-</span>fromX)<span class="pl-k">*</span>scale);result<span class="pl-k">+=</span><span class="pl-c1">this</span>.<span class="pl-en">sizeOfBlackWhiteBlackRun</span>(fromX,fromY,otherToX,otherToY);<span class="pl-k">return</span> result<span class="pl-k">-</span><span class="pl-c1">1</span>};<span class="pl-c1">this</span>.<span class="pl-smi">calculateModuleSizeOneWay</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">pattern</span>,<span class="pl-smi">otherPattern</span>){<span class="pl-k">var</span> moduleSizeEst1<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">sizeOfBlackWhiteBlackRunBothWays</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">pattern</span>.<span class="pl-c1">X</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">pattern</span>.<span class="pl-c1">Y</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">otherPattern</span>.<span class="pl-c1">X</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">otherPattern</span>.<span class="pl-c1">Y</span>));<span class="pl-k">var</span> moduleSizeEst2<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">sizeOfBlackWhiteBlackRunBothWays</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">otherPattern</span>.<span class="pl-c1">X</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">otherPattern</span>.<span class="pl-c1">Y</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">pattern</span>.<span class="pl-c1">X</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">pattern</span>.<span class="pl-c1">Y</span>));<span class="pl-k">if</span>(<span class="pl-c1">isNaN</span>(moduleSizeEst1))<span class="pl-k">return</span> moduleSizeEst2<span class="pl-k">/</span><span class="pl-c1">7</span>;<span class="pl-k">if</span>(<span class="pl-c1">isNaN</span>(moduleSizeEst2))<span class="pl-k">return</span> moduleSizeEst1<span class="pl-k">/</span><span class="pl-c1">7</span>;<span class="pl-k">return</span>(moduleSizeEst1<span class="pl-k">+</span>moduleSizeEst2)<span class="pl-k">/</span><span class="pl-c1">14</span>};<span class="pl-c1">this</span>.<span class="pl-smi">calculateModuleSize</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">topLeft</span>,<span class="pl-smi">topRight</span>,<span class="pl-smi">bottomLeft</span>){<span class="pl-k">return</span>(<span class="pl-c1">this</span>.<span class="pl-en">calculateModuleSizeOneWay</span>(topLeft,topRight)<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-en">calculateModuleSizeOneWay</span>(topLeft,bottomLeft))<span class="pl-k">/</span><span class="pl-c1">2</span>};<span class="pl-c1">this</span>.<span class="pl-en">distance</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">pattern1</span>,<span class="pl-smi">pattern2</span>){xDiff<span class="pl-k">=</span><span class="pl-smi">pattern1</span>.<span class="pl-c1">X</span><span class="pl-k">-</span><span class="pl-smi">pattern2</span>.<span class="pl-c1">X</span>;yDiff<span class="pl-k">=</span><span class="pl-smi">pattern1</span>.<span class="pl-c1">Y</span><span class="pl-k">-</span><span class="pl-smi">pattern2</span>.<span class="pl-c1">Y</span>;<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(xDiff<span class="pl-k">*</span>xDiff<span class="pl-k">+</span>yDiff<span class="pl-k">*</span>yDiff)};<span class="pl-c1">this</span>.<span class="pl-en">computeDimension</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">topLeft</span>,<span class="pl-smi">topRight</span>,<span class="pl-smi">bottomLeft</span>,<span class="pl-smi">moduleSize</span>){<span class="pl-k">var</span> tltrCentersDimension<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">this</span>.<span class="pl-en">distance</span>(topLeft,topRight)<span class="pl-k">/</span>moduleSize);<span class="pl-k">var</span> tlblCentersDimension<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">this</span>.<span class="pl-en">distance</span>(topLeft,bottomLeft)<span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line">moduleSize);<span class="pl-k">var</span> dimension<span class="pl-k">=</span>(tltrCentersDimension<span class="pl-k">+</span>tlblCentersDimension<span class="pl-k">&gt;&gt;</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-c1">7</span>;<span class="pl-k">switch</span>(dimension<span class="pl-k">&amp;</span><span class="pl-c1">3</span>){<span class="pl-k">case</span> <span class="pl-c1">0</span>:dimension<span class="pl-k">++</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span>:dimension<span class="pl-k">--</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span>:<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Error<span class="pl-pds">&quot;</span></span>;}<span class="pl-k">return</span> dimension};<span class="pl-c1">this</span>.<span class="pl-en">findAlignmentInRegion</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">overallEstModuleSize</span>,<span class="pl-smi">estAlignmentX</span>,<span class="pl-smi">estAlignmentY</span>,<span class="pl-smi">allowanceFactor</span>){<span class="pl-k">var</span> allowance<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(allowanceFactor<span class="pl-k">*</span>overallEstModuleSize);<span class="pl-k">var</span> alignmentAreaLeftX<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,estAlignmentX<span class="pl-k">-</span>allowance);<span class="pl-k">var</span> alignmentAreaRightX<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span><span class="pl-k">-</span><span class="pl-c1">1</span>,estAlignmentX<span class="pl-k">+</span>allowance);<span class="pl-k">if</span>(alignmentAreaRightX<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line">alignmentAreaLeftX<span class="pl-k">&lt;</span>overallEstModuleSize<span class="pl-k">*</span><span class="pl-c1">3</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Error<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> alignmentAreaTopY<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,estAlignmentY<span class="pl-k">-</span>allowance);<span class="pl-k">var</span> alignmentAreaBottomY<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-c1">1</span>,estAlignmentY<span class="pl-k">+</span>allowance);<span class="pl-k">var</span> alignmentFinder<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">AlignmentPatternFinder</span>(<span class="pl-c1">this</span>.<span class="pl-smi">image</span>,alignmentAreaLeftX,alignmentAreaTopY,alignmentAreaRightX<span class="pl-k">-</span>alignmentAreaLeftX,alignmentAreaBottomY<span class="pl-k">-</span>alignmentAreaTopY,overallEstModuleSize,<span class="pl-c1">this</span>.<span class="pl-smi">resultPointCallback</span>);<span class="pl-k">return</span> <span class="pl-smi">alignmentFinder</span>.<span class="pl-c1">find</span>()};<span class="pl-c1">this</span>.<span class="pl-en">createTransform</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">topLeft</span>,<span class="pl-smi">topRight</span>,<span class="pl-smi">bottomLeft</span>,<span class="pl-smi">alignmentPattern</span>,</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">dimension</span>){<span class="pl-k">var</span> dimMinusThree<span class="pl-k">=</span>dimension<span class="pl-k">-</span><span class="pl-c1">3.5</span>;<span class="pl-k">var</span> bottomRightX;<span class="pl-k">var</span> bottomRightY;<span class="pl-k">var</span> sourceBottomRightX;<span class="pl-k">var</span> sourceBottomRightY;<span class="pl-k">if</span>(alignmentPattern<span class="pl-k">!=</span><span class="pl-c1">null</span>){bottomRightX<span class="pl-k">=</span><span class="pl-smi">alignmentPattern</span>.<span class="pl-c1">X</span>;bottomRightY<span class="pl-k">=</span><span class="pl-smi">alignmentPattern</span>.<span class="pl-c1">Y</span>;sourceBottomRightX<span class="pl-k">=</span>sourceBottomRightY<span class="pl-k">=</span>dimMinusThree<span class="pl-k">-</span><span class="pl-c1">3</span>}<span class="pl-k">else</span>{bottomRightX<span class="pl-k">=</span><span class="pl-smi">topRight</span>.<span class="pl-c1">X</span><span class="pl-k">-</span><span class="pl-smi">topLeft</span>.<span class="pl-c1">X</span><span class="pl-k">+</span><span class="pl-smi">bottomLeft</span>.<span class="pl-c1">X</span>;bottomRightY<span class="pl-k">=</span><span class="pl-smi">topRight</span>.<span class="pl-c1">Y</span><span class="pl-k">-</span><span class="pl-smi">topLeft</span>.<span class="pl-c1">Y</span><span class="pl-k">+</span><span class="pl-smi">bottomLeft</span>.<span class="pl-c1">Y</span>;sourceBottomRightX<span class="pl-k">=</span>sourceBottomRightY<span class="pl-k">=</span>dimMinusThree}<span class="pl-k">var</span> transform<span class="pl-k">=</span><span class="pl-smi">PerspectiveTransform</span>.<span class="pl-en">quadrilateralToQuadrilateral</span>(<span class="pl-c1">3.5</span>,<span class="pl-c1">3.5</span>,dimMinusThree,</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">3.5</span>,sourceBottomRightX,sourceBottomRightY,<span class="pl-c1">3.5</span>,dimMinusThree,<span class="pl-smi">topLeft</span>.<span class="pl-c1">X</span>,<span class="pl-smi">topLeft</span>.<span class="pl-c1">Y</span>,<span class="pl-smi">topRight</span>.<span class="pl-c1">X</span>,<span class="pl-smi">topRight</span>.<span class="pl-c1">Y</span>,bottomRightX,bottomRightY,<span class="pl-smi">bottomLeft</span>.<span class="pl-c1">X</span>,<span class="pl-smi">bottomLeft</span>.<span class="pl-c1">Y</span>);<span class="pl-k">return</span> transform};<span class="pl-c1">this</span>.<span class="pl-en">sampleGrid</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">image</span>,<span class="pl-smi">transform</span>,<span class="pl-smi">dimension</span>){<span class="pl-k">var</span> sampler<span class="pl-k">=</span>GridSampler;<span class="pl-k">return</span> <span class="pl-smi">sampler</span>.<span class="pl-en">sampleGrid3</span>(image,dimension,transform)};<span class="pl-c1">this</span>.<span class="pl-en">processFinderPatternInfo</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">info</span>){<span class="pl-k">var</span> topLeft<span class="pl-k">=</span><span class="pl-smi">info</span>.<span class="pl-smi">TopLeft</span>;<span class="pl-k">var</span> topRight<span class="pl-k">=</span><span class="pl-smi">info</span>.<span class="pl-smi">TopRight</span>;<span class="pl-k">var</span> bottomLeft<span class="pl-k">=</span><span class="pl-smi">info</span>.<span class="pl-smi">BottomLeft</span>;<span class="pl-k">var</span> moduleSize<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">calculateModuleSize</span>(topLeft,topRight,bottomLeft);</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(moduleSize<span class="pl-k">&lt;</span><span class="pl-c1">1</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Error<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> dimension<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">computeDimension</span>(topLeft,topRight,bottomLeft,moduleSize);<span class="pl-k">var</span> provisionalVersion<span class="pl-k">=</span><span class="pl-smi">Version</span>.<span class="pl-en">getProvisionalVersionForDimension</span>(dimension);<span class="pl-k">var</span> modulesBetweenFPCenters<span class="pl-k">=</span><span class="pl-smi">provisionalVersion</span>.<span class="pl-smi">DimensionForVersion</span><span class="pl-k">-</span><span class="pl-c1">7</span>;<span class="pl-k">var</span> alignmentPattern<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(<span class="pl-smi">provisionalVersion</span>.<span class="pl-smi">AlignmentPatternCenters</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span>){<span class="pl-k">var</span> bottomRightX<span class="pl-k">=</span><span class="pl-smi">topRight</span>.<span class="pl-c1">X</span><span class="pl-k">-</span><span class="pl-smi">topLeft</span>.<span class="pl-c1">X</span><span class="pl-k">+</span><span class="pl-smi">bottomLeft</span>.<span class="pl-c1">X</span>;<span class="pl-k">var</span> bottomRightY<span class="pl-k">=</span><span class="pl-smi">topRight</span>.<span class="pl-c1">Y</span><span class="pl-k">-</span><span class="pl-smi">topLeft</span>.<span class="pl-c1">Y</span><span class="pl-k">+</span><span class="pl-smi">bottomLeft</span>.<span class="pl-c1">Y</span>;<span class="pl-k">var</span> correctionToTopLeft<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">3</span><span class="pl-k">/</span>modulesBetweenFPCenters;<span class="pl-k">var</span> estAlignmentX<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">topLeft</span>.<span class="pl-c1">X</span><span class="pl-k">+</span>correctionToTopLeft<span class="pl-k">*</span>(bottomRightX<span class="pl-k">-</span><span class="pl-smi">topLeft</span>.<span class="pl-c1">X</span>));<span class="pl-k">var</span> estAlignmentY<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">topLeft</span>.<span class="pl-c1">Y</span><span class="pl-k">+</span>correctionToTopLeft<span class="pl-k">*</span>(bottomRightY<span class="pl-k">-</span><span class="pl-smi">topLeft</span>.<span class="pl-c1">Y</span>));<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">4</span>;i<span class="pl-k">&lt;=</span><span class="pl-c1">16</span>;i<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">1</span>){alignmentPattern<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">findAlignmentInRegion</span>(moduleSize,estAlignmentX,estAlignmentY,i);<span class="pl-k">break</span>}}<span class="pl-k">var</span> transform<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">createTransform</span>(topLeft,topRight,bottomLeft,alignmentPattern,dimension);<span class="pl-k">var</span> bits<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">sampleGrid</span>(<span class="pl-c1">this</span>.<span class="pl-smi">image</span>,transform,dimension);<span class="pl-k">var</span> points;<span class="pl-k">if</span>(alignmentPattern<span class="pl-k">==</span><span class="pl-c1">null</span>)points<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(bottomLeft,topLeft,topRight);</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line"><span class="pl-k">else</span> points<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(bottomLeft,topLeft,topRight,alignmentPattern);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">DetectorResult</span>(bits,points)};<span class="pl-c1">this</span>.<span class="pl-en">detect</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> info<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">FinderPatternFinder</span>).<span class="pl-en">findFinderPattern</span>(<span class="pl-c1">this</span>.<span class="pl-smi">image</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">processFinderPatternInfo</span>(info)}}<span class="pl-k">var</span> <span class="pl-c1">FORMAT_INFO_MASK_QR</span><span class="pl-k">=</span><span class="pl-c1">21522</span>;</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">FORMAT_INFO_DECODE_LOOKUP</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">21522</span>,<span class="pl-c1">0</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">20773</span>,<span class="pl-c1">1</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">24188</span>,<span class="pl-c1">2</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">23371</span>,<span class="pl-c1">3</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">17913</span>,<span class="pl-c1">4</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">16590</span>,<span class="pl-c1">5</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">20375</span>,<span class="pl-c1">6</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">19104</span>,<span class="pl-c1">7</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">30660</span>,<span class="pl-c1">8</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">29427</span>,<span class="pl-c1">9</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">32170</span>,<span class="pl-c1">10</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">30877</span>,<span class="pl-c1">11</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">26159</span>,<span class="pl-c1">12</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">25368</span>,<span class="pl-c1">13</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">27713</span>,<span class="pl-c1">14</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">26998</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">5769</span>,<span class="pl-c1">16</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">5054</span>,<span class="pl-c1">17</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">7399</span>,<span class="pl-c1">18</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">6608</span>,<span class="pl-c1">19</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">1890</span>,<span class="pl-c1">20</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">597</span>,<span class="pl-c1">21</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">3340</span>,<span class="pl-c1">22</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">2107</span>,<span class="pl-c1">23</span>),</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">13663</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">12392</span>,<span class="pl-c1">25</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">16177</span>,<span class="pl-c1">26</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">14854</span>,<span class="pl-c1">27</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">9396</span>,<span class="pl-c1">28</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">8579</span>,<span class="pl-c1">29</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">11994</span>,<span class="pl-c1">30</span>),<span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">11245</span>,<span class="pl-c1">31</span>));<span class="pl-k">var</span> <span class="pl-c1">BITS_SET_IN_HALF_BYTE</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>);</td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">FormatInformation</span>(<span class="pl-smi">formatInfo</span>){<span class="pl-c1">this</span>.<span class="pl-smi">errorCorrectionLevel</span><span class="pl-k">=</span><span class="pl-smi">ErrorCorrectionLevel</span>.<span class="pl-en">forBits</span>(formatInfo<span class="pl-k">&gt;&gt;</span><span class="pl-c1">3</span><span class="pl-k">&amp;</span><span class="pl-c1">3</span>);<span class="pl-c1">this</span>.<span class="pl-smi">dataMask</span><span class="pl-k">=</span>formatInfo<span class="pl-k">&amp;</span><span class="pl-c1">7</span>;<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ErrorCorrectionLevel<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">errorCorrectionLevel</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>DataMask<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">dataMask</span>});<span class="pl-c1">this</span>.<span class="pl-en">GetHashCode</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">errorCorrectionLevel</span>.<span class="pl-en">ordinal</span>()<span class="pl-k">&lt;&lt;</span><span class="pl-c1">3</span><span class="pl-k">|</span>dataMask};<span class="pl-c1">this</span>.<span class="pl-en">Equals</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">o</span>){<span class="pl-k">var</span> other<span class="pl-k">=</span>o;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">errorCorrectionLevel</span><span class="pl-k">==</span><span class="pl-smi">other</span>.<span class="pl-smi">errorCorrectionLevel</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">dataMask</span><span class="pl-k">==</span><span class="pl-smi">other</span>.<span class="pl-smi">dataMask</span>}}</td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">FormatInformation</span>.<span class="pl-en">numBitsDiffering</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">^=</span>b;<span class="pl-k">return</span> <span class="pl-c1">BITS_SET_IN_HALF_BYTE</span>[a<span class="pl-k">&amp;</span><span class="pl-c1">15</span>]<span class="pl-k">+</span><span class="pl-c1">BITS_SET_IN_HALF_BYTE</span>[<span class="pl-en">URShift</span>(a,<span class="pl-c1">4</span>)<span class="pl-k">&amp;</span><span class="pl-c1">15</span>]<span class="pl-k">+</span><span class="pl-c1">BITS_SET_IN_HALF_BYTE</span>[<span class="pl-en">URShift</span>(a,<span class="pl-c1">8</span>)<span class="pl-k">&amp;</span><span class="pl-c1">15</span>]<span class="pl-k">+</span><span class="pl-c1">BITS_SET_IN_HALF_BYTE</span>[<span class="pl-en">URShift</span>(a,<span class="pl-c1">12</span>)<span class="pl-k">&amp;</span><span class="pl-c1">15</span>]<span class="pl-k">+</span><span class="pl-c1">BITS_SET_IN_HALF_BYTE</span>[<span class="pl-en">URShift</span>(a,<span class="pl-c1">16</span>)<span class="pl-k">&amp;</span><span class="pl-c1">15</span>]<span class="pl-k">+</span><span class="pl-c1">BITS_SET_IN_HALF_BYTE</span>[<span class="pl-en">URShift</span>(a,<span class="pl-c1">20</span>)<span class="pl-k">&amp;</span><span class="pl-c1">15</span>]<span class="pl-k">+</span><span class="pl-c1">BITS_SET_IN_HALF_BYTE</span>[<span class="pl-en">URShift</span>(a,<span class="pl-c1">24</span>)<span class="pl-k">&amp;</span><span class="pl-c1">15</span>]<span class="pl-k">+</span><span class="pl-c1">BITS_SET_IN_HALF_BYTE</span>[<span class="pl-en">URShift</span>(a,<span class="pl-c1">28</span>)<span class="pl-k">&amp;</span><span class="pl-c1">15</span>]};</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">FormatInformation</span>.<span class="pl-en">decodeFormatInformation</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">maskedFormatInfo</span>){<span class="pl-k">var</span> formatInfo<span class="pl-k">=</span><span class="pl-smi">FormatInformation</span>.<span class="pl-en">doDecodeFormatInformation</span>(maskedFormatInfo);<span class="pl-k">if</span>(formatInfo<span class="pl-k">!=</span><span class="pl-c1">null</span>)<span class="pl-k">return</span> formatInfo;<span class="pl-k">return</span> <span class="pl-smi">FormatInformation</span>.<span class="pl-en">doDecodeFormatInformation</span>(maskedFormatInfo<span class="pl-k">^</span><span class="pl-c1">FORMAT_INFO_MASK_QR</span>)};</td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">FormatInformation</span>.<span class="pl-en">doDecodeFormatInformation</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">maskedFormatInfo</span>){<span class="pl-k">var</span> bestDifference<span class="pl-k">=</span><span class="pl-c1">4294967295</span>;<span class="pl-k">var</span> bestFormatInfo<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-c1">FORMAT_INFO_DECODE_LOOKUP</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">var</span> decodeInfo<span class="pl-k">=</span><span class="pl-c1">FORMAT_INFO_DECODE_LOOKUP</span>[i];<span class="pl-k">var</span> targetInfo<span class="pl-k">=</span>decodeInfo[<span class="pl-c1">0</span>];<span class="pl-k">if</span>(targetInfo<span class="pl-k">==</span>maskedFormatInfo)<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">FormatInformation</span>(decodeInfo[<span class="pl-c1">1</span>]);<span class="pl-k">var</span> bitsDifference<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">numBitsDiffering</span>(maskedFormatInfo,targetInfo);<span class="pl-k">if</span>(bitsDifference<span class="pl-k">&lt;</span>bestDifference){bestFormatInfo<span class="pl-k">=</span>decodeInfo[<span class="pl-c1">1</span>];bestDifference<span class="pl-k">=</span>bitsDifference}}<span class="pl-k">if</span>(bestDifference<span class="pl-k">&lt;=</span></td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">3</span>)<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">FormatInformation</span>(bestFormatInfo);<span class="pl-k">return</span> <span class="pl-c1">null</span>};<span class="pl-k">function</span> <span class="pl-en">ErrorCorrectionLevel</span>(<span class="pl-smi">ordinal</span>,<span class="pl-smi">bits</span>,<span class="pl-smi">name</span>){<span class="pl-c1">this</span>.<span class="pl-smi">ordinal_Renamed_Field</span><span class="pl-k">=</span>ordinal;<span class="pl-c1">this</span>.<span class="pl-smi">bits</span><span class="pl-k">=</span>bits;<span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">=</span>name;<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Bits<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">bits</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Name<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">name</span>});<span class="pl-c1">this</span>.<span class="pl-en">ordinal</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">ordinal_Renamed_Field</span>}}<span class="pl-smi">ErrorCorrectionLevel</span>.<span class="pl-en">forBits</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">bits</span>){<span class="pl-k">if</span>(bits<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">||</span>bits<span class="pl-k">&gt;=</span><span class="pl-c1">FOR_BITS</span>.<span class="pl-c1">length</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>ArgumentException<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> <span class="pl-c1">FOR_BITS</span>[bits]};</td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ErrorCorrectionLevel</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> <span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ErrorCorrectionLevel</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> <span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ErrorCorrectionLevel</span>(<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Q<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> <span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ErrorCorrectionLevel</span>(<span class="pl-c1">3</span>,<span class="pl-c1">2</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> <span class="pl-c1">FOR_BITS</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">M</span>,<span class="pl-c1">L</span>,<span class="pl-c1">H</span>,<span class="pl-c1">Q</span>);</td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">BitMatrix</span>(<span class="pl-smi">width</span>,<span class="pl-smi">height</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>height)height<span class="pl-k">=</span>width;<span class="pl-k">if</span>(width<span class="pl-k">&lt;</span><span class="pl-c1">1</span><span class="pl-k">||</span>height<span class="pl-k">&lt;</span><span class="pl-c1">1</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Both dimensions must be greater than 0<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>width;<span class="pl-c1">this</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>height;<span class="pl-k">var</span> rowSize<span class="pl-k">=</span>width<span class="pl-k">&gt;&gt;</span><span class="pl-c1">5</span>;<span class="pl-k">if</span>((width<span class="pl-k">&amp;</span><span class="pl-c1">31</span>)<span class="pl-k">!=</span><span class="pl-c1">0</span>)rowSize<span class="pl-k">++</span>;<span class="pl-c1">this</span>.<span class="pl-smi">rowSize</span><span class="pl-k">=</span>rowSize;<span class="pl-c1">this</span>.<span class="pl-smi">bits</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(rowSize<span class="pl-k">*</span>height);<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">bits</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">bits</span>[i]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Width<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">width</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Height<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">height</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Dimension<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-c1">width</span><span class="pl-k">!=</span><span class="pl-c1">this</span>.<span class="pl-c1">height</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Can&#39;t call getDimension() on a non-square matrix<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">width</span>});<span class="pl-c1">this</span>.<span class="pl-en">get_Renamed</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">x</span>,<span class="pl-smi">y</span>){<span class="pl-k">var</span> offset<span class="pl-k">=</span>y<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">rowSize</span><span class="pl-k">+</span>(x<span class="pl-k">&gt;&gt;</span><span class="pl-c1">5</span>);<span class="pl-k">return</span>(<span class="pl-en">URShift</span>(<span class="pl-c1">this</span>.<span class="pl-smi">bits</span>[offset],x<span class="pl-k">&amp;</span><span class="pl-c1">31</span>)<span class="pl-k">&amp;</span><span class="pl-c1">1</span>)<span class="pl-k">!=</span><span class="pl-c1">0</span>};<span class="pl-c1">this</span>.<span class="pl-en">set_Renamed</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">x</span>,<span class="pl-smi">y</span>){<span class="pl-k">var</span> offset<span class="pl-k">=</span>y<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">rowSize</span><span class="pl-k">+</span>(x<span class="pl-k">&gt;&gt;</span><span class="pl-c1">5</span>);<span class="pl-c1">this</span>.<span class="pl-smi">bits</span>[offset]<span class="pl-k">|=</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>(x<span class="pl-k">&amp;</span><span class="pl-c1">31</span>)};<span class="pl-c1">this</span>.<span class="pl-en">flip</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">x</span>,<span class="pl-smi">y</span>){<span class="pl-k">var</span> offset<span class="pl-k">=</span>y<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">rowSize</span><span class="pl-k">+</span>(x<span class="pl-k">&gt;&gt;</span><span class="pl-c1">5</span>);<span class="pl-c1">this</span>.<span class="pl-smi">bits</span>[offset]<span class="pl-k">^=</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>(x<span class="pl-k">&amp;</span><span class="pl-c1">31</span>)};<span class="pl-c1">this</span>.<span class="pl-en">clear</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> max<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bits</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>max;i<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">bits</span>[i]<span class="pl-k">=</span><span class="pl-c1">0</span>};<span class="pl-c1">this</span>.<span class="pl-en">setRegion</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">left</span>,<span class="pl-smi">top</span>,<span class="pl-smi">width</span>,<span class="pl-smi">height</span>){<span class="pl-k">if</span>(top<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">||</span>left<span class="pl-k">&lt;</span><span class="pl-c1">0</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Left and top must be nonnegative<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(height<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span><span class="pl-k">||</span>width<span class="pl-k">&lt;</span><span class="pl-c1">1</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Height and width must be at least 1<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> right<span class="pl-k">=</span>left<span class="pl-k">+</span>width;<span class="pl-k">var</span> bottom<span class="pl-k">=</span>top<span class="pl-k">+</span>height;<span class="pl-k">if</span>(bottom<span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-c1">height</span><span class="pl-k">||</span>right<span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-c1">width</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>The region must fit inside the matrix<span class="pl-pds">&quot;</span></span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> y<span class="pl-k">=</span>top;y<span class="pl-k">&lt;</span>bottom;y<span class="pl-k">++</span>){<span class="pl-k">var</span> offset<span class="pl-k">=</span>y<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">rowSize</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> x<span class="pl-k">=</span>left;x<span class="pl-k">&lt;</span>right;x<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">bits</span>[offset<span class="pl-k">+</span>(x<span class="pl-k">&gt;&gt;</span><span class="pl-c1">5</span>)]<span class="pl-k">|=</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>(x<span class="pl-k">&amp;</span><span class="pl-c1">31</span>)}}}</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">DataBlock</span>(<span class="pl-smi">numDataCodewords</span>,<span class="pl-smi">codewords</span>){<span class="pl-c1">this</span>.<span class="pl-smi">numDataCodewords</span><span class="pl-k">=</span>numDataCodewords;<span class="pl-c1">this</span>.<span class="pl-smi">codewords</span><span class="pl-k">=</span>codewords;<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NumDataCodewords<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">numDataCodewords</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Codewords<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">codewords</span>})}</td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">DataBlock</span>.<span class="pl-en">getDataBlocks</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">rawCodewords</span>,<span class="pl-smi">version</span>,<span class="pl-smi">ecLevel</span>){<span class="pl-k">if</span>(<span class="pl-smi">rawCodewords</span>.<span class="pl-c1">length</span><span class="pl-k">!=</span><span class="pl-smi">version</span>.<span class="pl-smi">TotalCodewords</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>ArgumentException<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> ecBlocks<span class="pl-k">=</span><span class="pl-smi">version</span>.<span class="pl-en">getECBlocksForLevel</span>(ecLevel);<span class="pl-k">var</span> totalBlocks<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> ecBlockArray<span class="pl-k">=</span><span class="pl-smi">ecBlocks</span>.<span class="pl-en">getECBlocks</span>();<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">ecBlockArray</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>)totalBlocks<span class="pl-k">+=</span>ecBlockArray[i].<span class="pl-smi">Count</span>;<span class="pl-k">var</span> result<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(totalBlocks);<span class="pl-k">var</span> numResultBlocks<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span><span class="pl-smi">ecBlockArray</span>.<span class="pl-c1">length</span>;j<span class="pl-k">++</span>){<span class="pl-k">var</span> ecBlock<span class="pl-k">=</span>ecBlockArray[j];<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">ecBlock</span>.<span class="pl-smi">Count</span>;i<span class="pl-k">++</span>){<span class="pl-k">var</span> numDataCodewords<span class="pl-k">=</span><span class="pl-smi">ecBlock</span>.<span class="pl-smi">DataCodewords</span>;</td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> numBlockCodewords<span class="pl-k">=</span><span class="pl-smi">ecBlocks</span>.<span class="pl-smi">ECCodewordsPerBlock</span><span class="pl-k">+</span>numDataCodewords;result[numResultBlocks<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">DataBlock</span>(numDataCodewords,<span class="pl-k">new</span> <span class="pl-en">Array</span>(numBlockCodewords))}}<span class="pl-k">var</span> shorterBlocksTotalCodewords<span class="pl-k">=</span>result[<span class="pl-c1">0</span>].<span class="pl-smi">codewords</span>.<span class="pl-c1">length</span>;<span class="pl-k">var</span> longerBlocksStartAt<span class="pl-k">=</span><span class="pl-smi">result</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">while</span>(longerBlocksStartAt<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>){<span class="pl-k">var</span> numCodewords<span class="pl-k">=</span>result[longerBlocksStartAt].<span class="pl-smi">codewords</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(numCodewords<span class="pl-k">==</span>shorterBlocksTotalCodewords)<span class="pl-k">break</span>;longerBlocksStartAt<span class="pl-k">--</span>}longerBlocksStartAt<span class="pl-k">++</span>;<span class="pl-k">var</span> shorterBlocksNumDataCodewords<span class="pl-k">=</span>shorterBlocksTotalCodewords<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">ecBlocks</span>.<span class="pl-smi">ECCodewordsPerBlock</span>;<span class="pl-k">var</span> rawCodewordsOffset<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>shorterBlocksNumDataCodewords;i<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>numResultBlocks;j<span class="pl-k">++</span>)result[j].<span class="pl-smi">codewords</span>[i]<span class="pl-k">=</span>rawCodewords[rawCodewordsOffset<span class="pl-k">++</span>];<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span>longerBlocksStartAt;j<span class="pl-k">&lt;</span>numResultBlocks;j<span class="pl-k">++</span>)result[j].<span class="pl-smi">codewords</span>[shorterBlocksNumDataCodewords]<span class="pl-k">=</span>rawCodewords[rawCodewordsOffset<span class="pl-k">++</span>];<span class="pl-k">var</span> max<span class="pl-k">=</span>result[<span class="pl-c1">0</span>].<span class="pl-smi">codewords</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span>shorterBlocksNumDataCodewords;i<span class="pl-k">&lt;</span>max;i<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>numResultBlocks;j<span class="pl-k">++</span>){<span class="pl-k">var</span> iOffset<span class="pl-k">=</span>j<span class="pl-k">&lt;</span>longerBlocksStartAt<span class="pl-k">?</span>i<span class="pl-k">:</span>i<span class="pl-k">+</span><span class="pl-c1">1</span>;result[j].<span class="pl-smi">codewords</span>[iOffset]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line">rawCodewords[rawCodewordsOffset<span class="pl-k">++</span>]}<span class="pl-k">return</span> result};</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">BitMatrixParser</span>(<span class="pl-smi">bitMatrix</span>){<span class="pl-k">var</span> dimension<span class="pl-k">=</span><span class="pl-smi">bitMatrix</span>.<span class="pl-smi">Dimension</span>;<span class="pl-k">if</span>(dimension<span class="pl-k">&lt;</span><span class="pl-c1">21</span><span class="pl-k">||</span>(dimension<span class="pl-k">&amp;</span><span class="pl-c1">3</span>)<span class="pl-k">!=</span><span class="pl-c1">1</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Error BitMatrixParser<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">bitMatrix</span><span class="pl-k">=</span>bitMatrix;<span class="pl-c1">this</span>.<span class="pl-smi">parsedVersion</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">parsedFormatInfo</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-en">copyBit</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">i</span>,<span class="pl-smi">j</span>,<span class="pl-smi">versionBits</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">bitMatrix</span>.<span class="pl-en">get_Renamed</span>(i,j)<span class="pl-k">?</span>versionBits<span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span><span class="pl-k">|</span><span class="pl-c1">1</span><span class="pl-k">:</span>versionBits<span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span>};<span class="pl-c1">this</span>.<span class="pl-en">readFormatInformation</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">parsedFormatInfo</span><span class="pl-k">!=</span><span class="pl-c1">null</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">parsedFormatInfo</span>;<span class="pl-k">var</span> formatInfoBits<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-c1">6</span>;i<span class="pl-k">++</span>)formatInfoBits<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">copyBit</span>(i,<span class="pl-c1">8</span>,formatInfoBits);</td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line">formatInfoBits<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">copyBit</span>(<span class="pl-c1">7</span>,<span class="pl-c1">8</span>,formatInfoBits);formatInfoBits<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">copyBit</span>(<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,formatInfoBits);formatInfoBits<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">copyBit</span>(<span class="pl-c1">8</span>,<span class="pl-c1">7</span>,formatInfoBits);<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">5</span>;j<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;j<span class="pl-k">--</span>)formatInfoBits<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">copyBit</span>(<span class="pl-c1">8</span>,j,formatInfoBits);<span class="pl-c1">this</span>.<span class="pl-smi">parsedFormatInfo</span><span class="pl-k">=</span><span class="pl-smi">FormatInformation</span>.<span class="pl-en">decodeFormatInformation</span>(formatInfoBits);<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">parsedFormatInfo</span><span class="pl-k">!=</span><span class="pl-c1">null</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">parsedFormatInfo</span>;<span class="pl-k">var</span> dimension<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bitMatrix</span>.<span class="pl-smi">Dimension</span>;formatInfoBits<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> iMin<span class="pl-k">=</span>dimension<span class="pl-k">-</span><span class="pl-c1">8</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span>dimension<span class="pl-k">-</span><span class="pl-c1">1</span>;i<span class="pl-k">&gt;=</span>iMin;i<span class="pl-k">--</span>)formatInfoBits<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">copyBit</span>(i,<span class="pl-c1">8</span>,formatInfoBits);</td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span>dimension<span class="pl-k">-</span><span class="pl-c1">7</span>;j<span class="pl-k">&lt;</span>dimension;j<span class="pl-k">++</span>)formatInfoBits<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">copyBit</span>(<span class="pl-c1">8</span>,j,formatInfoBits);<span class="pl-c1">this</span>.<span class="pl-smi">parsedFormatInfo</span><span class="pl-k">=</span><span class="pl-smi">FormatInformation</span>.<span class="pl-en">decodeFormatInformation</span>(formatInfoBits);<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">parsedFormatInfo</span><span class="pl-k">!=</span><span class="pl-c1">null</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">parsedFormatInfo</span>;<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Error readFormatInformation<span class="pl-pds">&quot;</span></span>;};<span class="pl-c1">this</span>.<span class="pl-en">readVersion</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">parsedVersion</span><span class="pl-k">!=</span><span class="pl-c1">null</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">parsedVersion</span>;<span class="pl-k">var</span> dimension<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bitMatrix</span>.<span class="pl-smi">Dimension</span>;<span class="pl-k">var</span> provisionalVersion<span class="pl-k">=</span>dimension<span class="pl-k">-</span><span class="pl-c1">17</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>;<span class="pl-k">if</span>(provisionalVersion<span class="pl-k">&lt;=</span><span class="pl-c1">6</span>)<span class="pl-k">return</span> <span class="pl-smi">Version</span>.<span class="pl-en">getVersionForNumber</span>(provisionalVersion);</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> versionBits<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> ijMin<span class="pl-k">=</span>dimension<span class="pl-k">-</span><span class="pl-c1">11</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">5</span>;j<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;j<span class="pl-k">--</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span>dimension<span class="pl-k">-</span><span class="pl-c1">9</span>;i<span class="pl-k">&gt;=</span>ijMin;i<span class="pl-k">--</span>)versionBits<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">copyBit</span>(i,j,versionBits);<span class="pl-c1">this</span>.<span class="pl-smi">parsedVersion</span><span class="pl-k">=</span><span class="pl-smi">Version</span>.<span class="pl-en">decodeVersionInformation</span>(versionBits);<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">parsedVersion</span><span class="pl-k">!=</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">parsedVersion</span>.<span class="pl-smi">DimensionForVersion</span><span class="pl-k">==</span>dimension)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">parsedVersion</span>;versionBits<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">5</span>;i<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;i<span class="pl-k">--</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span>dimension<span class="pl-k">-</span><span class="pl-c1">9</span>;j<span class="pl-k">&gt;=</span>ijMin;j<span class="pl-k">--</span>)versionBits<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">copyBit</span>(i,j,versionBits);<span class="pl-c1">this</span>.<span class="pl-smi">parsedVersion</span><span class="pl-k">=</span><span class="pl-smi">Version</span>.<span class="pl-en">decodeVersionInformation</span>(versionBits);<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">parsedVersion</span><span class="pl-k">!=</span></td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">parsedVersion</span>.<span class="pl-smi">DimensionForVersion</span><span class="pl-k">==</span>dimension)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">parsedVersion</span>;<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Error readVersion<span class="pl-pds">&quot;</span></span>;};<span class="pl-c1">this</span>.<span class="pl-en">readCodewords</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> formatInfo<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">readFormatInformation</span>();<span class="pl-k">var</span> version<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">readVersion</span>();<span class="pl-k">var</span> dataMask<span class="pl-k">=</span><span class="pl-smi">DataMask</span>.<span class="pl-en">forReference</span>(<span class="pl-smi">formatInfo</span>.<span class="pl-smi">DataMask</span>);<span class="pl-k">var</span> dimension<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bitMatrix</span>.<span class="pl-smi">Dimension</span>;<span class="pl-smi">dataMask</span>.<span class="pl-en">unmaskBitMatrix</span>(<span class="pl-c1">this</span>.<span class="pl-smi">bitMatrix</span>,dimension);<span class="pl-k">var</span> functionPattern<span class="pl-k">=</span><span class="pl-smi">version</span>.<span class="pl-en">buildFunctionPattern</span>();<span class="pl-k">var</span> readingUp<span class="pl-k">=</span><span class="pl-c1">true</span>;<span class="pl-k">var</span> result<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-smi">version</span>.<span class="pl-smi">TotalCodewords</span>);<span class="pl-k">var</span> resultOffset<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> currentByte<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>;<span class="pl-k">var</span> bitsRead<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span>dimension<span class="pl-k">-</span><span class="pl-c1">1</span>;j<span class="pl-k">&gt;</span><span class="pl-c1">0</span>;j<span class="pl-k">-=</span><span class="pl-c1">2</span>){<span class="pl-k">if</span>(j<span class="pl-k">==</span><span class="pl-c1">6</span>)j<span class="pl-k">--</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> count<span class="pl-k">=</span><span class="pl-c1">0</span>;count<span class="pl-k">&lt;</span>dimension;count<span class="pl-k">++</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span>readingUp<span class="pl-k">?</span>dimension<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">-</span>count<span class="pl-k">:</span>count;<span class="pl-k">for</span>(<span class="pl-k">var</span> col<span class="pl-k">=</span><span class="pl-c1">0</span>;col<span class="pl-k">&lt;</span><span class="pl-c1">2</span>;col<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">functionPattern</span>.<span class="pl-en">get_Renamed</span>(j<span class="pl-k">-</span>col,i)){bitsRead<span class="pl-k">++</span>;currentByte<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">bitMatrix</span>.<span class="pl-en">get_Renamed</span>(j<span class="pl-k">-</span>col,i))currentByte<span class="pl-k">|=</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(bitsRead<span class="pl-k">==</span><span class="pl-c1">8</span>){result[resultOffset<span class="pl-k">++</span>]<span class="pl-k">=</span>currentByte;bitsRead<span class="pl-k">=</span><span class="pl-c1">0</span>;currentByte<span class="pl-k">=</span><span class="pl-c1">0</span>}}}readingUp<span class="pl-k">^=</span><span class="pl-c1">true</span>}<span class="pl-k">if</span>(resultOffset<span class="pl-k">!=</span><span class="pl-smi">version</span>.<span class="pl-smi">TotalCodewords</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Error readCodewords<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> result}}DataMask<span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">DataMask</span>.<span class="pl-en">forReference</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">reference</span>){<span class="pl-k">if</span>(reference<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">||</span>reference<span class="pl-k">&gt;</span><span class="pl-c1">7</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>System.ArgumentException<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> <span class="pl-smi">DataMask</span>.<span class="pl-c1">DATA_MASKS</span>[reference]};<span class="pl-k">function</span> <span class="pl-en">DataMask000</span>(){<span class="pl-c1">this</span>.<span class="pl-en">unmaskBitMatrix</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">bits</span>,<span class="pl-smi">dimension</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>dimension;i<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>dimension;j<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">isMasked</span>(i,j))<span class="pl-smi">bits</span>.<span class="pl-en">flip</span>(j,i)};<span class="pl-c1">this</span>.<span class="pl-en">isMasked</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">i</span>,<span class="pl-smi">j</span>){<span class="pl-k">return</span>(i<span class="pl-k">+</span>j<span class="pl-k">&amp;</span><span class="pl-c1">1</span>)<span class="pl-k">==</span><span class="pl-c1">0</span>}}</td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">DataMask001</span>(){<span class="pl-c1">this</span>.<span class="pl-en">unmaskBitMatrix</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">bits</span>,<span class="pl-smi">dimension</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>dimension;i<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>dimension;j<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">isMasked</span>(i,j))<span class="pl-smi">bits</span>.<span class="pl-en">flip</span>(j,i)};<span class="pl-c1">this</span>.<span class="pl-en">isMasked</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">i</span>,<span class="pl-smi">j</span>){<span class="pl-k">return</span>(i<span class="pl-k">&amp;</span><span class="pl-c1">1</span>)<span class="pl-k">==</span><span class="pl-c1">0</span>}}function DataMask010(){this.unmaskBitMatrix=function(bits,dimension){for(var i=0;i&lt;dimension;i++)for(var j=0;j&lt;dimension;j++)if(this.isMasked(i,j))bits.flip(j,i)};this.isMasked=function(i,j){return j%3==0}}</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">DataMask011</span>(){<span class="pl-c1">this</span>.<span class="pl-en">unmaskBitMatrix</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">bits</span>,<span class="pl-smi">dimension</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>dimension;i<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>dimension;j<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">isMasked</span>(i,j))<span class="pl-smi">bits</span>.<span class="pl-en">flip</span>(j,i)};<span class="pl-c1">this</span>.<span class="pl-en">isMasked</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">i</span>,<span class="pl-smi">j</span>){<span class="pl-k">return</span>(i<span class="pl-k">+</span>j)<span class="pl-k">%</span><span class="pl-c1">3</span><span class="pl-k">==</span><span class="pl-c1">0</span>}}function DataMask100(){this.unmaskBitMatrix=function(bits,dimension){for(var i=0;i&lt;dimension;i++)for(var j=0;j&lt;dimension;j++)if(this.isMasked(i,j))bits.flip(j,i)};this.isMasked=function(i,j){return(URShift(i,1)+j/3&amp;1)==0}}</td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">DataMask101</span>(){<span class="pl-c1">this</span>.<span class="pl-en">unmaskBitMatrix</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">bits</span>,<span class="pl-smi">dimension</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>dimension;i<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>dimension;j<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">isMasked</span>(i,j))<span class="pl-smi">bits</span>.<span class="pl-en">flip</span>(j,i)};<span class="pl-c1">this</span>.<span class="pl-en">isMasked</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">i</span>,<span class="pl-smi">j</span>){<span class="pl-k">var</span> temp<span class="pl-k">=</span>i<span class="pl-k">*</span>j;<span class="pl-k">return</span>(temp<span class="pl-k">&amp;</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>temp<span class="pl-k">%</span><span class="pl-c1">3</span><span class="pl-k">==</span><span class="pl-c1">0</span>}}function DataMask110(){this.unmaskBitMatrix=function(bits,dimension){for(var i=0;i&lt;dimension;i++)for(var j=0;j&lt;dimension;j++)if(this.isMasked(i,j))bits.flip(j,i)};this.isMasked=function(i,j){var temp=i*j;return((temp&amp;1)+temp%3&amp;1)==0}}</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">DataMask111</span>(){<span class="pl-c1">this</span>.<span class="pl-en">unmaskBitMatrix</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">bits</span>,<span class="pl-smi">dimension</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>dimension;i<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>dimension;j<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">isMasked</span>(i,j))<span class="pl-smi">bits</span>.<span class="pl-en">flip</span>(j,i)};<span class="pl-c1">this</span>.<span class="pl-en">isMasked</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">i</span>,<span class="pl-smi">j</span>){<span class="pl-k">return</span>((i<span class="pl-k">+</span>j<span class="pl-k">&amp;</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>i<span class="pl-k">*</span>j<span class="pl-k">%</span><span class="pl-c1">3</span><span class="pl-k">&amp;</span><span class="pl-c1">1</span>)<span class="pl-k">==</span><span class="pl-c1">0</span>}}<span class="pl-smi">DataMask</span>.<span class="pl-c1">DATA_MASKS</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-k">new</span> <span class="pl-en">DataMask000</span>,<span class="pl-k">new</span> <span class="pl-en">DataMask001</span>,<span class="pl-k">new</span> <span class="pl-en">DataMask010</span>,<span class="pl-k">new</span> <span class="pl-en">DataMask011</span>,<span class="pl-k">new</span> <span class="pl-en">DataMask100</span>,<span class="pl-k">new</span> <span class="pl-en">DataMask101</span>,<span class="pl-k">new</span> <span class="pl-en">DataMask110</span>,<span class="pl-k">new</span> <span class="pl-en">DataMask111</span>);</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">ReedSolomonDecoder</span>(<span class="pl-smi">field</span>){<span class="pl-c1">this</span>.<span class="pl-smi">field</span><span class="pl-k">=</span>field;<span class="pl-c1">this</span>.<span class="pl-en">decode</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">received</span>,<span class="pl-smi">twoS</span>){<span class="pl-k">var</span> poly<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">GF256Poly</span>(<span class="pl-c1">this</span>.<span class="pl-smi">field</span>,received);<span class="pl-k">var</span> syndromeCoefficients<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(twoS);<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">syndromeCoefficients</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>)syndromeCoefficients[i]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> dataMatrix<span class="pl-k">=</span><span class="pl-c1">false</span>;<span class="pl-k">var</span> noError<span class="pl-k">=</span><span class="pl-c1">true</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>twoS;i<span class="pl-k">++</span>){<span class="pl-k">var</span> eval<span class="pl-k">=</span><span class="pl-smi">poly</span>.<span class="pl-en">evaluateAt</span>(<span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">exp</span>(dataMatrix<span class="pl-k">?</span>i<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">:</span>i));syndromeCoefficients[<span class="pl-smi">syndromeCoefficients</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">-</span>i]<span class="pl-k">=</span>eval;<span class="pl-k">if</span>(eval<span class="pl-k">!=</span><span class="pl-c1">0</span>)noError<span class="pl-k">=</span><span class="pl-c1">false</span>}<span class="pl-k">if</span>(noError)<span class="pl-k">return</span>;<span class="pl-k">var</span> syndrome<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">GF256Poly</span>(<span class="pl-c1">this</span>.<span class="pl-smi">field</span>,</td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line">syndromeCoefficients);<span class="pl-k">var</span> sigmaOmega<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">runEuclideanAlgorithm</span>(<span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">buildMonomial</span>(twoS,<span class="pl-c1">1</span>),syndrome,twoS);<span class="pl-k">var</span> sigma<span class="pl-k">=</span>sigmaOmega[<span class="pl-c1">0</span>];<span class="pl-k">var</span> omega<span class="pl-k">=</span>sigmaOmega[<span class="pl-c1">1</span>];<span class="pl-k">var</span> errorLocations<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">findErrorLocations</span>(sigma);<span class="pl-k">var</span> errorMagnitudes<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">findErrorMagnitudes</span>(omega,errorLocations,dataMatrix);<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">errorLocations</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">var</span> position<span class="pl-k">=</span><span class="pl-smi">received</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">log</span>(errorLocations[i]);<span class="pl-k">if</span>(position<span class="pl-k">&lt;</span><span class="pl-c1">0</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>ReedSolomonException Bad error location<span class="pl-pds">&quot;</span></span>;received[position]<span class="pl-k">=</span><span class="pl-c1">GF256</span>.<span class="pl-en">addOrSubtract</span>(received[position],</td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line">errorMagnitudes[i])}};<span class="pl-c1">this</span>.<span class="pl-en">runEuclideanAlgorithm</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-c1">R</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">Degree</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-smi">Degree</span>){<span class="pl-k">var</span> temp<span class="pl-k">=</span>a;a<span class="pl-k">=</span>b;b<span class="pl-k">=</span>temp}<span class="pl-k">var</span> rLast<span class="pl-k">=</span>a;<span class="pl-k">var</span> r<span class="pl-k">=</span>b;<span class="pl-k">var</span> sLast<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-smi">One</span>;<span class="pl-k">var</span> s<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-smi">Zero</span>;<span class="pl-k">var</span> tLast<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-smi">Zero</span>;<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-smi">One</span>;<span class="pl-k">while</span>(<span class="pl-smi">r</span>.<span class="pl-smi">Degree</span><span class="pl-k">&gt;=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">R</span><span class="pl-k">/</span><span class="pl-c1">2</span>)){<span class="pl-k">var</span> rLastLast<span class="pl-k">=</span>rLast;<span class="pl-k">var</span> sLastLast<span class="pl-k">=</span>sLast;<span class="pl-k">var</span> tLastLast<span class="pl-k">=</span>tLast;rLast<span class="pl-k">=</span>r;sLast<span class="pl-k">=</span>s;tLast<span class="pl-k">=</span>t;<span class="pl-k">if</span>(<span class="pl-smi">rLast</span>.<span class="pl-smi">Zero</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>r_{i-1} was zero<span class="pl-pds">&quot;</span></span>;r<span class="pl-k">=</span>rLastLast;<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-smi">Zero</span>;<span class="pl-k">var</span> denominatorLeadingTerm<span class="pl-k">=</span><span class="pl-smi">rLast</span>.<span class="pl-en">getCoefficient</span>(<span class="pl-smi">rLast</span>.<span class="pl-smi">Degree</span>);<span class="pl-k">var</span> dltInverse<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">inverse</span>(denominatorLeadingTerm);</td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line"><span class="pl-k">while</span>(<span class="pl-smi">r</span>.<span class="pl-smi">Degree</span><span class="pl-k">&gt;=</span><span class="pl-smi">rLast</span>.<span class="pl-smi">Degree</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">r</span>.<span class="pl-smi">Zero</span>){<span class="pl-k">var</span> degreeDiff<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">Degree</span><span class="pl-k">-</span><span class="pl-smi">rLast</span>.<span class="pl-smi">Degree</span>;<span class="pl-k">var</span> scale<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">multiply</span>(<span class="pl-smi">r</span>.<span class="pl-en">getCoefficient</span>(<span class="pl-smi">r</span>.<span class="pl-smi">Degree</span>),dltInverse);q<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-en">addOrSubtract</span>(<span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">buildMonomial</span>(degreeDiff,scale));r<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">addOrSubtract</span>(<span class="pl-smi">rLast</span>.<span class="pl-en">multiplyByMonomial</span>(degreeDiff,scale))}s<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-en">multiply1</span>(sLast).<span class="pl-en">addOrSubtract</span>(sLastLast);t<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-en">multiply1</span>(tLast).<span class="pl-en">addOrSubtract</span>(tLastLast)}<span class="pl-k">var</span> sigmaTildeAtZero<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-en">getCoefficient</span>(<span class="pl-c1">0</span>);<span class="pl-k">if</span>(sigmaTildeAtZero<span class="pl-k">==</span><span class="pl-c1">0</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>ReedSolomonException sigmaTilde(0) was zero<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> inverse<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">inverse</span>(sigmaTildeAtZero);</td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> sigma<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-en">multiply2</span>(inverse);<span class="pl-k">var</span> omega<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">multiply2</span>(inverse);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(sigma,omega)};<span class="pl-c1">this</span>.<span class="pl-en">findErrorLocations</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">errorLocator</span>){<span class="pl-k">var</span> numErrors<span class="pl-k">=</span><span class="pl-smi">errorLocator</span>.<span class="pl-smi">Degree</span>;<span class="pl-k">if</span>(numErrors<span class="pl-k">==</span><span class="pl-c1">1</span>)<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-smi">errorLocator</span>.<span class="pl-en">getCoefficient</span>(<span class="pl-c1">1</span>));<span class="pl-k">var</span> result<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(numErrors);<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">1</span>;i<span class="pl-k">&lt;</span><span class="pl-c1">256</span><span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&lt;</span>numErrors;i<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-smi">errorLocator</span>.<span class="pl-en">evaluateAt</span>(i)<span class="pl-k">==</span><span class="pl-c1">0</span>){result[e]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">inverse</span>(i);e<span class="pl-k">++</span>}<span class="pl-k">if</span>(e<span class="pl-k">!=</span>numErrors)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Error locator degree does not match number of roots<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> result};<span class="pl-c1">this</span>.<span class="pl-en">findErrorMagnitudes</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">errorEvaluator</span>,</td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">errorLocations</span>,<span class="pl-smi">dataMatrix</span>){<span class="pl-k">var</span> s<span class="pl-k">=</span><span class="pl-smi">errorLocations</span>.<span class="pl-c1">length</span>;<span class="pl-k">var</span> result<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(s);<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>s;i<span class="pl-k">++</span>){<span class="pl-k">var</span> xiInverse<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">inverse</span>(errorLocations[i]);<span class="pl-k">var</span> denominator<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>s;j<span class="pl-k">++</span>)<span class="pl-k">if</span>(i<span class="pl-k">!=</span>j)denominator<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">multiply</span>(denominator,<span class="pl-c1">GF256</span>.<span class="pl-en">addOrSubtract</span>(<span class="pl-c1">1</span>,<span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">multiply</span>(errorLocations[j],xiInverse)));result[i]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">multiply</span>(<span class="pl-smi">errorEvaluator</span>.<span class="pl-en">evaluateAt</span>(xiInverse),<span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">inverse</span>(denominator));<span class="pl-k">if</span>(dataMatrix)result[i]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">multiply</span>(result[i],xiInverse)}<span class="pl-k">return</span> result}}</td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">GF256Poly</span>(<span class="pl-smi">field</span>,<span class="pl-smi">coefficients</span>){<span class="pl-k">if</span>(coefficients<span class="pl-k">==</span><span class="pl-c1">null</span><span class="pl-k">||</span><span class="pl-smi">coefficients</span>.<span class="pl-c1">length</span><span class="pl-k">==</span><span class="pl-c1">0</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>System.ArgumentException<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">field</span><span class="pl-k">=</span>field;<span class="pl-k">var</span> coefficientsLength<span class="pl-k">=</span><span class="pl-smi">coefficients</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(coefficientsLength<span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>coefficients[<span class="pl-c1">0</span>]<span class="pl-k">==</span><span class="pl-c1">0</span>){<span class="pl-k">var</span> firstNonZero<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">while</span>(firstNonZero<span class="pl-k">&lt;</span>coefficientsLength<span class="pl-k">&amp;&amp;</span>coefficients[firstNonZero]<span class="pl-k">==</span><span class="pl-c1">0</span>)firstNonZero<span class="pl-k">++</span>;<span class="pl-k">if</span>(firstNonZero<span class="pl-k">==</span>coefficientsLength)<span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span><span class="pl-k">=</span><span class="pl-smi">field</span>.<span class="pl-smi">Zero</span>.<span class="pl-smi">coefficients</span>;<span class="pl-k">else</span>{<span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(coefficientsLength<span class="pl-k">-</span>firstNonZero);<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>[i]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> ci<span class="pl-k">=</span><span class="pl-c1">0</span>;ci<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>.<span class="pl-c1">length</span>;ci<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>[ci]<span class="pl-k">=</span>coefficients[firstNonZero<span class="pl-k">+</span>ci]}}<span class="pl-k">else</span> <span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span><span class="pl-k">=</span>coefficients;<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Zero<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>[<span class="pl-c1">0</span>]<span class="pl-k">==</span><span class="pl-c1">0</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Degree<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Coefficients<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>});<span class="pl-c1">this</span>.<span class="pl-en">getCoefficient</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">degree</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>[<span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">-</span>degree]};<span class="pl-c1">this</span>.<span class="pl-en">evaluateAt</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-c1">0</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getCoefficient</span>(<span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> size<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-c1">1</span>){<span class="pl-k">var</span> result<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>size;i<span class="pl-k">++</span>)result<span class="pl-k">=</span><span class="pl-c1">GF256</span>.<span class="pl-en">addOrSubtract</span>(result,<span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>[i]);<span class="pl-k">return</span> result}<span class="pl-k">var</span> result2<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>[<span class="pl-c1">0</span>];<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">1</span>;i<span class="pl-k">&lt;</span>size;i<span class="pl-k">++</span>)result2<span class="pl-k">=</span><span class="pl-c1">GF256</span>.<span class="pl-en">addOrSubtract</span>(<span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">multiply</span>(a,result2),<span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>[i]);<span class="pl-k">return</span> result2};<span class="pl-c1">this</span>.<span class="pl-en">addOrSubtract</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">other</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">field</span><span class="pl-k">!=</span><span class="pl-smi">other</span>.<span class="pl-smi">field</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>GF256Polys do not have same GF256 field<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">Zero</span>)<span class="pl-k">return</span> other;<span class="pl-k">if</span>(<span class="pl-smi">other</span>.<span class="pl-smi">Zero</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>;<span class="pl-k">var</span> smallerCoefficients<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>;</td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> largerCoefficients<span class="pl-k">=</span><span class="pl-smi">other</span>.<span class="pl-smi">coefficients</span>;<span class="pl-k">if</span>(<span class="pl-smi">smallerCoefficients</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-smi">largerCoefficients</span>.<span class="pl-c1">length</span>){<span class="pl-k">var</span> temp<span class="pl-k">=</span>smallerCoefficients;smallerCoefficients<span class="pl-k">=</span>largerCoefficients;largerCoefficients<span class="pl-k">=</span>temp}<span class="pl-k">var</span> sumDiff<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-smi">largerCoefficients</span>.<span class="pl-c1">length</span>);<span class="pl-k">var</span> lengthDiff<span class="pl-k">=</span><span class="pl-smi">largerCoefficients</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-smi">smallerCoefficients</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> ci<span class="pl-k">=</span><span class="pl-c1">0</span>;ci<span class="pl-k">&lt;</span>lengthDiff;ci<span class="pl-k">++</span>)sumDiff[ci]<span class="pl-k">=</span>largerCoefficients[ci];<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span>lengthDiff;i<span class="pl-k">&lt;</span><span class="pl-smi">largerCoefficients</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>)sumDiff[i]<span class="pl-k">=</span><span class="pl-c1">GF256</span>.<span class="pl-en">addOrSubtract</span>(smallerCoefficients[i<span class="pl-k">-</span>lengthDiff],largerCoefficients[i]);</td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">GF256Poly</span>(field,sumDiff)};<span class="pl-c1">this</span>.<span class="pl-en">multiply1</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">other</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">field</span><span class="pl-k">!=</span><span class="pl-smi">other</span>.<span class="pl-smi">field</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>GF256Polys do not have same GF256 field<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">Zero</span><span class="pl-k">||</span><span class="pl-smi">other</span>.<span class="pl-smi">Zero</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-smi">Zero</span>;<span class="pl-k">var</span> aCoefficients<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>;<span class="pl-k">var</span> aLength<span class="pl-k">=</span><span class="pl-smi">aCoefficients</span>.<span class="pl-c1">length</span>;<span class="pl-k">var</span> bCoefficients<span class="pl-k">=</span><span class="pl-smi">other</span>.<span class="pl-smi">coefficients</span>;<span class="pl-k">var</span> bLength<span class="pl-k">=</span><span class="pl-smi">bCoefficients</span>.<span class="pl-c1">length</span>;<span class="pl-k">var</span> product<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(aLength<span class="pl-k">+</span>bLength<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>aLength;i<span class="pl-k">++</span>){<span class="pl-k">var</span> aCoeff<span class="pl-k">=</span>aCoefficients[i];<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>bLength;j<span class="pl-k">++</span>)product[i<span class="pl-k">+</span>j]<span class="pl-k">=</span><span class="pl-c1">GF256</span>.<span class="pl-en">addOrSubtract</span>(product[i<span class="pl-k">+</span>j],<span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">multiply</span>(aCoeff,</td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line">bCoefficients[j]))}<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">GF256Poly</span>(<span class="pl-c1">this</span>.<span class="pl-smi">field</span>,product)};<span class="pl-c1">this</span>.<span class="pl-en">multiply2</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">scalar</span>){<span class="pl-k">if</span>(scalar<span class="pl-k">==</span><span class="pl-c1">0</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-smi">Zero</span>;<span class="pl-k">if</span>(scalar<span class="pl-k">==</span><span class="pl-c1">1</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>;<span class="pl-k">var</span> size<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>.<span class="pl-c1">length</span>;<span class="pl-k">var</span> product<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(size);<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>size;i<span class="pl-k">++</span>)product[i]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">multiply</span>(<span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>[i],scalar);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">GF256Poly</span>(<span class="pl-c1">this</span>.<span class="pl-smi">field</span>,product)};<span class="pl-c1">this</span>.<span class="pl-en">multiplyByMonomial</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">degree</span>,<span class="pl-smi">coefficient</span>){<span class="pl-k">if</span>(degree<span class="pl-k">&lt;</span><span class="pl-c1">0</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>System.ArgumentException<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(coefficient<span class="pl-k">==</span><span class="pl-c1">0</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-smi">Zero</span>;<span class="pl-k">var</span> size<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> product<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(size<span class="pl-k">+</span>degree);<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">product</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>)product[i]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>size;i<span class="pl-k">++</span>)product[i]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">multiply</span>(<span class="pl-c1">this</span>.<span class="pl-smi">coefficients</span>[i],coefficient);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">GF256Poly</span>(<span class="pl-c1">this</span>.<span class="pl-smi">field</span>,product)};<span class="pl-c1">this</span>.<span class="pl-en">divide</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">other</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">field</span><span class="pl-k">!=</span><span class="pl-smi">other</span>.<span class="pl-smi">field</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>GF256Polys do not have same GF256 field<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-smi">other</span>.<span class="pl-smi">Zero</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Divide by 0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> quotient<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-smi">Zero</span>;<span class="pl-k">var</span> remainder<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-k">var</span> denominatorLeadingTerm<span class="pl-k">=</span><span class="pl-smi">other</span>.<span class="pl-en">getCoefficient</span>(<span class="pl-smi">other</span>.<span class="pl-smi">Degree</span>);<span class="pl-k">var</span> inverseDenominatorLeadingTerm<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">inverse</span>(denominatorLeadingTerm);</td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line"><span class="pl-k">while</span>(<span class="pl-smi">remainder</span>.<span class="pl-smi">Degree</span><span class="pl-k">&gt;=</span><span class="pl-smi">other</span>.<span class="pl-smi">Degree</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">remainder</span>.<span class="pl-smi">Zero</span>){<span class="pl-k">var</span> degreeDifference<span class="pl-k">=</span><span class="pl-smi">remainder</span>.<span class="pl-smi">Degree</span><span class="pl-k">-</span><span class="pl-smi">other</span>.<span class="pl-smi">Degree</span>;<span class="pl-k">var</span> scale<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">multiply</span>(<span class="pl-smi">remainder</span>.<span class="pl-en">getCoefficient</span>(<span class="pl-smi">remainder</span>.<span class="pl-smi">Degree</span>),inverseDenominatorLeadingTerm);<span class="pl-k">var</span> term<span class="pl-k">=</span><span class="pl-smi">other</span>.<span class="pl-en">multiplyByMonomial</span>(degreeDifference,scale);<span class="pl-k">var</span> iterationQuotient<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">field</span>.<span class="pl-en">buildMonomial</span>(degreeDifference,scale);quotient<span class="pl-k">=</span><span class="pl-smi">quotient</span>.<span class="pl-en">addOrSubtract</span>(iterationQuotient);remainder<span class="pl-k">=</span><span class="pl-smi">remainder</span>.<span class="pl-en">addOrSubtract</span>(term)}<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(quotient,remainder)}}</td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">GF256</span>(<span class="pl-smi">primitive</span>){<span class="pl-c1">this</span>.<span class="pl-smi">expTable</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">256</span>);<span class="pl-c1">this</span>.<span class="pl-smi">logTable</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">256</span>);<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-c1">256</span>;i<span class="pl-k">++</span>){<span class="pl-c1">this</span>.<span class="pl-smi">expTable</span>[i]<span class="pl-k">=</span>x;x<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(x<span class="pl-k">&gt;=</span><span class="pl-c1">256</span>)x<span class="pl-k">^=</span>primitive}<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-c1">255</span>;i<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">logTable</span>[<span class="pl-c1">this</span>.<span class="pl-smi">expTable</span>[i]]<span class="pl-k">=</span>i;<span class="pl-k">var</span> at0<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">1</span>);at0[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">zero</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">GF256Poly</span>(<span class="pl-c1">this</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(at0));<span class="pl-k">var</span> at1<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">1</span>);at1[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">one</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">GF256Poly</span>(<span class="pl-c1">this</span>,<span class="pl-k">new</span> <span class="pl-en">Array</span>(at1));<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Zero<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">zero</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>One<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">one</span>});<span class="pl-c1">this</span>.<span class="pl-smi">buildMonomial</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">degree</span>,<span class="pl-smi">coefficient</span>){<span class="pl-k">if</span>(degree<span class="pl-k">&lt;</span><span class="pl-c1">0</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>System.ArgumentException<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(coefficient<span class="pl-k">==</span><span class="pl-c1">0</span>)<span class="pl-k">return</span> zero;<span class="pl-k">var</span> coefficients<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(degree<span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">coefficients</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>)coefficients[i]<span class="pl-k">=</span><span class="pl-c1">0</span>;coefficients[<span class="pl-c1">0</span>]<span class="pl-k">=</span>coefficient;<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">GF256Poly</span>(<span class="pl-c1">this</span>,coefficients)};<span class="pl-c1">this</span>.<span class="pl-en">exp</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">expTable</span>[a]};<span class="pl-c1">this</span>.<span class="pl-en">log</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-c1">0</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>System.ArgumentException<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">logTable</span>[a]};<span class="pl-c1">this</span>.<span class="pl-en">inverse</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-c1">0</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>System.ArithmeticException<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">expTable</span>[<span class="pl-c1">255</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">logTable</span>[a]]};</td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">multiply</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-c1">0</span><span class="pl-k">||</span>b<span class="pl-k">==</span><span class="pl-c1">0</span>)<span class="pl-k">return</span> <span class="pl-c1">0</span>;<span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-c1">1</span>)<span class="pl-k">return</span> b;<span class="pl-k">if</span>(b<span class="pl-k">==</span><span class="pl-c1">1</span>)<span class="pl-k">return</span> a;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">expTable</span>[(<span class="pl-c1">this</span>.<span class="pl-smi">logTable</span>[a]<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">logTable</span>[b])<span class="pl-k">%</span><span class="pl-c1">255</span>]}}<span class="pl-c1">GF256</span>.<span class="pl-c1">QR_CODE_FIELD</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">GF256</span>(<span class="pl-c1">285</span>);<span class="pl-c1">GF256</span>.<span class="pl-c1">DATA_MATRIX_FIELD</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">GF256</span>(<span class="pl-c1">301</span>);<span class="pl-c1">GF256</span>.<span class="pl-en">addOrSubtract</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a<span class="pl-k">^</span>b};Decoder<span class="pl-k">=</span>{};<span class="pl-smi">Decoder</span>.<span class="pl-smi">rsDecoder</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ReedSolomonDecoder</span>(<span class="pl-c1">GF256</span>.<span class="pl-c1">QR_CODE_FIELD</span>);</td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Decoder</span>.<span class="pl-en">correctErrors</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">codewordBytes</span>,<span class="pl-smi">numDataCodewords</span>){<span class="pl-k">var</span> numCodewords<span class="pl-k">=</span><span class="pl-smi">codewordBytes</span>.<span class="pl-c1">length</span>;<span class="pl-k">var</span> codewordsInts<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(numCodewords);<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>numCodewords;i<span class="pl-k">++</span>)codewordsInts[i]<span class="pl-k">=</span>codewordBytes[i]<span class="pl-k">&amp;</span><span class="pl-c1">255</span>;<span class="pl-k">var</span> numECCodewords<span class="pl-k">=</span><span class="pl-smi">codewordBytes</span>.<span class="pl-c1">length</span><span class="pl-k">-</span>numDataCodewords;<span class="pl-k">try</span>{<span class="pl-smi">Decoder</span>.<span class="pl-smi">rsDecoder</span>.<span class="pl-en">decode</span>(codewordsInts,numECCodewords)}<span class="pl-k">catch</span>(rse){<span class="pl-k">throw</span> rse;}<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>numDataCodewords;i<span class="pl-k">++</span>)codewordBytes[i]<span class="pl-k">=</span>codewordsInts[i]};</td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Decoder</span>.<span class="pl-en">decode</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">bits</span>){<span class="pl-k">var</span> parser<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">BitMatrixParser</span>(bits);<span class="pl-k">var</span> version<span class="pl-k">=</span><span class="pl-smi">parser</span>.<span class="pl-en">readVersion</span>();<span class="pl-k">var</span> ecLevel<span class="pl-k">=</span><span class="pl-smi">parser</span>.<span class="pl-en">readFormatInformation</span>().<span class="pl-smi">ErrorCorrectionLevel</span>;<span class="pl-k">var</span> codewords<span class="pl-k">=</span><span class="pl-smi">parser</span>.<span class="pl-en">readCodewords</span>();<span class="pl-k">var</span> dataBlocks<span class="pl-k">=</span><span class="pl-smi">DataBlock</span>.<span class="pl-en">getDataBlocks</span>(codewords,version,ecLevel);<span class="pl-k">var</span> totalBytes<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">dataBlocks</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>)totalBytes<span class="pl-k">+=</span>dataBlocks[i].<span class="pl-smi">NumDataCodewords</span>;<span class="pl-k">var</span> resultBytes<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(totalBytes);<span class="pl-k">var</span> resultOffset<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span><span class="pl-smi">dataBlocks</span>.<span class="pl-c1">length</span>;j<span class="pl-k">++</span>){<span class="pl-k">var</span> dataBlock<span class="pl-k">=</span>dataBlocks[j];<span class="pl-k">var</span> codewordBytes<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">dataBlock</span>.<span class="pl-smi">Codewords</span>;<span class="pl-k">var</span> numDataCodewords<span class="pl-k">=</span><span class="pl-smi">dataBlock</span>.<span class="pl-smi">NumDataCodewords</span>;<span class="pl-smi">Decoder</span>.<span class="pl-en">correctErrors</span>(codewordBytes,numDataCodewords);<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>numDataCodewords;i<span class="pl-k">++</span>)resultBytes[resultOffset<span class="pl-k">++</span>]<span class="pl-k">=</span>codewordBytes[i]}<span class="pl-k">var</span> reader<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">QRCodeDataBlockReader</span>(resultBytes,<span class="pl-smi">version</span>.<span class="pl-smi">VersionNumber</span>,<span class="pl-smi">ecLevel</span>.<span class="pl-smi">Bits</span>);<span class="pl-k">return</span> reader};qrcode<span class="pl-k">=</span>{};<span class="pl-smi">qrcode</span>.<span class="pl-smi">imagedata</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">qrcode</span>.<span class="pl-smi">qrCodeSymbol</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">qrcode</span>.<span class="pl-smi">debug</span><span class="pl-k">=</span><span class="pl-c1">false</span>;<span class="pl-smi">qrcode</span>.<span class="pl-smi">maxImgSize</span><span class="pl-k">=</span><span class="pl-c1">1024</span><span class="pl-k">*</span><span class="pl-c1">1024</span>;<span class="pl-smi">qrcode</span>.<span class="pl-smi">sourceCanvas</span><span class="pl-k">=</span><span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">qrcode</span>.<span class="pl-smi">sizeOfDataLengthInfo</span><span class="pl-k">=</span>[[<span class="pl-c1">10</span>,<span class="pl-c1">9</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>],[<span class="pl-c1">12</span>,<span class="pl-c1">11</span>,<span class="pl-c1">16</span>,<span class="pl-c1">10</span>],[<span class="pl-c1">14</span>,<span class="pl-c1">13</span>,<span class="pl-c1">16</span>,<span class="pl-c1">12</span>]];<span class="pl-smi">qrcode</span>.<span class="pl-smi">callback</span><span class="pl-k">=</span><span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">qrcode</span>.<span class="pl-en">decode</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">src</span>){<span class="pl-k">if</span>(<span class="pl-c1">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">==</span><span class="pl-c1">0</span>){<span class="pl-k">var</span> canvas_qr<span class="pl-k">=</span><span class="pl-smi">qrcode</span>.<span class="pl-smi">sourceCanvas</span><span class="pl-k">?</span><span class="pl-smi">qrcode</span>.<span class="pl-smi">sourceCanvas</span><span class="pl-k">:</span><span class="pl-c1">document</span>.<span class="pl-c1">getElementById</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>qr-canvas<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> context<span class="pl-k">=</span><span class="pl-smi">canvas_qr</span>.<span class="pl-c1">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">canvas_qr</span>.<span class="pl-c1">width</span>;<span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">canvas_qr</span>.<span class="pl-c1">height</span>;<span class="pl-smi">qrcode</span>.<span class="pl-smi">imagedata</span><span class="pl-k">=</span><span class="pl-smi">context</span>.<span class="pl-en">getImageData</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>,<span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span>);<span class="pl-smi">qrcode</span>.<span class="pl-smi">result</span><span class="pl-k">=</span><span class="pl-smi">qrcode</span>.<span class="pl-en">process</span>(context);<span class="pl-k">if</span>(<span class="pl-smi">qrcode</span>.<span class="pl-smi">callback</span><span class="pl-k">!=</span><span class="pl-c1">null</span>)<span class="pl-smi">qrcode</span>.<span class="pl-en">callback</span>(<span class="pl-smi">qrcode</span>.<span class="pl-smi">result</span>);<span class="pl-k">return</span> <span class="pl-smi">qrcode</span>.<span class="pl-smi">result</span>}<span class="pl-k">else</span>{<span class="pl-k">var</span> image<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Image</span>;<span class="pl-smi">image</span>.<span class="pl-en">onload</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> canvas_qr<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> context<span class="pl-k">=</span><span class="pl-smi">canvas_qr</span>.<span class="pl-c1">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> nheight<span class="pl-k">=</span><span class="pl-smi">image</span>.<span class="pl-c1">height</span>;<span class="pl-k">var</span> nwidth<span class="pl-k">=</span><span class="pl-smi">image</span>.<span class="pl-c1">width</span>;<span class="pl-k">if</span>(<span class="pl-smi">image</span>.<span class="pl-c1">width</span><span class="pl-k">*</span><span class="pl-smi">image</span>.<span class="pl-c1">height</span><span class="pl-k">&gt;</span><span class="pl-smi">qrcode</span>.<span class="pl-smi">maxImgSize</span>){<span class="pl-k">var</span> ir<span class="pl-k">=</span><span class="pl-smi">image</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-smi">image</span>.<span class="pl-c1">height</span>;nheight<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-smi">qrcode</span>.<span class="pl-smi">maxImgSize</span><span class="pl-k">/</span>ir);nwidth<span class="pl-k">=</span>ir<span class="pl-k">*</span>nheight}<span class="pl-smi">canvas_qr</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>nwidth;<span class="pl-smi">canvas_qr</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>nheight;<span class="pl-smi">context</span>.<span class="pl-en">drawImage</span>(image,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">canvas_qr</span>.<span class="pl-c1">width</span>,<span class="pl-smi">canvas_qr</span>.<span class="pl-c1">height</span>);<span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">canvas_qr</span>.<span class="pl-c1">width</span>;<span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">canvas_qr</span>.<span class="pl-c1">height</span>;<span class="pl-k">try</span>{<span class="pl-smi">qrcode</span>.<span class="pl-smi">imagedata</span><span class="pl-k">=</span><span class="pl-smi">context</span>.<span class="pl-en">getImageData</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">canvas_qr</span>.<span class="pl-c1">width</span>,<span class="pl-smi">canvas_qr</span>.<span class="pl-c1">height</span>)}<span class="pl-k">catch</span>(e){<span class="pl-smi">qrcode</span>.<span class="pl-smi">result</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Cross domain image reading not supported in your browser! Save it to your computer then drag and drop the file!<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">qrcode</span>.<span class="pl-smi">callback</span><span class="pl-k">!=</span><span class="pl-c1">null</span>)<span class="pl-smi">qrcode</span>.<span class="pl-en">callback</span>(<span class="pl-smi">qrcode</span>.<span class="pl-smi">result</span>);<span class="pl-k">return</span>}<span class="pl-k">try</span>{<span class="pl-smi">qrcode</span>.<span class="pl-smi">result</span><span class="pl-k">=</span><span class="pl-smi">qrcode</span>.<span class="pl-en">process</span>(context)}<span class="pl-k">catch</span>(e){<span class="pl-smi">qrcode</span>.<span class="pl-smi">result</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>error decoding QR Code<span class="pl-pds">&quot;</span></span>}<span class="pl-k">if</span>(<span class="pl-smi">qrcode</span>.<span class="pl-smi">callback</span><span class="pl-k">!=</span><span class="pl-c1">null</span>)<span class="pl-smi">qrcode</span>.<span class="pl-en">callback</span>(<span class="pl-smi">qrcode</span>.<span class="pl-smi">result</span>)};<span class="pl-smi">image</span>.<span class="pl-smi">src</span><span class="pl-k">=</span>src}};<span class="pl-smi">qrcode</span>.<span class="pl-en">isUrl</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">s</span>){<span class="pl-k">var</span> regexp<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>(ftp<span class="pl-k">|</span>http<span class="pl-k">|</span>https):<span class="pl-cce">\/\/</span>(<span class="pl-c1">\w</span><span class="pl-k">+</span>:<span class="pl-k">{0,1}</span><span class="pl-c1">\w</span><span class="pl-k">*</span>@)<span class="pl-k">?</span>(<span class="pl-c1">\S</span><span class="pl-k">+</span>)(:<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-k">?</span>(<span class="pl-cce">\/</span><span class="pl-k">|</span><span class="pl-cce">\/</span>(<span class="pl-c1">[<span class="pl-c1">\w</span>#!:<span class="pl-c1">.</span>?+=&amp;%@!<span class="pl-c1">\-<span class="pl-cce">\/</span></span>]</span>))<span class="pl-k">?</span><span class="pl-pds">/</span></span>;<span class="pl-k">return</span> <span class="pl-smi">regexp</span>.<span class="pl-c1">test</span>(s)};</td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">qrcode</span>.<span class="pl-en">decode_url</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">s</span>){<span class="pl-k">var</span> escaped<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">try</span>{escaped<span class="pl-k">=</span><span class="pl-c1">escape</span>(s)}<span class="pl-k">catch</span>(e){escaped<span class="pl-k">=</span>s}<span class="pl-k">var</span> ret<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">try</span>{ret<span class="pl-k">=</span><span class="pl-c1">decodeURIComponent</span>(escaped)}<span class="pl-k">catch</span>(e){ret<span class="pl-k">=</span>escaped}<span class="pl-k">return</span> ret};<span class="pl-smi">qrcode</span>.<span class="pl-en">decode_utf8</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">s</span>){<span class="pl-k">if</span>(<span class="pl-smi">qrcode</span>.<span class="pl-en">isUrl</span>(s))<span class="pl-k">return</span> <span class="pl-smi">qrcode</span>.<span class="pl-en">decode_url</span>(s);<span class="pl-k">else</span> <span class="pl-k">return</span> s};</td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">qrcode</span>.<span class="pl-en">process</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">ctx</span>){<span class="pl-k">var</span> start<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">Date</span>).<span class="pl-c1">getTime</span>();<span class="pl-k">var</span> image<span class="pl-k">=</span><span class="pl-smi">qrcode</span>.<span class="pl-en">grayScaleToBitmap</span>(<span class="pl-smi">qrcode</span>.<span class="pl-en">grayscale</span>());<span class="pl-k">if</span>(<span class="pl-smi">qrcode</span>.<span class="pl-smi">debug</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-c1">0</span>;y<span class="pl-k">&lt;</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span>;y<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-c1">0</span>;x<span class="pl-k">&lt;</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>;x<span class="pl-k">++</span>){<span class="pl-k">var</span> point<span class="pl-k">=</span>x<span class="pl-k">*</span><span class="pl-c1">4</span><span class="pl-k">+</span>y<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span><span class="pl-k">*</span><span class="pl-c1">4</span>;<span class="pl-smi">qrcode</span>.<span class="pl-smi">imagedata</span>.<span class="pl-c1">data</span>[point]<span class="pl-k">=</span>image[x<span class="pl-k">+</span>y<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-smi">qrcode</span>.<span class="pl-smi">imagedata</span>.<span class="pl-c1">data</span>[point<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>image[x<span class="pl-k">+</span>y<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-smi">qrcode</span>.<span class="pl-smi">imagedata</span>.<span class="pl-c1">data</span>[point<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>image[x<span class="pl-k">+</span>y<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">?</span><span class="pl-c1">255</span><span class="pl-k">:</span><span class="pl-c1">0</span>}<span class="pl-smi">ctx</span>.<span class="pl-en">putImageData</span>(<span class="pl-smi">qrcode</span>.<span class="pl-smi">imagedata</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)}<span class="pl-k">var</span> detector<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Detector</span>(image);<span class="pl-k">var</span> qRCodeMatrix<span class="pl-k">=</span><span class="pl-smi">detector</span>.<span class="pl-en">detect</span>();</td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">qrcode</span>.<span class="pl-smi">debug</span>)<span class="pl-smi">ctx</span>.<span class="pl-en">putImageData</span>(<span class="pl-smi">qrcode</span>.<span class="pl-smi">imagedata</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-k">var</span> reader<span class="pl-k">=</span><span class="pl-smi">Decoder</span>.<span class="pl-en">decode</span>(<span class="pl-smi">qRCodeMatrix</span>.<span class="pl-smi">bits</span>);<span class="pl-k">var</span> data<span class="pl-k">=</span><span class="pl-smi">reader</span>.<span class="pl-smi">DataByte</span>;<span class="pl-k">var</span> str<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">data</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>data[i].<span class="pl-c1">length</span>;j<span class="pl-k">++</span>)str<span class="pl-k">+=</span><span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(data[i][j]);<span class="pl-k">var</span> end<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">Date</span>).<span class="pl-c1">getTime</span>();<span class="pl-k">var</span> time<span class="pl-k">=</span>end<span class="pl-k">-</span>start;<span class="pl-k">return</span> <span class="pl-smi">qrcode</span>.<span class="pl-en">decode_utf8</span>(str)};</td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">qrcode</span>.<span class="pl-en">getPixel</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">x</span>,<span class="pl-smi">y</span>){<span class="pl-k">if</span>(<span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span><span class="pl-k">&lt;</span>x)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>point error<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span><span class="pl-k">&lt;</span>y)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>point error<span class="pl-pds">&quot;</span></span>;point<span class="pl-k">=</span>x<span class="pl-k">*</span><span class="pl-c1">4</span><span class="pl-k">+</span>y<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span><span class="pl-k">*</span><span class="pl-c1">4</span>;p<span class="pl-k">=</span>(<span class="pl-smi">qrcode</span>.<span class="pl-smi">imagedata</span>.<span class="pl-c1">data</span>[point]<span class="pl-k">*</span><span class="pl-c1">33</span><span class="pl-k">+</span><span class="pl-smi">qrcode</span>.<span class="pl-smi">imagedata</span>.<span class="pl-c1">data</span>[point<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">*</span><span class="pl-c1">34</span><span class="pl-k">+</span><span class="pl-smi">qrcode</span>.<span class="pl-smi">imagedata</span>.<span class="pl-c1">data</span>[point<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">*</span><span class="pl-c1">33</span>)<span class="pl-k">/</span><span class="pl-c1">100</span>;<span class="pl-k">return</span> p};<span class="pl-smi">qrcode</span>.<span class="pl-en">binarize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">th</span>){<span class="pl-k">var</span> ret<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span><span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-c1">0</span>;y<span class="pl-k">&lt;</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span>;y<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-c1">0</span>;x<span class="pl-k">&lt;</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>;x<span class="pl-k">++</span>){<span class="pl-k">var</span> gray<span class="pl-k">=</span><span class="pl-smi">qrcode</span>.<span class="pl-en">getPixel</span>(x,y);ret[x<span class="pl-k">+</span>y<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">=</span>gray<span class="pl-k">&lt;=</span>th<span class="pl-k">?</span><span class="pl-c1">true</span><span class="pl-k">:</span><span class="pl-c1">false</span>}<span class="pl-k">return</span> ret};</td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">qrcode</span>.<span class="pl-en">getMiddleBrightnessPerArea</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">image</span>){<span class="pl-k">var</span> numSqrtArea<span class="pl-k">=</span><span class="pl-c1">4</span>;<span class="pl-k">var</span> areaWidth<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span><span class="pl-k">/</span>numSqrtArea);<span class="pl-k">var</span> areaHeight<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span><span class="pl-k">/</span>numSqrtArea);<span class="pl-k">var</span> minmax<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(numSqrtArea);<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>numSqrtArea;i<span class="pl-k">++</span>){minmax[i]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(numSqrtArea);<span class="pl-k">for</span>(<span class="pl-k">var</span> i2<span class="pl-k">=</span><span class="pl-c1">0</span>;i2<span class="pl-k">&lt;</span>numSqrtArea;i2<span class="pl-k">++</span>)minmax[i][i2]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)}<span class="pl-k">for</span>(<span class="pl-k">var</span> ay<span class="pl-k">=</span><span class="pl-c1">0</span>;ay<span class="pl-k">&lt;</span>numSqrtArea;ay<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> ax<span class="pl-k">=</span><span class="pl-c1">0</span>;ax<span class="pl-k">&lt;</span>numSqrtArea;ax<span class="pl-k">++</span>){minmax[ax][ay][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">255</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> dy<span class="pl-k">=</span><span class="pl-c1">0</span>;dy<span class="pl-k">&lt;</span>areaHeight;dy<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> dx<span class="pl-k">=</span><span class="pl-c1">0</span>;dx<span class="pl-k">&lt;</span>areaWidth;dx<span class="pl-k">++</span>){<span class="pl-k">var</span> target<span class="pl-k">=</span>image[areaWidth<span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line">ax<span class="pl-k">+</span>dx<span class="pl-k">+</span>(areaHeight<span class="pl-k">*</span>ay<span class="pl-k">+</span>dy)<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>];<span class="pl-k">if</span>(target<span class="pl-k">&lt;</span>minmax[ax][ay][<span class="pl-c1">0</span>])minmax[ax][ay][<span class="pl-c1">0</span>]<span class="pl-k">=</span>target;<span class="pl-k">if</span>(target<span class="pl-k">&gt;</span>minmax[ax][ay][<span class="pl-c1">1</span>])minmax[ax][ay][<span class="pl-c1">1</span>]<span class="pl-k">=</span>target}}<span class="pl-k">var</span> middle<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(numSqrtArea);<span class="pl-k">for</span>(<span class="pl-k">var</span> i3<span class="pl-k">=</span><span class="pl-c1">0</span>;i3<span class="pl-k">&lt;</span>numSqrtArea;i3<span class="pl-k">++</span>)middle[i3]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(numSqrtArea);<span class="pl-k">for</span>(<span class="pl-k">var</span> ay<span class="pl-k">=</span><span class="pl-c1">0</span>;ay<span class="pl-k">&lt;</span>numSqrtArea;ay<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> ax<span class="pl-k">=</span><span class="pl-c1">0</span>;ax<span class="pl-k">&lt;</span>numSqrtArea;ax<span class="pl-k">++</span>)middle[ax][ay]<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>((minmax[ax][ay][<span class="pl-c1">0</span>]<span class="pl-k">+</span>minmax[ax][ay][<span class="pl-c1">1</span>])<span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-k">return</span> middle};</td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">qrcode</span>.<span class="pl-en">grayScaleToBitmap</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">grayScale</span>){<span class="pl-k">var</span> middle<span class="pl-k">=</span><span class="pl-smi">qrcode</span>.<span class="pl-en">getMiddleBrightnessPerArea</span>(grayScale);<span class="pl-k">var</span> sqrtNumArea<span class="pl-k">=</span><span class="pl-smi">middle</span>.<span class="pl-c1">length</span>;<span class="pl-k">var</span> areaWidth<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span><span class="pl-k">/</span>sqrtNumArea);<span class="pl-k">var</span> areaHeight<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span><span class="pl-k">/</span>sqrtNumArea);<span class="pl-k">var</span> bitmap<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span><span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> ay<span class="pl-k">=</span><span class="pl-c1">0</span>;ay<span class="pl-k">&lt;</span>sqrtNumArea;ay<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> ax<span class="pl-k">=</span><span class="pl-c1">0</span>;ax<span class="pl-k">&lt;</span>sqrtNumArea;ax<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> dy<span class="pl-k">=</span><span class="pl-c1">0</span>;dy<span class="pl-k">&lt;</span>areaHeight;dy<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> dx<span class="pl-k">=</span><span class="pl-c1">0</span>;dx<span class="pl-k">&lt;</span>areaWidth;dx<span class="pl-k">++</span>)bitmap[areaWidth<span class="pl-k">*</span>ax<span class="pl-k">+</span>dx<span class="pl-k">+</span>(areaHeight<span class="pl-k">*</span>ay<span class="pl-k">+</span>dy)<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">=</span>grayScale[areaWidth<span class="pl-k">*</span>ax<span class="pl-k">+</span>dx<span class="pl-k">+</span>(areaHeight<span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line">ay<span class="pl-k">+</span>dy)<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">&lt;</span>middle[ax][ay]<span class="pl-k">?</span><span class="pl-c1">true</span><span class="pl-k">:</span><span class="pl-c1">false</span>;<span class="pl-k">return</span> bitmap};<span class="pl-smi">qrcode</span>.<span class="pl-en">grayscale</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> ret<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span><span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-c1">0</span>;y<span class="pl-k">&lt;</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span>;y<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-c1">0</span>;x<span class="pl-k">&lt;</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>;x<span class="pl-k">++</span>){<span class="pl-k">var</span> gray<span class="pl-k">=</span><span class="pl-smi">qrcode</span>.<span class="pl-en">getPixel</span>(x,y);ret[x<span class="pl-k">+</span>y<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">=</span>gray}<span class="pl-k">return</span> ret};<span class="pl-k">function</span> <span class="pl-en">URShift</span>(<span class="pl-smi">number</span>,<span class="pl-smi">bits</span>){<span class="pl-k">if</span>(number<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>)<span class="pl-k">return</span> number<span class="pl-k">&gt;&gt;</span>bits;<span class="pl-k">else</span> <span class="pl-k">return</span>(number<span class="pl-k">&gt;&gt;</span>bits)<span class="pl-k">+</span>(<span class="pl-c1">2</span><span class="pl-k">&lt;&lt;</span><span class="pl-k">~</span>bits)}</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">MIN_SKIP</span><span class="pl-k">=</span><span class="pl-c1">3</span>;<span class="pl-k">var</span> <span class="pl-c1">MAX_MODULES</span><span class="pl-k">=</span><span class="pl-c1">57</span>;<span class="pl-k">var</span> <span class="pl-c1">INTEGER_MATH_SHIFT</span><span class="pl-k">=</span><span class="pl-c1">8</span>;<span class="pl-k">var</span> <span class="pl-c1">CENTER_QUORUM</span><span class="pl-k">=</span><span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">qrcode</span>.<span class="pl-en">orderBestPatterns</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">patterns</span>){<span class="pl-k">function</span> <span class="pl-en">distance</span>(<span class="pl-smi">pattern1</span>,<span class="pl-smi">pattern2</span>){xDiff<span class="pl-k">=</span><span class="pl-smi">pattern1</span>.<span class="pl-c1">X</span><span class="pl-k">-</span><span class="pl-smi">pattern2</span>.<span class="pl-c1">X</span>;yDiff<span class="pl-k">=</span><span class="pl-smi">pattern1</span>.<span class="pl-c1">Y</span><span class="pl-k">-</span><span class="pl-smi">pattern2</span>.<span class="pl-c1">Y</span>;<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(xDiff<span class="pl-k">*</span>xDiff<span class="pl-k">+</span>yDiff<span class="pl-k">*</span>yDiff)}function crossProductZ(pointA,pointB,pointC){var bX=pointB.x;var bY=pointB.y;return(pointC.x-bX)*(pointA.y-bY)-(pointC.y-bY)*(pointA.x-bX)}var zeroOneDistance=distance(patterns[0],patterns[1]);var oneTwoDistance=distance(patterns[1],patterns[2]);var zeroTwoDistance=distance(patterns[0],patterns[2]);var pointA,pointB,pointC;</td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(oneTwoDistance<span class="pl-k">&gt;=</span>zeroOneDistance<span class="pl-k">&amp;&amp;</span>oneTwoDistance<span class="pl-k">&gt;=</span>zeroTwoDistance){pointB<span class="pl-k">=</span>patterns[<span class="pl-c1">0</span>];pointA<span class="pl-k">=</span>patterns[<span class="pl-c1">1</span>];pointC<span class="pl-k">=</span>patterns[<span class="pl-c1">2</span>]}<span class="pl-k">else</span> <span class="pl-k">if</span>(zeroTwoDistance<span class="pl-k">&gt;=</span>oneTwoDistance<span class="pl-k">&amp;&amp;</span>zeroTwoDistance<span class="pl-k">&gt;=</span>zeroOneDistance){pointB<span class="pl-k">=</span>patterns[<span class="pl-c1">1</span>];pointA<span class="pl-k">=</span>patterns[<span class="pl-c1">0</span>];pointC<span class="pl-k">=</span>patterns[<span class="pl-c1">2</span>]}<span class="pl-k">else</span>{pointB<span class="pl-k">=</span>patterns[<span class="pl-c1">2</span>];pointA<span class="pl-k">=</span>patterns[<span class="pl-c1">0</span>];pointC<span class="pl-k">=</span>patterns[<span class="pl-c1">1</span>]}<span class="pl-k">if</span>(<span class="pl-en">crossProductZ</span>(pointA,pointB,pointC)<span class="pl-k">&lt;</span><span class="pl-c1">0</span>){<span class="pl-k">var</span> temp<span class="pl-k">=</span>pointA;pointA<span class="pl-k">=</span>pointC;pointC<span class="pl-k">=</span>temp}patterns[<span class="pl-c1">0</span>]<span class="pl-k">=</span>pointA;patterns[<span class="pl-c1">1</span>]<span class="pl-k">=</span>pointB;patterns[<span class="pl-c1">2</span>]<span class="pl-k">=</span>pointC};</td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">FinderPattern</span>(<span class="pl-smi">posX</span>,<span class="pl-smi">posY</span>,<span class="pl-smi">estimatedModuleSize</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>posX;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>posY;<span class="pl-c1">this</span>.<span class="pl-smi">count</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">estimatedModuleSize</span><span class="pl-k">=</span>estimatedModuleSize;<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>EstimatedModuleSize<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">estimatedModuleSize</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Count<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">count</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>X<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">x</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Y<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">y</span>});<span class="pl-c1">this</span>.<span class="pl-en">incrementCount</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">count</span><span class="pl-k">++</span>};<span class="pl-c1">this</span>.<span class="pl-en">aboutEquals</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">moduleSize</span>,<span class="pl-smi">i</span>,<span class="pl-smi">j</span>){<span class="pl-k">if</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(i<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>)<span class="pl-k">&lt;=</span></td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line">moduleSize<span class="pl-k">&amp;&amp;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(j<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span>)<span class="pl-k">&lt;=</span>moduleSize){<span class="pl-k">var</span> moduleSizeDiff<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(moduleSize<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">estimatedModuleSize</span>);<span class="pl-k">return</span> moduleSizeDiff<span class="pl-k">&lt;=</span><span class="pl-c1">1</span><span class="pl-k">||</span>moduleSizeDiff<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">estimatedModuleSize</span><span class="pl-k">&lt;=</span><span class="pl-c1">1</span>}<span class="pl-k">return</span> <span class="pl-c1">false</span>}}</td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">FinderPatternInfo</span>(<span class="pl-smi">patternCenters</span>){<span class="pl-c1">this</span>.<span class="pl-smi">bottomLeft</span><span class="pl-k">=</span>patternCenters[<span class="pl-c1">0</span>];<span class="pl-c1">this</span>.<span class="pl-smi">topLeft</span><span class="pl-k">=</span>patternCenters[<span class="pl-c1">1</span>];<span class="pl-c1">this</span>.<span class="pl-smi">topRight</span><span class="pl-k">=</span>patternCenters[<span class="pl-c1">2</span>];<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>BottomLeft<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">bottomLeft</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>TopLeft<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">topLeft</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>TopRight<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">topRight</span>})}</td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">FinderPatternFinder</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">image</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">hasSkipped</span><span class="pl-k">=</span><span class="pl-c1">false</span>;<span class="pl-c1">this</span>.<span class="pl-smi">crossCheckStateCount</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">resultPointCallback</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>CrossCheckStateCount<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">crossCheckStateCount</span>[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">crossCheckStateCount</span>[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">crossCheckStateCount</span>[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">crossCheckStateCount</span>[<span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">crossCheckStateCount</span>[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">crossCheckStateCount</span>});<span class="pl-c1">this</span>.<span class="pl-en">foundPatternCross</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">stateCount</span>){<span class="pl-k">var</span> totalModuleSize<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-c1">5</span>;i<span class="pl-k">++</span>){<span class="pl-k">var</span> count<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code blob-code-inner js-file-line">stateCount[i];<span class="pl-k">if</span>(count<span class="pl-k">==</span><span class="pl-c1">0</span>)<span class="pl-k">return</span> <span class="pl-c1">false</span>;totalModuleSize<span class="pl-k">+=</span>count}<span class="pl-k">if</span>(totalModuleSize<span class="pl-k">&lt;</span><span class="pl-c1">7</span>)<span class="pl-k">return</span> <span class="pl-c1">false</span>;<span class="pl-k">var</span> moduleSize<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>((totalModuleSize<span class="pl-k">&lt;&lt;</span><span class="pl-c1">INTEGER_MATH_SHIFT</span>)<span class="pl-k">/</span><span class="pl-c1">7</span>);<span class="pl-k">var</span> maxVariance<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(moduleSize<span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(moduleSize<span class="pl-k">-</span>(stateCount[<span class="pl-c1">0</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">INTEGER_MATH_SHIFT</span>))<span class="pl-k">&lt;</span>maxVariance<span class="pl-k">&amp;&amp;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(moduleSize<span class="pl-k">-</span>(stateCount[<span class="pl-c1">1</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">INTEGER_MATH_SHIFT</span>))<span class="pl-k">&lt;</span>maxVariance<span class="pl-k">&amp;&amp;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">3</span><span class="pl-k">*</span>moduleSize<span class="pl-k">-</span>(stateCount[<span class="pl-c1">2</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">INTEGER_MATH_SHIFT</span>))<span class="pl-k">&lt;</span><span class="pl-c1">3</span><span class="pl-k">*</span>maxVariance<span class="pl-k">&amp;&amp;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(moduleSize<span class="pl-k">-</span>(stateCount[<span class="pl-c1">3</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">INTEGER_MATH_SHIFT</span>))<span class="pl-k">&lt;</span>maxVariance<span class="pl-k">&amp;&amp;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(moduleSize<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code blob-code-inner js-file-line">(stateCount[<span class="pl-c1">4</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">INTEGER_MATH_SHIFT</span>))<span class="pl-k">&lt;</span>maxVariance};<span class="pl-c1">this</span>.<span class="pl-en">centerFromEnd</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">stateCount</span>,<span class="pl-smi">end</span>){<span class="pl-k">return</span> end<span class="pl-k">-</span>stateCount[<span class="pl-c1">4</span>]<span class="pl-k">-</span>stateCount[<span class="pl-c1">3</span>]<span class="pl-k">-</span>stateCount[<span class="pl-c1">2</span>]<span class="pl-k">/</span><span class="pl-c1">2</span>};<span class="pl-c1">this</span>.<span class="pl-en">crossCheckVertical</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">startI</span>,<span class="pl-smi">centerJ</span>,<span class="pl-smi">maxCount</span>,<span class="pl-smi">originalStateCountTotal</span>){<span class="pl-k">var</span> image<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">image</span>;<span class="pl-k">var</span> maxI<span class="pl-k">=</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span>;<span class="pl-k">var</span> stateCount<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">CrossCheckStateCount</span>;<span class="pl-k">var</span> i<span class="pl-k">=</span>startI;<span class="pl-k">while</span>(i<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>image[centerJ<span class="pl-k">+</span>i<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]){stateCount[<span class="pl-c1">2</span>]<span class="pl-k">++</span>;i<span class="pl-k">--</span>}<span class="pl-k">if</span>(i<span class="pl-k">&lt;</span><span class="pl-c1">0</span>)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">while</span>(i<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;!</span>image[centerJ<span class="pl-k">+</span>i<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">&amp;&amp;</span>stateCount[<span class="pl-c1">1</span>]<span class="pl-k">&lt;=</span>maxCount){stateCount[<span class="pl-c1">1</span>]<span class="pl-k">++</span>;i<span class="pl-k">--</span>}<span class="pl-k">if</span>(i<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span><span class="pl-k">||</span>stateCount[<span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>maxCount)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">while</span>(i<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>image[centerJ<span class="pl-k">+</span>i<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">&amp;&amp;</span>stateCount[<span class="pl-c1">0</span>]<span class="pl-k">&lt;=</span>maxCount){stateCount[<span class="pl-c1">0</span>]<span class="pl-k">++</span>;i<span class="pl-k">--</span>}<span class="pl-k">if</span>(stateCount[<span class="pl-c1">0</span>]<span class="pl-k">&gt;</span>maxCount)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;i<span class="pl-k">=</span>startI<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">while</span>(i<span class="pl-k">&lt;</span>maxI<span class="pl-k">&amp;&amp;</span>image[centerJ<span class="pl-k">+</span>i<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]){stateCount[<span class="pl-c1">2</span>]<span class="pl-k">++</span>;i<span class="pl-k">++</span>}<span class="pl-k">if</span>(i<span class="pl-k">==</span>maxI)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">while</span>(i<span class="pl-k">&lt;</span>maxI<span class="pl-k">&amp;&amp;!</span>image[centerJ<span class="pl-k">+</span>i<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">&amp;&amp;</span>stateCount[<span class="pl-c1">3</span>]<span class="pl-k">&lt;</span>maxCount){stateCount[<span class="pl-c1">3</span>]<span class="pl-k">++</span>;i<span class="pl-k">++</span>}<span class="pl-k">if</span>(i<span class="pl-k">==</span>maxI<span class="pl-k">||</span>stateCount[<span class="pl-c1">3</span>]<span class="pl-k">&gt;=</span>maxCount)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">while</span>(i<span class="pl-k">&lt;</span>maxI<span class="pl-k">&amp;&amp;</span>image[centerJ<span class="pl-k">+</span>i<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">&amp;&amp;</span>stateCount[<span class="pl-c1">4</span>]<span class="pl-k">&lt;</span>maxCount){stateCount[<span class="pl-c1">4</span>]<span class="pl-k">++</span>;i<span class="pl-k">++</span>}<span class="pl-k">if</span>(stateCount[<span class="pl-c1">4</span>]<span class="pl-k">&gt;=</span></td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code blob-code-inner js-file-line">maxCount)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">var</span> stateCountTotal<span class="pl-k">=</span>stateCount[<span class="pl-c1">0</span>]<span class="pl-k">+</span>stateCount[<span class="pl-c1">1</span>]<span class="pl-k">+</span>stateCount[<span class="pl-c1">2</span>]<span class="pl-k">+</span>stateCount[<span class="pl-c1">3</span>]<span class="pl-k">+</span>stateCount[<span class="pl-c1">4</span>];<span class="pl-k">if</span>(<span class="pl-c1">5</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(stateCountTotal<span class="pl-k">-</span>originalStateCountTotal)<span class="pl-k">&gt;=</span><span class="pl-c1">2</span><span class="pl-k">*</span>originalStateCountTotal)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">foundPatternCross</span>(stateCount)<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">centerFromEnd</span>(stateCount,i)<span class="pl-k">:</span><span class="pl-c1">NaN</span>};<span class="pl-c1">this</span>.<span class="pl-en">crossCheckHorizontal</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">startJ</span>,<span class="pl-smi">centerI</span>,<span class="pl-smi">maxCount</span>,<span class="pl-smi">originalStateCountTotal</span>){<span class="pl-k">var</span> image<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">image</span>;<span class="pl-k">var</span> maxJ<span class="pl-k">=</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>;<span class="pl-k">var</span> stateCount<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">CrossCheckStateCount</span>;<span class="pl-k">var</span> j<span class="pl-k">=</span>startJ;<span class="pl-k">while</span>(j<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>image[j<span class="pl-k">+</span>centerI<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]){stateCount[<span class="pl-c1">2</span>]<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code blob-code-inner js-file-line">j<span class="pl-k">--</span>}<span class="pl-k">if</span>(j<span class="pl-k">&lt;</span><span class="pl-c1">0</span>)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">while</span>(j<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;!</span>image[j<span class="pl-k">+</span>centerI<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">&amp;&amp;</span>stateCount[<span class="pl-c1">1</span>]<span class="pl-k">&lt;=</span>maxCount){stateCount[<span class="pl-c1">1</span>]<span class="pl-k">++</span>;j<span class="pl-k">--</span>}<span class="pl-k">if</span>(j<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">||</span>stateCount[<span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>maxCount)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">while</span>(j<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>image[j<span class="pl-k">+</span>centerI<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">&amp;&amp;</span>stateCount[<span class="pl-c1">0</span>]<span class="pl-k">&lt;=</span>maxCount){stateCount[<span class="pl-c1">0</span>]<span class="pl-k">++</span>;j<span class="pl-k">--</span>}<span class="pl-k">if</span>(stateCount[<span class="pl-c1">0</span>]<span class="pl-k">&gt;</span>maxCount)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;j<span class="pl-k">=</span>startJ<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">while</span>(j<span class="pl-k">&lt;</span>maxJ<span class="pl-k">&amp;&amp;</span>image[j<span class="pl-k">+</span>centerI<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]){stateCount[<span class="pl-c1">2</span>]<span class="pl-k">++</span>;j<span class="pl-k">++</span>}<span class="pl-k">if</span>(j<span class="pl-k">==</span>maxJ)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">while</span>(j<span class="pl-k">&lt;</span>maxJ<span class="pl-k">&amp;&amp;!</span>image[j<span class="pl-k">+</span>centerI<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">&amp;&amp;</span>stateCount[<span class="pl-c1">3</span>]<span class="pl-k">&lt;</span>maxCount){stateCount[<span class="pl-c1">3</span>]<span class="pl-k">++</span>;j<span class="pl-k">++</span>}<span class="pl-k">if</span>(j<span class="pl-k">==</span>maxJ<span class="pl-k">||</span>stateCount[<span class="pl-c1">3</span>]<span class="pl-k">&gt;=</span>maxCount)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;</td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code blob-code-inner js-file-line"><span class="pl-k">while</span>(j<span class="pl-k">&lt;</span>maxJ<span class="pl-k">&amp;&amp;</span>image[j<span class="pl-k">+</span>centerI<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">&amp;&amp;</span>stateCount[<span class="pl-c1">4</span>]<span class="pl-k">&lt;</span>maxCount){stateCount[<span class="pl-c1">4</span>]<span class="pl-k">++</span>;j<span class="pl-k">++</span>}<span class="pl-k">if</span>(stateCount[<span class="pl-c1">4</span>]<span class="pl-k">&gt;=</span>maxCount)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">var</span> stateCountTotal<span class="pl-k">=</span>stateCount[<span class="pl-c1">0</span>]<span class="pl-k">+</span>stateCount[<span class="pl-c1">1</span>]<span class="pl-k">+</span>stateCount[<span class="pl-c1">2</span>]<span class="pl-k">+</span>stateCount[<span class="pl-c1">3</span>]<span class="pl-k">+</span>stateCount[<span class="pl-c1">4</span>];<span class="pl-k">if</span>(<span class="pl-c1">5</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(stateCountTotal<span class="pl-k">-</span>originalStateCountTotal)<span class="pl-k">&gt;=</span>originalStateCountTotal)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">foundPatternCross</span>(stateCount)<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">centerFromEnd</span>(stateCount,j)<span class="pl-k">:</span><span class="pl-c1">NaN</span>};<span class="pl-c1">this</span>.<span class="pl-en">handlePossibleCenter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">stateCount</span>,<span class="pl-smi">i</span>,<span class="pl-smi">j</span>){<span class="pl-k">var</span> stateCountTotal<span class="pl-k">=</span>stateCount[<span class="pl-c1">0</span>]<span class="pl-k">+</span>stateCount[<span class="pl-c1">1</span>]<span class="pl-k">+</span>stateCount[<span class="pl-c1">2</span>]<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code blob-code-inner js-file-line">stateCount[<span class="pl-c1">3</span>]<span class="pl-k">+</span>stateCount[<span class="pl-c1">4</span>];<span class="pl-k">var</span> centerJ<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">centerFromEnd</span>(stateCount,j);<span class="pl-k">var</span> centerI<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">crossCheckVertical</span>(i,<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(centerJ),stateCount[<span class="pl-c1">2</span>],stateCountTotal);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">isNaN</span>(centerI)){centerJ<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">crossCheckHorizontal</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(centerJ),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(centerI),stateCount[<span class="pl-c1">2</span>],stateCountTotal);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">isNaN</span>(centerJ)){<span class="pl-k">var</span> estimatedModuleSize<span class="pl-k">=</span>stateCountTotal<span class="pl-k">/</span><span class="pl-c1">7</span>;<span class="pl-k">var</span> found<span class="pl-k">=</span><span class="pl-c1">false</span>;<span class="pl-k">var</span> max<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> index<span class="pl-k">=</span><span class="pl-c1">0</span>;index<span class="pl-k">&lt;</span>max;index<span class="pl-k">++</span>){<span class="pl-k">var</span> center<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>[index];<span class="pl-k">if</span>(<span class="pl-smi">center</span>.<span class="pl-en">aboutEquals</span>(estimatedModuleSize,</td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code blob-code-inner js-file-line">centerI,centerJ)){<span class="pl-smi">center</span>.<span class="pl-en">incrementCount</span>();found<span class="pl-k">=</span><span class="pl-c1">true</span>;<span class="pl-k">break</span>}}<span class="pl-k">if</span>(<span class="pl-k">!</span>found){<span class="pl-k">var</span> point<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">FinderPattern</span>(centerJ,centerI,estimatedModuleSize);<span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>.<span class="pl-c1">push</span>(point);<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">resultPointCallback</span><span class="pl-k">!=</span><span class="pl-c1">null</span>)<span class="pl-c1">this</span>.<span class="pl-smi">resultPointCallback</span>.<span class="pl-en">foundPossibleResultPoint</span>(point)}<span class="pl-k">return</span> <span class="pl-c1">true</span>}}<span class="pl-k">return</span> <span class="pl-c1">false</span>};<span class="pl-c1">this</span>.<span class="pl-en">selectBestPatterns</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> startSize<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(startSize<span class="pl-k">&lt;</span><span class="pl-c1">3</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Couldn&#39;t find enough finder patterns<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(startSize<span class="pl-k">&gt;</span><span class="pl-c1">3</span>){<span class="pl-k">var</span> totalModuleSize<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> square<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>startSize;i<span class="pl-k">++</span>){<span class="pl-k">var</span> centerValue<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>[i].<span class="pl-smi">EstimatedModuleSize</span>;totalModuleSize<span class="pl-k">+=</span>centerValue;square<span class="pl-k">+=</span>centerValue<span class="pl-k">*</span>centerValue}<span class="pl-k">var</span> average<span class="pl-k">=</span>totalModuleSize<span class="pl-k">/</span>startSize;<span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">center1</span>,<span class="pl-smi">center2</span>){<span class="pl-k">var</span> dA<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-smi">center2</span>.<span class="pl-smi">EstimatedModuleSize</span><span class="pl-k">-</span>average);<span class="pl-k">var</span> dB<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-smi">center1</span>.<span class="pl-smi">EstimatedModuleSize</span><span class="pl-k">-</span>average);<span class="pl-k">if</span>(dA<span class="pl-k">&lt;</span>dB)<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(dA<span class="pl-k">==</span>dB)<span class="pl-k">return</span> <span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">return</span> <span class="pl-c1">1</span>});<span class="pl-k">var</span> stdDev<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(square<span class="pl-k">/</span>startSize<span class="pl-k">-</span>average<span class="pl-k">*</span>average);<span class="pl-k">var</span> limit<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">.2</span><span class="pl-k">*</span>average,stdDev);<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span></td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">3</span>;i<span class="pl-k">++</span>){<span class="pl-k">var</span> pattern<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>[i];<span class="pl-k">if</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-smi">pattern</span>.<span class="pl-smi">EstimatedModuleSize</span><span class="pl-k">-</span>average)<span class="pl-k">&gt;</span>limit){<span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>.<span class="pl-c1">splice</span>(i, <span class="pl-c1">1</span>);i<span class="pl-k">--</span>;}}}<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">3</span>)<span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">count</span><span class="pl-k">&gt;</span><span class="pl-smi">b</span>.<span class="pl-smi">count</span>)<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">count</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-smi">count</span>)<span class="pl-k">return</span> <span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-c1">0</span>});<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>[<span class="pl-c1">0</span>],<span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>[<span class="pl-c1">1</span>],<span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>[<span class="pl-c1">2</span>])};<span class="pl-c1">this</span>.<span class="pl-en">findRowSkip</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> max<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(max<span class="pl-k">&lt;=</span><span class="pl-c1">1</span>)<span class="pl-k">return</span> <span class="pl-c1">0</span>;<span class="pl-k">var</span> firstConfirmedCenter<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>max;i<span class="pl-k">++</span>){<span class="pl-k">var</span> center<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>[i];<span class="pl-k">if</span>(<span class="pl-smi">center</span>.<span class="pl-smi">Count</span><span class="pl-k">&gt;=</span><span class="pl-c1">CENTER_QUORUM</span>)<span class="pl-k">if</span>(firstConfirmedCenter<span class="pl-k">==</span><span class="pl-c1">null</span>)firstConfirmedCenter<span class="pl-k">=</span>center;<span class="pl-k">else</span>{<span class="pl-c1">this</span>.<span class="pl-smi">hasSkipped</span><span class="pl-k">=</span><span class="pl-c1">true</span>;<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>((<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-smi">firstConfirmedCenter</span>.<span class="pl-c1">X</span><span class="pl-k">-</span><span class="pl-smi">center</span>.<span class="pl-c1">X</span>)<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-smi">firstConfirmedCenter</span>.<span class="pl-c1">Y</span><span class="pl-k">-</span><span class="pl-smi">center</span>.<span class="pl-c1">Y</span>))<span class="pl-k">/</span><span class="pl-c1">2</span>)}}<span class="pl-k">return</span> <span class="pl-c1">0</span>};<span class="pl-c1">this</span>.<span class="pl-en">haveMultiplyConfirmedCenters</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> confirmedCount<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> totalModuleSize<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> max<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>max;i<span class="pl-k">++</span>){<span class="pl-k">var</span> pattern<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>[i];<span class="pl-k">if</span>(<span class="pl-smi">pattern</span>.<span class="pl-smi">Count</span><span class="pl-k">&gt;=</span><span class="pl-c1">CENTER_QUORUM</span>){confirmedCount<span class="pl-k">++</span>;totalModuleSize<span class="pl-k">+=</span></td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">pattern</span>.<span class="pl-smi">EstimatedModuleSize</span>}}<span class="pl-k">if</span>(confirmedCount<span class="pl-k">&lt;</span><span class="pl-c1">3</span>)<span class="pl-k">return</span> <span class="pl-c1">false</span>;<span class="pl-k">var</span> average<span class="pl-k">=</span>totalModuleSize<span class="pl-k">/</span>max;<span class="pl-k">var</span> totalDeviation<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>max;i<span class="pl-k">++</span>){pattern<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>[i];totalDeviation<span class="pl-k">+=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-smi">pattern</span>.<span class="pl-smi">EstimatedModuleSize</span><span class="pl-k">-</span>average)}<span class="pl-k">return</span> totalDeviation<span class="pl-k">&lt;=</span><span class="pl-c1">.05</span><span class="pl-k">*</span>totalModuleSize};<span class="pl-c1">this</span>.<span class="pl-en">findFinderPattern</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">image</span>){<span class="pl-k">var</span> tryHarder<span class="pl-k">=</span><span class="pl-c1">false</span>;<span class="pl-c1">this</span>.<span class="pl-smi">image</span><span class="pl-k">=</span>image;<span class="pl-k">var</span> maxI<span class="pl-k">=</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span>;<span class="pl-k">var</span> maxJ<span class="pl-k">=</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>;<span class="pl-k">var</span> iSkip<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">3</span><span class="pl-k">*</span>maxI<span class="pl-k">/</span>(<span class="pl-c1">4</span><span class="pl-k">*</span><span class="pl-c1">MAX_MODULES</span>));<span class="pl-k">if</span>(iSkip<span class="pl-k">&lt;</span><span class="pl-c1">MIN_SKIP</span><span class="pl-k">||</span>tryHarder)iSkip<span class="pl-k">=</span><span class="pl-c1">MIN_SKIP</span>;<span class="pl-k">var</span> done<span class="pl-k">=</span><span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> stateCount<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">5</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span>iSkip<span class="pl-k">-</span><span class="pl-c1">1</span>;i<span class="pl-k">&lt;</span>maxI<span class="pl-k">&amp;&amp;!</span>done;i<span class="pl-k">+=</span>iSkip){stateCount[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;stateCount[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;stateCount[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;stateCount[<span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;stateCount[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> currentState<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>maxJ;j<span class="pl-k">++</span>)<span class="pl-k">if</span>(image[j<span class="pl-k">+</span>i<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]){<span class="pl-k">if</span>((currentState<span class="pl-k">&amp;</span><span class="pl-c1">1</span>)<span class="pl-k">==</span><span class="pl-c1">1</span>)currentState<span class="pl-k">++</span>;stateCount[currentState]<span class="pl-k">++</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>((currentState<span class="pl-k">&amp;</span><span class="pl-c1">1</span>)<span class="pl-k">==</span><span class="pl-c1">0</span>)<span class="pl-k">if</span>(currentState<span class="pl-k">==</span><span class="pl-c1">4</span>)<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">foundPatternCross</span>(stateCount)){<span class="pl-k">var</span> confirmed<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">handlePossibleCenter</span>(stateCount,i,j);<span class="pl-k">if</span>(confirmed){iSkip<span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">hasSkipped</span>)done<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">haveMultiplyConfirmedCenters</span>();</td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code blob-code-inner js-file-line"><span class="pl-k">else</span>{<span class="pl-k">var</span> rowSkip<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">findRowSkip</span>();<span class="pl-k">if</span>(rowSkip<span class="pl-k">&gt;</span>stateCount[<span class="pl-c1">2</span>]){i<span class="pl-k">+=</span>rowSkip<span class="pl-k">-</span>stateCount[<span class="pl-c1">2</span>]<span class="pl-k">-</span>iSkip;j<span class="pl-k">=</span>maxJ<span class="pl-k">-</span><span class="pl-c1">1</span>}}}<span class="pl-k">else</span>{<span class="pl-k">do</span> j<span class="pl-k">++</span>;<span class="pl-k">while</span>(j<span class="pl-k">&lt;</span>maxJ<span class="pl-k">&amp;&amp;!</span>image[j<span class="pl-k">+</span>i<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]);j<span class="pl-k">--</span>}currentState<span class="pl-k">=</span><span class="pl-c1">0</span>;stateCount[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;stateCount[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;stateCount[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;stateCount[<span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;stateCount[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-k">else</span>{stateCount[<span class="pl-c1">0</span>]<span class="pl-k">=</span>stateCount[<span class="pl-c1">2</span>];stateCount[<span class="pl-c1">1</span>]<span class="pl-k">=</span>stateCount[<span class="pl-c1">3</span>];stateCount[<span class="pl-c1">2</span>]<span class="pl-k">=</span>stateCount[<span class="pl-c1">4</span>];stateCount[<span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;stateCount[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;currentState<span class="pl-k">=</span><span class="pl-c1">3</span>}<span class="pl-k">else</span> stateCount[<span class="pl-k">++</span>currentState]<span class="pl-k">++</span>;<span class="pl-k">else</span> stateCount[currentState]<span class="pl-k">++</span>;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">foundPatternCross</span>(stateCount)){<span class="pl-k">var</span> confirmed<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">handlePossibleCenter</span>(stateCount,i,maxJ);<span class="pl-k">if</span>(confirmed){iSkip<span class="pl-k">=</span>stateCount[<span class="pl-c1">0</span>];<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">hasSkipped</span>)done<span class="pl-k">=</span><span class="pl-en">haveMultiplyConfirmedCenters</span>()}}}<span class="pl-k">var</span> patternInfo<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">selectBestPatterns</span>();<span class="pl-smi">qrcode</span>.<span class="pl-en">orderBestPatterns</span>(patternInfo);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">FinderPatternInfo</span>(patternInfo)}}</td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">AlignmentPattern</span>(<span class="pl-smi">posX</span>,<span class="pl-smi">posY</span>,<span class="pl-smi">estimatedModuleSize</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>posX;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>posY;<span class="pl-c1">this</span>.<span class="pl-smi">count</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">estimatedModuleSize</span><span class="pl-k">=</span>estimatedModuleSize;<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>EstimatedModuleSize<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">estimatedModuleSize</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Count<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">count</span>});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>X<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>)});<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Y<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>)});<span class="pl-c1">this</span>.<span class="pl-en">incrementCount</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">count</span><span class="pl-k">++</span>};<span class="pl-c1">this</span>.<span class="pl-en">aboutEquals</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">moduleSize</span>,</td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">i</span>,<span class="pl-smi">j</span>){<span class="pl-k">if</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(i<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>)<span class="pl-k">&lt;=</span>moduleSize<span class="pl-k">&amp;&amp;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(j<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span>)<span class="pl-k">&lt;=</span>moduleSize){<span class="pl-k">var</span> moduleSizeDiff<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(moduleSize<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">estimatedModuleSize</span>);<span class="pl-k">return</span> moduleSizeDiff<span class="pl-k">&lt;=</span><span class="pl-c1">1</span><span class="pl-k">||</span>moduleSizeDiff<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">estimatedModuleSize</span><span class="pl-k">&lt;=</span><span class="pl-c1">1</span>}<span class="pl-k">return</span> <span class="pl-c1">false</span>}}</td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">AlignmentPatternFinder</span>(<span class="pl-smi">image</span>,<span class="pl-smi">startX</span>,<span class="pl-smi">startY</span>,<span class="pl-smi">width</span>,<span class="pl-smi">height</span>,<span class="pl-smi">moduleSize</span>,<span class="pl-smi">resultPointCallback</span>){<span class="pl-c1">this</span>.<span class="pl-smi">image</span><span class="pl-k">=</span>image;<span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>;<span class="pl-c1">this</span>.<span class="pl-smi">startX</span><span class="pl-k">=</span>startX;<span class="pl-c1">this</span>.<span class="pl-smi">startY</span><span class="pl-k">=</span>startY;<span class="pl-c1">this</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>width;<span class="pl-c1">this</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>height;<span class="pl-c1">this</span>.<span class="pl-smi">moduleSize</span><span class="pl-k">=</span>moduleSize;<span class="pl-c1">this</span>.<span class="pl-smi">crossCheckStateCount</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">resultPointCallback</span><span class="pl-k">=</span>resultPointCallback;<span class="pl-c1">this</span>.<span class="pl-en">centerFromEnd</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">stateCount</span>,<span class="pl-smi">end</span>){<span class="pl-k">return</span> end<span class="pl-k">-</span>stateCount[<span class="pl-c1">2</span>]<span class="pl-k">-</span>stateCount[<span class="pl-c1">1</span>]<span class="pl-k">/</span><span class="pl-c1">2</span>};<span class="pl-c1">this</span>.<span class="pl-en">foundPatternCross</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">stateCount</span>){<span class="pl-k">var</span> moduleSize<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">moduleSize</span>;<span class="pl-k">var</span> maxVariance<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code blob-code-inner js-file-line">moduleSize<span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-c1">3</span>;i<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(moduleSize<span class="pl-k">-</span>stateCount[i])<span class="pl-k">&gt;=</span>maxVariance)<span class="pl-k">return</span> <span class="pl-c1">false</span>;<span class="pl-k">return</span> <span class="pl-c1">true</span>};<span class="pl-c1">this</span>.<span class="pl-en">crossCheckVertical</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">startI</span>,<span class="pl-smi">centerJ</span>,<span class="pl-smi">maxCount</span>,<span class="pl-smi">originalStateCountTotal</span>){<span class="pl-k">var</span> image<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">image</span>;<span class="pl-k">var</span> maxI<span class="pl-k">=</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">height</span>;<span class="pl-k">var</span> stateCount<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">crossCheckStateCount</span>;stateCount[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;stateCount[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;stateCount[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> i<span class="pl-k">=</span>startI;<span class="pl-k">while</span>(i<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>image[centerJ<span class="pl-k">+</span>i<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">&amp;&amp;</span>stateCount[<span class="pl-c1">1</span>]<span class="pl-k">&lt;=</span>maxCount){stateCount[<span class="pl-c1">1</span>]<span class="pl-k">++</span>;i<span class="pl-k">--</span>}<span class="pl-k">if</span>(i<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">||</span>stateCount[<span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>maxCount)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">while</span>(i<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;!</span>image[centerJ<span class="pl-k">+</span>i<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code blob-code-inner js-file-line">stateCount[<span class="pl-c1">0</span>]<span class="pl-k">&lt;=</span>maxCount){stateCount[<span class="pl-c1">0</span>]<span class="pl-k">++</span>;i<span class="pl-k">--</span>}<span class="pl-k">if</span>(stateCount[<span class="pl-c1">0</span>]<span class="pl-k">&gt;</span>maxCount)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;i<span class="pl-k">=</span>startI<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">while</span>(i<span class="pl-k">&lt;</span>maxI<span class="pl-k">&amp;&amp;</span>image[centerJ<span class="pl-k">+</span>i<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">&amp;&amp;</span>stateCount[<span class="pl-c1">1</span>]<span class="pl-k">&lt;=</span>maxCount){stateCount[<span class="pl-c1">1</span>]<span class="pl-k">++</span>;i<span class="pl-k">++</span>}<span class="pl-k">if</span>(i<span class="pl-k">==</span>maxI<span class="pl-k">||</span>stateCount[<span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>maxCount)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">while</span>(i<span class="pl-k">&lt;</span>maxI<span class="pl-k">&amp;&amp;!</span>image[centerJ<span class="pl-k">+</span>i<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>]<span class="pl-k">&amp;&amp;</span>stateCount[<span class="pl-c1">2</span>]<span class="pl-k">&lt;=</span>maxCount){stateCount[<span class="pl-c1">2</span>]<span class="pl-k">++</span>;i<span class="pl-k">++</span>}<span class="pl-k">if</span>(stateCount[<span class="pl-c1">2</span>]<span class="pl-k">&gt;</span>maxCount)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">var</span> stateCountTotal<span class="pl-k">=</span>stateCount[<span class="pl-c1">0</span>]<span class="pl-k">+</span>stateCount[<span class="pl-c1">1</span>]<span class="pl-k">+</span>stateCount[<span class="pl-c1">2</span>];<span class="pl-k">if</span>(<span class="pl-c1">5</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(stateCountTotal<span class="pl-k">-</span>originalStateCountTotal)<span class="pl-k">&gt;=</span><span class="pl-c1">2</span><span class="pl-k">*</span>originalStateCountTotal)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;</td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">foundPatternCross</span>(stateCount)<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">centerFromEnd</span>(stateCount,i)<span class="pl-k">:</span><span class="pl-c1">NaN</span>};<span class="pl-c1">this</span>.<span class="pl-en">handlePossibleCenter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">stateCount</span>,<span class="pl-smi">i</span>,<span class="pl-smi">j</span>){<span class="pl-k">var</span> stateCountTotal<span class="pl-k">=</span>stateCount[<span class="pl-c1">0</span>]<span class="pl-k">+</span>stateCount[<span class="pl-c1">1</span>]<span class="pl-k">+</span>stateCount[<span class="pl-c1">2</span>];<span class="pl-k">var</span> centerJ<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">centerFromEnd</span>(stateCount,j);<span class="pl-k">var</span> centerI<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">crossCheckVertical</span>(i,<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(centerJ),<span class="pl-c1">2</span><span class="pl-k">*</span>stateCount[<span class="pl-c1">1</span>],stateCountTotal);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">isNaN</span>(centerI)){<span class="pl-k">var</span> estimatedModuleSize<span class="pl-k">=</span>(stateCount[<span class="pl-c1">0</span>]<span class="pl-k">+</span>stateCount[<span class="pl-c1">1</span>]<span class="pl-k">+</span>stateCount[<span class="pl-c1">2</span>])<span class="pl-k">/</span><span class="pl-c1">3</span>;<span class="pl-k">var</span> max<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> index<span class="pl-k">=</span><span class="pl-c1">0</span>;index<span class="pl-k">&lt;</span>max;index<span class="pl-k">++</span>){<span class="pl-k">var</span> center<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>[index];<span class="pl-k">if</span>(<span class="pl-smi">center</span>.<span class="pl-en">aboutEquals</span>(estimatedModuleSize,centerI,centerJ))<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">AlignmentPattern</span>(centerJ,centerI,estimatedModuleSize)}<span class="pl-k">var</span> point<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">AlignmentPattern</span>(centerJ,centerI,estimatedModuleSize);<span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>.<span class="pl-c1">push</span>(point);<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">resultPointCallback</span><span class="pl-k">!=</span><span class="pl-c1">null</span>)<span class="pl-c1">this</span>.<span class="pl-smi">resultPointCallback</span>.<span class="pl-en">foundPossibleResultPoint</span>(point)}<span class="pl-k">return</span> <span class="pl-c1">null</span>};<span class="pl-c1">this</span>.<span class="pl-en">find</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> startX<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">startX</span>;<span class="pl-k">var</span> height<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">height</span>;<span class="pl-k">var</span> maxJ<span class="pl-k">=</span>startX<span class="pl-k">+</span>width;<span class="pl-k">var</span> middleI<span class="pl-k">=</span>startY<span class="pl-k">+</span>(height<span class="pl-k">&gt;&gt;</span><span class="pl-c1">1</span>);<span class="pl-k">var</span> stateCount<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> iGen<span class="pl-k">=</span><span class="pl-c1">0</span>;iGen<span class="pl-k">&lt;</span>height;iGen<span class="pl-k">++</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span>middleI<span class="pl-k">+</span>((iGen<span class="pl-k">&amp;</span><span class="pl-c1">1</span>)<span class="pl-k">==</span><span class="pl-c1">0</span><span class="pl-k">?</span>iGen<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span>(iGen<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">1</span>));stateCount[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;stateCount[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;stateCount[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> j<span class="pl-k">=</span>startX;<span class="pl-k">while</span>(j<span class="pl-k">&lt;</span>maxJ<span class="pl-k">&amp;&amp;!</span>image[j<span class="pl-k">+</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span><span class="pl-k">*</span>i])j<span class="pl-k">++</span>;<span class="pl-k">var</span> currentState<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">while</span>(j<span class="pl-k">&lt;</span>maxJ){<span class="pl-k">if</span>(image[j<span class="pl-k">+</span>i<span class="pl-k">*</span><span class="pl-smi">qrcode</span>.<span class="pl-c1">width</span>])<span class="pl-k">if</span>(currentState<span class="pl-k">==</span><span class="pl-c1">1</span>)stateCount[currentState]<span class="pl-k">++</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(currentState<span class="pl-k">==</span><span class="pl-c1">2</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">foundPatternCross</span>(stateCount)){<span class="pl-k">var</span> confirmed<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">handlePossibleCenter</span>(stateCount,i,j);<span class="pl-k">if</span>(confirmed<span class="pl-k">!=</span><span class="pl-c1">null</span>)<span class="pl-k">return</span> confirmed}stateCount[<span class="pl-c1">0</span>]<span class="pl-k">=</span>stateCount[<span class="pl-c1">2</span>];stateCount[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code blob-code-inner js-file-line">stateCount[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;currentState<span class="pl-k">=</span><span class="pl-c1">1</span>}<span class="pl-k">else</span> stateCount[<span class="pl-k">++</span>currentState]<span class="pl-k">++</span>;<span class="pl-k">else</span>{<span class="pl-k">if</span>(currentState<span class="pl-k">==</span><span class="pl-c1">1</span>)currentState<span class="pl-k">++</span>;stateCount[currentState]<span class="pl-k">++</span>}j<span class="pl-k">++</span>}<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">foundPatternCross</span>(stateCount)){<span class="pl-k">var</span> confirmed<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">handlePossibleCenter</span>(stateCount,i,maxJ);<span class="pl-k">if</span>(confirmed<span class="pl-k">!=</span><span class="pl-c1">null</span>)<span class="pl-k">return</span> confirmed}}<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>.<span class="pl-c1">length</span><span class="pl-k">==</span><span class="pl-c1">0</span>))<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">possibleCenters</span>[<span class="pl-c1">0</span>];<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Couldn&#39;t find enough alignment patterns<span class="pl-pds">&quot;</span></span>;}}</td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">QRCodeDataBlockReader</span>(<span class="pl-smi">blocks</span>,<span class="pl-smi">version</span>,<span class="pl-smi">numErrorCorrectionCode</span>){<span class="pl-c1">this</span>.<span class="pl-smi">blockPointer</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">=</span><span class="pl-c1">7</span>;<span class="pl-c1">this</span>.<span class="pl-smi">dataLength</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">blocks</span><span class="pl-k">=</span>blocks;<span class="pl-c1">this</span>.<span class="pl-smi">numErrorCorrectionCode</span><span class="pl-k">=</span>numErrorCorrectionCode;<span class="pl-k">if</span>(version<span class="pl-k">&lt;=</span><span class="pl-c1">9</span>)<span class="pl-c1">this</span>.<span class="pl-smi">dataLengthMode</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(version<span class="pl-k">&gt;=</span><span class="pl-c1">10</span><span class="pl-k">&amp;&amp;</span>version<span class="pl-k">&lt;=</span><span class="pl-c1">26</span>)<span class="pl-c1">this</span>.<span class="pl-smi">dataLengthMode</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(version<span class="pl-k">&gt;=</span><span class="pl-c1">27</span><span class="pl-k">&amp;&amp;</span>version<span class="pl-k">&lt;=</span><span class="pl-c1">40</span>)<span class="pl-c1">this</span>.<span class="pl-smi">dataLengthMode</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-c1">this</span>.<span class="pl-en">getNextBits</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">numBits</span>){<span class="pl-k">var</span> bits<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(numBits<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">+</span><span class="pl-c1">1</span>){<span class="pl-k">var</span> mask<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>numBits;i<span class="pl-k">++</span>)mask<span class="pl-k">+=</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>i;mask<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">-</span>numBits<span class="pl-k">+</span><span class="pl-c1">1</span>;bits<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code blob-code-inner js-file-line">(<span class="pl-c1">this</span>.<span class="pl-smi">blocks</span>[<span class="pl-c1">this</span>.<span class="pl-smi">blockPointer</span>]<span class="pl-k">&amp;</span>mask)<span class="pl-k">&gt;&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">-</span>numBits<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">-=</span>numBits;<span class="pl-k">return</span> bits}<span class="pl-k">else</span> <span class="pl-k">if</span>(numBits<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">8</span>){<span class="pl-k">var</span> mask1<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">+</span><span class="pl-c1">1</span>;i<span class="pl-k">++</span>)mask1<span class="pl-k">+=</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>i;bits<span class="pl-k">=</span>(<span class="pl-c1">this</span>.<span class="pl-smi">blocks</span>[<span class="pl-c1">this</span>.<span class="pl-smi">blockPointer</span>]<span class="pl-k">&amp;</span>mask1)<span class="pl-k">&lt;&lt;</span>numBits<span class="pl-k">-</span>(<span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">blockPointer</span><span class="pl-k">++</span>;bits<span class="pl-k">+=</span><span class="pl-c1">this</span>.<span class="pl-smi">blocks</span>[<span class="pl-c1">this</span>.<span class="pl-smi">blockPointer</span>]<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">-</span>(numBits<span class="pl-k">-</span>(<span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">+</span><span class="pl-c1">1</span>));<span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">-</span>numBits<span class="pl-k">%</span><span class="pl-c1">8</span>;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">&lt;</span><span class="pl-c1">0</span>)<span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">=</span><span class="pl-c1">8</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span>;<span class="pl-k">return</span> bits}<span class="pl-k">else</span> <span class="pl-k">if</span>(numBits<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">16</span>){<span class="pl-k">var</span> mask1<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> mask3<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">+</span><span class="pl-c1">1</span>;i<span class="pl-k">++</span>)mask1<span class="pl-k">+=</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>i;<span class="pl-k">var</span> bitsFirstBlock<span class="pl-k">=</span>(<span class="pl-c1">this</span>.<span class="pl-smi">blocks</span>[<span class="pl-c1">this</span>.<span class="pl-smi">blockPointer</span>]<span class="pl-k">&amp;</span>mask1)<span class="pl-k">&lt;&lt;</span>numBits<span class="pl-k">-</span>(<span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">blockPointer</span><span class="pl-k">++</span>;<span class="pl-k">var</span> bitsSecondBlock<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">blocks</span>[<span class="pl-c1">this</span>.<span class="pl-smi">blockPointer</span>]<span class="pl-k">&lt;&lt;</span>numBits<span class="pl-k">-</span>(<span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">8</span>);<span class="pl-c1">this</span>.<span class="pl-smi">blockPointer</span><span class="pl-k">++</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>numBits<span class="pl-k">-</span>(<span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">8</span>);i<span class="pl-k">++</span>)mask3<span class="pl-k">+=</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>i;mask3<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">8</span><span class="pl-k">-</span>(numBits<span class="pl-k">-</span>(<span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">8</span>));<span class="pl-k">var</span> bitsThirdBlock<span class="pl-k">=</span>(<span class="pl-c1">this</span>.<span class="pl-smi">blocks</span>[<span class="pl-c1">this</span>.<span class="pl-smi">blockPointer</span>]<span class="pl-k">&amp;</span>mask3)<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">-</span>(numBits<span class="pl-k">-</span>(<span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">8</span>));bits<span class="pl-k">=</span>bitsFirstBlock<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code blob-code-inner js-file-line">bitsSecondBlock<span class="pl-k">+</span>bitsThirdBlock;<span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">-</span>(numBits<span class="pl-k">-</span><span class="pl-c1">8</span>)<span class="pl-k">%</span><span class="pl-c1">8</span>;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">&lt;</span><span class="pl-c1">0</span>)<span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">=</span><span class="pl-c1">8</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span>;<span class="pl-k">return</span> bits}<span class="pl-k">else</span> <span class="pl-k">return</span> <span class="pl-c1">0</span>};<span class="pl-c1">this</span>.<span class="pl-en">NextMode</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">blockPointer</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">blocks</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">numErrorCorrectionCode</span><span class="pl-k">-</span><span class="pl-c1">2</span>)<span class="pl-k">return</span> <span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getNextBits</span>(<span class="pl-c1">4</span>)};<span class="pl-c1">this</span>.<span class="pl-en">getDataLength</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">modeIndicator</span>){<span class="pl-k">var</span> index<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">while</span>(<span class="pl-c1">true</span>){<span class="pl-k">if</span>(modeIndicator<span class="pl-k">&gt;&gt;</span>index<span class="pl-k">==</span><span class="pl-c1">1</span>)<span class="pl-k">break</span>;index<span class="pl-k">++</span>}<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getNextBits</span>(<span class="pl-smi">qrcode</span>.<span class="pl-smi">sizeOfDataLengthInfo</span>[<span class="pl-c1">this</span>.<span class="pl-smi">dataLengthMode</span>][index])};<span class="pl-c1">this</span>.<span class="pl-smi">getRomanAndFigureString</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">dataLength</span>){<span class="pl-k">var</span> length<span class="pl-k">=</span>dataLength;<span class="pl-k">var</span> intData<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> strData<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> tableRomanAndFigure<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>2<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>3<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>4<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>5<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>6<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>7<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>8<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>9<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>B<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>D<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>E<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>F<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>G<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>I<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>J<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>K<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>N<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>O<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>P<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Q<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>R<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>S<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>T<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>U<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>W<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>X<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Y<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>*<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>+<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span>);<span class="pl-k">do</span> <span class="pl-k">if</span>(length<span class="pl-k">&gt;</span><span class="pl-c1">1</span>){intData<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getNextBits</span>(<span class="pl-c1">11</span>);<span class="pl-k">var</span> firstLetter<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(intData<span class="pl-k">/</span><span class="pl-c1">45</span>);<span class="pl-k">var</span> secondLetter<span class="pl-k">=</span>intData<span class="pl-k">%</span><span class="pl-c1">45</span>;strData<span class="pl-k">+=</span>tableRomanAndFigure[firstLetter];strData<span class="pl-k">+=</span>tableRomanAndFigure[secondLetter];length<span class="pl-k">-=</span><span class="pl-c1">2</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(length<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>){intData<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getNextBits</span>(<span class="pl-c1">6</span>);strData<span class="pl-k">+=</span>tableRomanAndFigure[intData];length<span class="pl-k">-=</span><span class="pl-c1">1</span>}<span class="pl-k">while</span>(length<span class="pl-k">&gt;</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> strData};<span class="pl-c1">this</span>.<span class="pl-en">getFigureString</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">dataLength</span>){<span class="pl-k">var</span> length<span class="pl-k">=</span>dataLength;<span class="pl-k">var</span> intData<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> strData<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">do</span>{<span class="pl-k">if</span>(length<span class="pl-k">&gt;=</span><span class="pl-c1">3</span>){intData<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getNextBits</span>(<span class="pl-c1">10</span>);<span class="pl-k">if</span>(intData<span class="pl-k">&lt;</span><span class="pl-c1">100</span>)strData<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(intData<span class="pl-k">&lt;</span><span class="pl-c1">10</span>)strData<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;length<span class="pl-k">-=</span><span class="pl-c1">3</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(length<span class="pl-k">==</span><span class="pl-c1">2</span>){intData<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getNextBits</span>(<span class="pl-c1">7</span>);<span class="pl-k">if</span>(intData<span class="pl-k">&lt;</span><span class="pl-c1">10</span>)strData<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;length<span class="pl-k">-=</span><span class="pl-c1">2</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(length<span class="pl-k">==</span><span class="pl-c1">1</span>){intData<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getNextBits</span>(<span class="pl-c1">4</span>);length<span class="pl-k">-=</span><span class="pl-c1">1</span>}strData<span class="pl-k">+=</span>intData}<span class="pl-k">while</span>(length<span class="pl-k">&gt;</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> strData};</td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">get8bitByteArray</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">dataLength</span>){<span class="pl-k">var</span> length<span class="pl-k">=</span>dataLength;<span class="pl-k">var</span> intData<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> output<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>;<span class="pl-k">do</span>{intData<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getNextBits</span>(<span class="pl-c1">8</span>);<span class="pl-smi">output</span>.<span class="pl-c1">push</span>(intData);length<span class="pl-k">--</span>}<span class="pl-k">while</span>(length<span class="pl-k">&gt;</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> output};<span class="pl-c1">this</span>.<span class="pl-en">getKanjiString</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">dataLength</span>){<span class="pl-k">var</span> length<span class="pl-k">=</span>dataLength;<span class="pl-k">var</span> intData<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> unicodeString<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">do</span>{intData<span class="pl-k">=</span><span class="pl-en">getNextBits</span>(<span class="pl-c1">13</span>);<span class="pl-k">var</span> lowerByte<span class="pl-k">=</span>intData<span class="pl-k">%</span><span class="pl-c1">192</span>;<span class="pl-k">var</span> higherByte<span class="pl-k">=</span>intData<span class="pl-k">/</span><span class="pl-c1">192</span>;<span class="pl-k">var</span> tempWord<span class="pl-k">=</span>(higherByte<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span>)<span class="pl-k">+</span>lowerByte;<span class="pl-k">var</span> shiftjisWord<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(tempWord<span class="pl-k">+</span><span class="pl-c1">33088</span><span class="pl-k">&lt;=</span><span class="pl-c1">40956</span>)shiftjisWord<span class="pl-k">=</span>tempWord<span class="pl-k">+</span><span class="pl-c1">33088</span>;<span class="pl-k">else</span> shiftjisWord<span class="pl-k">=</span>tempWord<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">49472</span>;unicodeString<span class="pl-k">+=</span><span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(shiftjisWord);length<span class="pl-k">--</span>}<span class="pl-k">while</span>(length<span class="pl-k">&gt;</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> unicodeString};<span class="pl-c1">this</span>.<span class="pl-en">__defineGetter__</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>DataByte<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">var</span> output<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>;<span class="pl-k">var</span> <span class="pl-c1">MODE_NUMBER</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> <span class="pl-c1">MODE_ROMAN_AND_NUMBER</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-k">var</span> <span class="pl-c1">MODE_8BIT_BYTE</span><span class="pl-k">=</span><span class="pl-c1">4</span>;<span class="pl-k">var</span> <span class="pl-c1">MODE_KANJI</span><span class="pl-k">=</span><span class="pl-c1">8</span>;<span class="pl-k">do</span>{<span class="pl-k">var</span> mode<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">NextMode</span>();<span class="pl-k">if</span>(mode<span class="pl-k">==</span><span class="pl-c1">0</span>)<span class="pl-k">if</span>(<span class="pl-smi">output</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span>)<span class="pl-k">break</span>;<span class="pl-k">else</span> <span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Empty data block<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(mode<span class="pl-k">!=</span><span class="pl-c1">MODE_NUMBER</span><span class="pl-k">&amp;&amp;</span>mode<span class="pl-k">!=</span><span class="pl-c1">MODE_ROMAN_AND_NUMBER</span><span class="pl-k">&amp;&amp;</span>mode<span class="pl-k">!=</span><span class="pl-c1">MODE_8BIT_BYTE</span><span class="pl-k">&amp;&amp;</span>mode<span class="pl-k">!=</span><span class="pl-c1">MODE_KANJI</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Invalid mode: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>mode<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> in (block:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">blockPointer</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> bit:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">bitPointer</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;dataLength<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getDataLength</span>(mode);<span class="pl-k">if</span>(dataLength<span class="pl-k">&lt;</span><span class="pl-c1">1</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Invalid data length: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>dataLength;<span class="pl-k">switch</span>(mode){<span class="pl-k">case</span> <span class="pl-c1">MODE_NUMBER</span>:<span class="pl-k">var</span> temp_str<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getFigureString</span>(dataLength);<span class="pl-k">var</span> ta<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-smi">temp_str</span>.<span class="pl-c1">length</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span><span class="pl-smi">temp_str</span>.<span class="pl-c1">length</span>;j<span class="pl-k">++</span>)ta[j]<span class="pl-k">=</span><span class="pl-smi">temp_str</span>.<span class="pl-c1">charCodeAt</span>(j);<span class="pl-smi">output</span>.<span class="pl-c1">push</span>(ta);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">MODE_ROMAN_AND_NUMBER</span>:<span class="pl-k">var</span> temp_str<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getRomanAndFigureString</span>(dataLength);<span class="pl-k">var</span> ta<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-smi">temp_str</span>.<span class="pl-c1">length</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span><span class="pl-smi">temp_str</span>.<span class="pl-c1">length</span>;j<span class="pl-k">++</span>)ta[j]<span class="pl-k">=</span><span class="pl-smi">temp_str</span>.<span class="pl-c1">charCodeAt</span>(j);<span class="pl-smi">output</span>.<span class="pl-c1">push</span>(ta);</td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">MODE_8BIT_BYTE</span>:<span class="pl-k">var</span> temp_sbyteArray3<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">get8bitByteArray</span>(dataLength);<span class="pl-smi">output</span>.<span class="pl-c1">push</span>(temp_sbyteArray3);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">MODE_KANJI</span>:<span class="pl-k">var</span> temp_str<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getKanjiString</span>(dataLength);<span class="pl-smi">output</span>.<span class="pl-c1">push</span>(temp_str);<span class="pl-k">break</span>}}<span class="pl-k">while</span>(<span class="pl-c1">true</span>);<span class="pl-k">return</span> output})};</td>
      </tr>
</table>

  <div class="BlobToolbar position-absolute js-file-line-actions dropdown js-menu-container js-select-menu d-none" aria-hidden="true">
    <button class="btn-octicon ml-0 px-2 p-0 bg-white border border-gray-dark rounded-1 dropdown-toggle js-menu-target" type="button" aria-expanded="false" aria-haspopup="true" aria-label="Inline file action toolbar" aria-controls="inline-file-actions">
      <svg class="octicon octicon-kebab-horizontal" viewBox="0 0 13 16" version="1.1" width="13" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M1.5 9a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z"/></svg>
    </button>
    <div class="dropdown-menu-content js-menu-content" id="inline-file-actions">
      <ul class="BlobToolbar-dropdown dropdown-menu dropdown-menu-se mt-2">
        <li><clipboard-copy class="dropdown-item" id="js-copy-lines" style="cursor:pointer;" data-original-text="Copy lines">Copy lines</clipboard-copy></li>
        <li><clipboard-copy class="dropdown-item" id="js-copy-permalink" style="cursor:pointer;" data-original-text="Copy permalink">Copy permalink</clipboard-copy></li>
        <li><a class="dropdown-item js-update-url-with-hash" id="js-view-git-blame" href="/andrastoth/webcodecamjs/blame/96fd16922fbe92ce566dfff2e1be57cac55d7b5c/js/qrcodelib.js">View git blame</a></li>
          <li><a class="dropdown-item" id="js-new-issue" href="/andrastoth/webcodecamjs/issues/new">Open new issue</a></li>
      </ul>
    </div>
  </div>

  </div>

  </div>

  <button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="d-none">Jump to Line</button>
  <div id="jump-to-line" style="display:none">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-jump-to-line-form" action="" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
      <input class="form-control linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
      <button type="submit" class="btn">Go</button>
</form>  </div>


  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>

    </div>
  </div>

  </div>

      
<div class="footer container-lg px-3" role="contentinfo">
  <div class="position-relative d-flex flex-justify-between pt-6 pb-2 mt-6 f6 text-gray border-top border-gray-light ">
    <ul class="list-style-none d-flex flex-wrap ">
      <li class="mr-3">&copy; 2018 <span title="0.27155s from unicorn-509584771-0lr1l">GitHub</span>, Inc.</li>
        <li class="mr-3"><a data-ga-click="Footer, go to terms, text:terms" href="https://github.com/site/terms">Terms</a></li>
        <li class="mr-3"><a data-ga-click="Footer, go to privacy, text:privacy" href="https://github.com/site/privacy">Privacy</a></li>
        <li class="mr-3"><a href="https://help.github.com/articles/github-security/" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li class="mr-3"><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a data-ga-click="Footer, go to help, text:help" href="https://help.github.com">Help</a></li>
    </ul>

    <a aria-label="Homepage" title="GitHub" class="footer-octicon" href="https://github.com">
      <svg height="24" class="octicon octicon-mark-github" viewBox="0 0 16 16" version="1.1" width="24" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
   <ul class="list-style-none d-flex flex-wrap ">
        <li class="mr-3"><a data-ga-click="Footer, go to contact, text:contact" href="https://github.com/contact">Contact GitHub</a></li>
      <li class="mr-3"><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li class="mr-3"><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li class="mr-3"><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li class="mr-3"><a href="https://blog.github.com" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a data-ga-click="Footer, go to about, text:about" href="https://github.com/about">About</a></li>

    </ul>
  </div>
  <div class="d-flex flex-justify-center pb-6">
    <span class="f6 text-gray-light"></span>
  </div>
</div>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <button type="button" class="flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
    You can’t perform that action at this time.
  </div>


    
    <script crossorigin="anonymous" integrity="sha512-ND8dytMkRT9WSjKCydnxt+zqWuc5E++ua212AKbBJxST19WRVBiHadyaMLJrVx71GsJsVgdmMupnpYSQ5tveoQ==" type="application/javascript" src="https://assets-cdn.github.com/assets/frameworks-8e1df5ef753f74d23d26e500300805ce.js"></script>
    
    <script crossorigin="anonymous" async="async" integrity="sha512-xly7geYKGVmr7HLBuRTXRNjK0/+WQ/+1RBQDAixTSud97XcgtOukqFU4+do58lRFmygNzwdoNMngONnO0VOl5A==" type="application/javascript" src="https://assets-cdn.github.com/assets/github-185a3d49fd3146b3003cfdf26f787db9.js"></script>
    
    
    
    
  <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
  </div>
</div>

  <div class="Popover js-hovercard-content position-absolute" style="display: none; outline: none;" tabindex="0">
  <div class="Popover-message Popover-message--bottom-left Popover-message--large Box box-shadow-large" style="width:360px;">
  </div>
</div>

<div id="hovercard-aria-description" class="sr-only">
  Press h to open a hovercard with more details.
</div>


  </body>
</html>

